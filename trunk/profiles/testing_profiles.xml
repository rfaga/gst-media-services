<?xml version="1.0" encoding="UTF-8"?>
<media-profiles>
	<audio-profile id="lame-mp3">
		<name>MP3</name>
		<description>A proprietary and older, but also popular, lossy audio format that produces larger files at lower bitrates.</description>
		
		<output-file-extension>mp3</output-file-extension>
		
		<process>
            <element id="raw2mpeg" type="required">

                <!-- recommended-elements and category works like hints for 
                required elements. Program will build a list of possible 
                elements for this xml element, and the recommended elements 
                will be the first of this list, followed by which fits on 
                these categories. -->
				<recommended-element>lame</recommended-element>
                <recommended-element>ffenc_mp3</recommended-element>

                <klass>encoder</klass>
                <klass>audio</klass>

                <sink>ANY</sink>
				<source>audio/mpeg, mpegversion=(int)1, layer=(int)3</source>

				<!-- gstms will try to find an element with all the given properties below.
				If it doesn't find, just ignore the property, but if more then one gst-element
				can be this element, the winner will be which has more properties existent.	-->
				<property id="quality" type="combobox">
					<choices default-value="5">
						<choice value="0">Best Quality</choice>
						<choice value="5">Default Quality</choice>
						<choice value="9">Worst Quality</choice>
					</choices>
				</property>
				<property id="bitrate" type="combobox" condition="not(exist(raw2mpeg.quality))">
					<choices default-value="128">
						<choice value="8">Worst quality</choice>
						<choice value="32">Low quality</choice>
						<choice value="64">Bad quality</choice>
						<choice value="128">Standard quality</choice>
						<choice value="192">Good quality</choice>
						<choice value="256">High quality</choice>
						<choice value="320">Best quality</choice>
					</choices>
				</property>
			</element>

			<element id="vbrmuxer" type="optional" condition="not(exist(raw2mpeg.bitrate))">
				<recommended-element>xingmux</recommended-element>
				<sink>audio/mpeg, mpegversion=(int)1, layer=(int)3</sink>
				<source>audio/mpeg, mpegversion=(int)1, layer=(int)3</source>
			</element>

			<element id="id3mux" type="optional">
				<recommended-element>id3v2mux</recommended-element>
				<recommended-element>id3mux</recommended-element>
				<sink>audio/mpeg, mpegversion=(int)1, layer=(int)3</sink>
				<source>application/x-id3</source>
            </element>

            <pipeline>
                <link origin="start" destiny="raw2mpeg" />
                <link origin="raw2mpeg" destiny="vbrmuxer" condition="exist(vbrmuxer)"/>
                <link origin="vbrmuxer" destiny="id3mux" condition="exist(vbrmuxer)"/>
                <link origin="raw2mpeg" destiny="id3mux" condition="not(exist(vbrmuxer))"/>
                <link origin="id3mux" destiny="end" condition="exist(id3mux)" />
                <link origin="vbrmuxer" destiny="end" condition="and(exist(vbrmuxer),not(exist(id3mux)))" />
                <link origin="raw2mpeg" destiny="end" condition="not(or(exist(vbrmuxer),exist(id3mux)))" />
            </pipeline>
		</process>
	</audio-profile>
    
	<video-profile>
		<name>XviD (MPEG-4 ISO format)</name>
		<description>A video profile</description>
		
		<output-file-extension>avi</output-file-extension>
		<plugin-needed>xvid</plugin-needed>
		
		<mimetype>video/mpeg4</mimetype>
		
		<process>
		</process>
	
	</video-profile>
</media-profiles>
