<?xml version="1.0"?>
<GST-PluginRegistry>
<plugin>
 <name>pulseaudio</name>
 <description>PulseAudio Elements Plugin</description>
 <filename>/usr/lib/gstreamer-0.10/libgstpulse.so</filename>
 <size>61952</size>
 <m32p>1205491837</m32p>
 <version>0.10.0.9.7</version>
 <license>LGPL</license>
 <source>gst-pulse</source>
 <package>pulseaudio</package>
 <origin>http://0pointer.de/lennart/projects/gst-pulse/</origin>
 <feature typename="GstElementFactory">
  <name>pulsemixer</name>
  <longname>PulseAudio Mixer</longname>
  <class>Generic/Audio</class>
  <description>Control sound input and output levels for PulseAudio</description>
  <author>Lennart Poettering</author>
  <interface>GstImplementsInterface</interface>
  <interface>GstMixer</interface>
  <interface>GstPropertyProbe</interface>
 </feature>
 <feature typename="GstElementFactory">
  <name>pulsesrc</name>
  <rank>266</rank>
  <longname>PulseAudio Audio Source</longname>
  <class>Source/Audio</class>
  <description>Captures audio from a PulseAudio server</description>
  <author>Lennart Poettering</author>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>audio/x-raw-int, endianness=(int){ 1234, 4321 }, signed=(boolean)true, width=(int)16, depth=(int)16, rate=(int)[ 1, 2147483647 ], channels=(int)[ 1, 16 ]; audio/x-raw-int, endianness=(int){ 1234, 4321 }, signed=(boolean)true, width=(int)32, depth=(int)32, rate=(int)[ 1, 2147483647 ], channels=(int)[ 1, 16 ]; audio/x-raw-float, endianness=(int){ 1234, 4321 }, width=(int)32, rate=(int)[ 1, 2147483647 ], channels=(int)[ 1, 16 ]; audio/x-raw-int, signed=(boolean)false, width=(int)8, depth=(int)8, rate=(int)[ 1, 2147483647 ], channels=(int)[ 1, 16 ]; audio/x-alaw, rate=(int)[ 1, 2147483647 ], channels=(int)[ 1, 16 ]; audio/x-mulaw, rate=(int)[ 1, 2147483647 ], channels=(int)[ 1, 16 ]</caps>
  </padtemplate>
  <interface>GstImplementsInterface</interface>
  <interface>GstMixer</interface>
 </feature>
 <feature typename="GstElementFactory">
  <name>pulsesink</name>
  <rank>266</rank>
  <longname>PulseAudio Audio Sink</longname>
  <class>Sink/Audio</class>
  <description>Plays audio to a PulseAudio server</description>
  <author>Lennart Poettering</author>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>audio/x-raw-int, endianness=(int){ 1234, 4321 }, signed=(boolean)true, width=(int)16, depth=(int)16, rate=(int)[ 1, 2147483647 ], channels=(int)[ 1, 16 ]; audio/x-raw-float, endianness=(int){ 1234, 4321 }, width=(int)32, rate=(int)[ 1, 2147483647 ], channels=(int)[ 1, 16 ]; audio/x-raw-int, endianness=(int){ 1234, 4321 }, signed=(boolean)true, width=(int)32, depth=(int)32, rate=(int)[ 1, 2147483647 ], channels=(int)[ 1, 16 ]; audio/x-raw-int, signed=(boolean)false, width=(int)8, depth=(int)8, rate=(int)[ 1, 2147483647 ], channels=(int)[ 1, 16 ]; audio/x-alaw, rate=(int)[ 1, 2147483647 ], channels=(int)[ 1, 16 ]; audio/x-mulaw, rate=(int)[ 1, 2147483647 ], channels=(int)[ 1, 16 ]</caps>
  </padtemplate>
 </feature>
</plugin>
<plugin>
 <name>tcp</name>
 <description>transfer data over the network via TCP</description>
 <filename>/usr/lib/gstreamer-0.10/libgsttcp.so</filename>
 <size>95936</size>
 <m32p>1206445014</m32p>
 <version>0.10.18</version>
 <license>LGPL</license>
 <source>gst-plugins-base</source>
 <package>GStreamer Base Plugins (Ubuntu)</package>
 <origin>https://launchpad.net/distros/ubuntu/+source/gst-plugins-base0.10</origin>
 <feature typename="GstElementFactory">
  <name>tcpclientsink</name>
  <longname>TCP client sink</longname>
  <class>Sink/Network</class>
  <description>Send data as a client over the network via TCP</description>
  <author>Thomas Vander Stichele &lt;thomas at apestaart dot org&gt;</author>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>ANY</caps>
  </padtemplate>
 </feature>
 <feature typename="GstElementFactory">
  <name>tcpclientsrc</name>
  <longname>TCP client source</longname>
  <class>Source/Network</class>
  <description>Receive data as a client over the network via TCP</description>
  <author>Thomas Vander Stichele &lt;thomas at apestaart dot org&gt;</author>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>ANY</caps>
  </padtemplate>
 </feature>
 <feature typename="GstElementFactory">
  <name>tcpserversink</name>
  <longname>TCP server sink</longname>
  <class>Sink/Network</class>
  <description>Send data as a server over the network via TCP</description>
  <author>Thomas Vander Stichele &lt;thomas at apestaart dot org&gt;</author>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>ANY</caps>
  </padtemplate>
 </feature>
 <feature typename="GstElementFactory">
  <name>tcpserversrc</name>
  <longname>TCP server source</longname>
  <class>Source/Network</class>
  <description>Receive data as a server over the network via TCP</description>
  <author>Thomas Vander Stichele &lt;thomas at apestaart dot org&gt;</author>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>ANY</caps>
  </padtemplate>
 </feature>
 <feature typename="GstElementFactory">
  <name>multifdsink</name>
  <longname>Multi filedescriptor sink</longname>
  <class>Sink/Network</class>
  <description>Send data to multiple filedescriptors</description>
  <author>Thomas Vander Stichele &lt;thomas at apestaart dot org&gt;, Wim Taymans &lt;wim@fluendo.com&gt;</author>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>ANY</caps>
  </padtemplate>
 </feature>
</plugin>
<plugin>
 <name>coreindexers</name>
 <description>GStreamer core indexers</description>
 <filename>/usr/lib/gstreamer-0.10/libgstcoreindexers.so</filename>
 <size>25888</size>
 <m32p>1206437423</m32p>
 <version>0.10.18</version>
 <license>LGPL</license>
 <source>gstreamer</source>
 <package>GStreamer (Ubuntu)</package>
 <origin>https://launchpad.net/distros/ubuntu/+source/gstreamer0.10</origin>
 <feature typename="GstIndexFactory">
  <name>memindex</name>
  <longdesc>A index that stores entries in memory</longdesc>
 </feature>
 <feature typename="GstIndexFactory">
  <name>fileindex</name>
  <longdesc>A index that stores entries in file</longdesc>
 </feature>
</plugin>
<plugin>
 <name>gdp</name>
 <description>Payload/depayload GDP packets</description>
 <filename>/usr/lib/gstreamer-0.10/libgstgdp.so</filename>
 <size>36832</size>
 <m32p>1206445013</m32p>
 <version>0.10.18</version>
 <license>LGPL</license>
 <source>gst-plugins-base</source>
 <package>GStreamer Base Plugins (Ubuntu)</package>
 <origin>https://launchpad.net/distros/ubuntu/+source/gst-plugins-base0.10</origin>
 <feature typename="GstElementFactory">
  <name>gdpdepay</name>
  <longname>GDP Depayloader</longname>
  <class>GDP/Depayloader</class>
  <description>Depayloads GStreamer Data Protocol buffers</description>
  <author>Thomas Vander Stichele &lt;thomas at apestaart dot org&gt;</author>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>application/x-gdp</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>ANY</caps>
  </padtemplate>
 </feature>
 <feature typename="GstElementFactory">
  <name>gdppay</name>
  <longname>GDP Payloader</longname>
  <class>GDP/Payloader</class>
  <description>Payloads GStreamer Data Protocol buffers</description>
  <author>Thomas Vander Stichele &lt;thomas at apestaart dot org&gt;</author>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>ANY</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>application/x-gdp</caps>
  </padtemplate>
 </feature>
</plugin>
<plugin>
 <name>playback</name>
 <description>various playback elements</description>
 <filename>/usr/lib/gstreamer-0.10/libgstplaybin.so</filename>
 <size>150016</size>
 <m32p>1206445013</m32p>
 <version>0.10.18</version>
 <license>LGPL</license>
 <source>gst-plugins-base</source>
 <package>GStreamer Base Plugins (Ubuntu)</package>
 <origin>https://launchpad.net/distros/ubuntu/+source/gst-plugins-base0.10</origin>
 <feature typename="GstElementFactory">
  <name>playbin</name>
  <longname>Player Bin</longname>
  <class>Generic/Bin/Player</class>
  <description>Autoplug and play media from an uri</description>
  <author>Wim Taymans &lt;wim.taymans@gmail.com&gt;</author>
  <interface>GstChildProxy</interface>
 </feature>
 <feature typename="GstElementFactory">
  <name>playbin2</name>
  <longname>Player Bin 2</longname>
  <class>Generic/Bin/Player</class>
  <description>Autoplug and play media from an uri</description>
  <author>Wim Taymans &lt;wim.taymans@gmail.com&gt;</author>
  <interface>GstChildProxy</interface>
 </feature>
</plugin>
<plugin>
 <name>xvimagesink</name>
 <description>XFree86 video output plugin using Xv extension</description>
 <filename>/usr/lib/gstreamer-0.10/libgstxvimagesink.so</filename>
 <size>70216</size>
 <m32p>1206445016</m32p>
 <version>0.10.18</version>
 <license>LGPL</license>
 <source>gst-plugins-base</source>
 <package>GStreamer Base Plugins (Ubuntu)</package>
 <origin>https://launchpad.net/distros/ubuntu/+source/gst-plugins-base0.10</origin>
 <feature typename="GstElementFactory">
  <name>xvimagesink</name>
  <rank>256</rank>
  <longname>Video sink</longname>
  <class>Sink/Video</class>
  <description>A Xv based videosink</description>
  <author>Julien Moutte &lt;julien@moutte.net&gt;</author>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>video/x-raw-rgb, framerate=(fraction)[ 0/1, 2147483647/1 ], width=(int)[ 1, 2147483647 ], height=(int)[ 1, 2147483647 ]; video/x-raw-yuv, framerate=(fraction)[ 0/1, 2147483647/1 ], width=(int)[ 1, 2147483647 ], height=(int)[ 1, 2147483647 ]</caps>
  </padtemplate>
  <interface>GstPropertyProbe</interface>
  <interface>GstColorBalance</interface>
  <interface>GstXOverlay</interface>
  <interface>GstNavigation</interface>
  <interface>GstImplementsInterface</interface>
 </feature>
</plugin>
<plugin>
 <name>volume</name>
 <description>plugin for controlling audio volume</description>
 <filename>/usr/lib/gstreamer-0.10/libgstvolume.so</filename>
 <size>17912</size>
 <m32p>1206445014</m32p>
 <version>0.10.18</version>
 <license>LGPL</license>
 <source>gst-plugins-base</source>
 <package>GStreamer Base Plugins (Ubuntu)</package>
 <origin>https://launchpad.net/distros/ubuntu/+source/gst-plugins-base0.10</origin>
 <feature typename="GstElementFactory">
  <name>volume</name>
  <longname>Volume</longname>
  <class>Filter/Effect/Audio</class>
  <description>Set volume on audio/raw streams</description>
  <author>Andy Wingo &lt;wingo@pobox.com&gt;</author>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>audio/x-raw-float, rate=(int)[ 1, 2147483647 ], channels=(int)[ 1, 2147483647 ], endianness=(int)1234, width=(int){ 32, 64 }; audio/x-raw-int, channels=(int)[ 1, 2147483647 ], rate=(int)[ 1, 2147483647 ], endianness=(int)1234, width=(int)8, depth=(int)8, signed=(boolean)true; audio/x-raw-int, channels=(int)[ 1, 2147483647 ], rate=(int)[ 1, 2147483647 ], endianness=(int)1234, width=(int)16, depth=(int)16, signed=(boolean)true; audio/x-raw-int, channels=(int)[ 1, 2147483647 ], rate=(int)[ 1, 2147483647 ], endianness=(int)1234, width=(int)24, depth=(int)24, signed=(boolean)true; audio/x-raw-int, channels=(int)[ 1, 2147483647 ], rate=(int)[ 1, 2147483647 ], endianness=(int)1234, width=(int)32, depth=(int)32, signed=(boolean)true</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>audio/x-raw-float, rate=(int)[ 1, 2147483647 ], channels=(int)[ 1, 2147483647 ], endianness=(int)1234, width=(int){ 32, 64 }; audio/x-raw-int, channels=(int)[ 1, 2147483647 ], rate=(int)[ 1, 2147483647 ], endianness=(int)1234, width=(int)8, depth=(int)8, signed=(boolean)true; audio/x-raw-int, channels=(int)[ 1, 2147483647 ], rate=(int)[ 1, 2147483647 ], endianness=(int)1234, width=(int)16, depth=(int)16, signed=(boolean)true; audio/x-raw-int, channels=(int)[ 1, 2147483647 ], rate=(int)[ 1, 2147483647 ], endianness=(int)1234, width=(int)24, depth=(int)24, signed=(boolean)true; audio/x-raw-int, channels=(int)[ 1, 2147483647 ], rate=(int)[ 1, 2147483647 ], endianness=(int)1234, width=(int)32, depth=(int)32, signed=(boolean)true</caps>
  </padtemplate>
  <interface>GstMixer</interface>
  <interface>GstImplementsInterface</interface>
 </feature>
</plugin>
<plugin>
 <name>decodebin</name>
 <description>decoder bin</description>
 <filename>/usr/lib/gstreamer-0.10/libgstdecodebin.so</filename>
 <size>45088</size>
 <m32p>1206445013</m32p>
 <version>0.10.18</version>
 <license>LGPL</license>
 <source>gst-plugins-base</source>
 <package>GStreamer Base Plugins (Ubuntu)</package>
 <origin>https://launchpad.net/distros/ubuntu/+source/gst-plugins-base0.10</origin>
 <feature typename="GstElementFactory">
  <name>decodebin</name>
  <longname>Decoder Bin</longname>
  <class>Generic/Bin/Decoder</class>
  <description>Autoplug and decode to raw media</description>
  <author>Wim Taymans &lt;wim.taymans@gmail.com&gt;</author>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>ANY</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>src%d</nametemplate>
   <direction>src</direction>
   <presence>sometimes</presence>
   <caps>ANY</caps>
  </padtemplate>
  <interface>GstChildProxy</interface>
 </feature>
</plugin>
<plugin>
 <name>theora</name>
 <description>Theora plugin library</description>
 <filename>/usr/lib/gstreamer-0.10/libgsttheora.so</filename>
 <size>62320</size>
 <m32p>1206445014</m32p>
 <version>0.10.18</version>
 <license>LGPL</license>
 <source>gst-plugins-base</source>
 <package>GStreamer Base Plugins (Ubuntu)</package>
 <origin>https://launchpad.net/distros/ubuntu/+source/gst-plugins-base0.10</origin>
 <feature typename="GstElementFactory">
  <name>theoradec</name>
  <rank>256</rank>
  <longname>Theora video decoder</longname>
  <class>Codec/Decoder/Video</class>
  <description>decode raw theora streams to raw YUV video</description>
  <author>Benjamin Otte &lt;in7y118@public.uni-hamburg.de&gt;, Wim Taymans &lt;wim@fluendo.com&gt;</author>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>video/x-raw-yuv, format=(fourcc)I420, framerate=(fraction)[ 0/1, 2147483647/1 ], width=(int)[ 1, 2147483647 ], height=(int)[ 1, 2147483647 ]</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>video/x-theora</caps>
  </padtemplate>
 </feature>
 <feature typename="GstElementFactory">
  <name>theoraenc</name>
  <longname>Theora video encoder</longname>
  <class>Codec/Encoder/Video</class>
  <description>encode raw YUV video to a theora stream</description>
  <author>Wim Taymans &lt;wim@fluendo.com&gt;</author>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>video/x-theora</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>video/x-raw-yuv, format=(fourcc)I420, framerate=(fraction)[ 0/1, 2147483647/1 ], width=(int)[ 1, 2147483647 ], height=(int)[ 1, 2147483647 ]</caps>
  </padtemplate>
 </feature>
 <feature typename="GstElementFactory">
  <name>theoraparse</name>
  <longname>Theora video parser</longname>
  <class>Codec/Parser/Video</class>
  <description>parse raw theora streams</description>
  <author>Andy Wingo &lt;wingo@pobox.com&gt;</author>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>video/x-theora</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>video/x-theora</caps>
  </padtemplate>
 </feature>
</plugin>
<plugin>
 <name>audiorate</name>
 <description>Adjusts audio frames</description>
 <filename>/usr/lib/gstreamer-0.10/libgstaudiorate.so</filename>
 <size>19936</size>
 <m32p>1206445013</m32p>
 <version>0.10.18</version>
 <license>LGPL</license>
 <source>gst-plugins-base</source>
 <package>GStreamer Base Plugins (Ubuntu)</package>
 <origin>https://launchpad.net/distros/ubuntu/+source/gst-plugins-base0.10</origin>
 <feature typename="GstElementFactory">
  <name>audiorate</name>
  <longname>Audio rate adjuster</longname>
  <class>Filter/Effect/Audio</class>
  <description>Drops/duplicates/adjusts timestamps on audio samples to make a perfect stream</description>
  <author>Wim Taymans &lt;wim@fluendo.com&gt;</author>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>audio/x-raw-int, rate=(int)[ 1, 2147483647 ], channels=(int)[ 1, 2147483647 ], endianness=(int){ 1234, 4321 }, width=(int){ 8, 16, 24, 32 }, depth=(int)[ 1, 32 ], signed=(boolean){ true, false }; audio/x-raw-float, rate=(int)[ 1, 2147483647 ], channels=(int)[ 1, 2147483647 ], endianness=(int){ 1234, 4321 }, width=(int){ 32, 64 }</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>audio/x-raw-int, rate=(int)[ 1, 2147483647 ], channels=(int)[ 1, 2147483647 ], endianness=(int){ 1234, 4321 }, width=(int){ 8, 16, 24, 32 }, depth=(int)[ 1, 32 ], signed=(boolean){ true, false }; audio/x-raw-float, rate=(int)[ 1, 2147483647 ], channels=(int)[ 1, 2147483647 ], endianness=(int){ 1234, 4321 }, width=(int){ 32, 64 }</caps>
  </padtemplate>
 </feature>
</plugin>
<plugin>
 <name>videotestsrc</name>
 <description>Creates a test video stream</description>
 <filename>/usr/lib/gstreamer-0.10/libgstvideotestsrc.so</filename>
 <size>37968</size>
 <m32p>1206445014</m32p>
 <version>0.10.18</version>
 <license>LGPL</license>
 <source>gst-plugins-base</source>
 <package>GStreamer Base Plugins (Ubuntu)</package>
 <origin>https://launchpad.net/distros/ubuntu/+source/gst-plugins-base0.10</origin>
 <feature typename="GstElementFactory">
  <name>videotestsrc</name>
  <longname>Video test source</longname>
  <class>Source/Video</class>
  <description>Creates a test video stream</description>
  <author>David A. Schleef &lt;ds@schleef.org&gt;</author>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>video/x-raw-yuv, format=(fourcc)YUY2, width=(int)[ 1, 2147483647 ], height=(int)[ 1, 2147483647 ], framerate=(fraction)[ 0/1, 2147483647/1 ]; video/x-raw-yuv, format=(fourcc)UYVY, width=(int)[ 1, 2147483647 ], height=(int)[ 1, 2147483647 ], framerate=(fraction)[ 0/1, 2147483647/1 ]; video/x-raw-yuv, format=(fourcc)Y422, width=(int)[ 1, 2147483647 ], height=(int)[ 1, 2147483647 ], framerate=(fraction)[ 0/1, 2147483647/1 ]; video/x-raw-yuv, format=(fourcc)UYNV, width=(int)[ 1, 2147483647 ], height=(int)[ 1, 2147483647 ], framerate=(fraction)[ 0/1, 2147483647/1 ]; video/x-raw-yuv, format=(fourcc)YVYU, width=(int)[ 1, 2147483647 ], height=(int)[ 1, 2147483647 ], framerate=(fraction)[ 0/1, 2147483647/1 ]; video/x-raw-yuv, format=(fourcc)AYUV, width=(int)[ 1, 2147483647 ], height=(int)[ 1, 2147483647 ], framerate=(fraction)[ 0/1, 2147483647/1 ]; video/x-raw-yuv, format=(fourcc)IYU2, width=(int)[ 1, 2147483647 ], height=(int)[ 1, 2147483647 ], framerate=(fraction)[ 0/1, 2147483647/1 ]; video/x-raw-yuv, format=(fourcc)YVU9, width=(int)[ 1, 2147483647 ], height=(int)[ 1, 2147483647 ], framerate=(fraction)[ 0/1, 2147483647/1 ]; video/x-raw-yuv, format=(fourcc)YUV9, width=(int)[ 1, 2147483647 ], height=(int)[ 1, 2147483647 ], framerate=(fraction)[ 0/1, 2147483647/1 ]; video/x-raw-yuv, format=(fourcc)YV12, width=(int)[ 1, 2147483647 ], height=(int)[ 1, 2147483647 ], framerate=(fraction)[ 0/1, 2147483647/1 ]; video/x-raw-yuv, format=(fourcc)I420, width=(int)[ 1, 2147483647 ], height=(int)[ 1, 2147483647 ], framerate=(fraction)[ 0/1, 2147483647/1 ]; video/x-raw-yuv, format=(fourcc)Y41B, width=(int)[ 1, 2147483647 ], height=(int)[ 1, 2147483647 ], framerate=(fraction)[ 0/1, 2147483647/1 ]; video/x-raw-yuv, format=(fourcc)Y42B, width=(int)[ 1, 2147483647 ], height=(int)[ 1, 2147483647 ], framerate=(fraction)[ 0/1, 2147483647/1 ]; video/x-raw-yuv, format=(fourcc)Y800, width=(int)[ 1, 2147483647 ], height=(int)[ 1, 2147483647 ], framerate=(fraction)[ 0/1, 2147483647/1 ]; video/x-raw-rgb, bpp=(int)32, endianness=(int)4321, depth=(int)24, red_mask=(int)16711680, green_mask=(int)65280, blue_mask=(int)255, width=(int)[ 1, 2147483647 ], height=(int)[ 1, 2147483647 ], framerate=(fraction)[ 0/1, 2147483647/1 ]; video/x-raw-rgb, bpp=(int)32, endianness=(int)4321, depth=(int)24, red_mask=(int)255, green_mask=(int)65280, blue_mask=(int)16711680, width=(int)[ 1, 2147483647 ], height=(int)[ 1, 2147483647 ], framerate=(fraction)[ 0/1, 2147483647/1 ]; video/x-raw-rgb, bpp=(int)32, endianness=(int)4321, depth=(int)24, red_mask=(int)-16777216, green_mask=(int)16711680, blue_mask=(int)65280, width=(int)[ 1, 2147483647 ], height=(int)[ 1, 2147483647 ], framerate=(fraction)[ 0/1, 2147483647/1 ]; video/x-raw-rgb, bpp=(int)32, endianness=(int)4321, depth=(int)24, red_mask=(int)65280, green_mask=(int)16711680, blue_mask=(int)-16777216, width=(int)[ 1, 2147483647 ], height=(int)[ 1, 2147483647 ], framerate=(fraction)[ 0/1, 2147483647/1 ]; video/x-raw-rgb, bpp=(int)32, endianness=(int)4321, depth=(int)32, red_mask=(int)16711680, green_mask=(int)65280, blue_mask=(int)255, alpha_mask=(int)-16777216, width=(int)[ 1, 2147483647 ], height=(int)[ 1, 2147483647 ], framerate=(fraction)[ 0/1, 2147483647/1 ]; video/x-raw-rgb, bpp=(int)32, endianness=(int)4321, depth=(int)32, red_mask=(int)255, green_mask=(int)65280, blue_mask=(int)16711680, alpha_mask=(int)-16777216, width=(int)[ 1, 2147483647 ], height=(int)[ 1, 2147483647 ], framerate=(fraction)[ 0/1, 2147483647/1 ]; video/x-raw-rgb, bpp=(int)32, endianness=(int)4321, depth=(int)32, red_mask=(int)-16777216, green_mask=(int)16711680, blue_mask=(int)65280, alpha_mask=(int)255, width=(int)[ 1, 2147483647 ], height=(int)[ 1, 2147483647 ], framerate=(fraction)[ 0/1, 2147483647/1 ]; video/x-raw-rgb, bpp=(int)32, endianness=(int)4321, depth=(int)32, red_mask=(int)65280, green_mask=(int)16711680, blue_mask=(int)-16777216, alpha_mask=(int)255, width=(int)[ 1, 2147483647 ], height=(int)[ 1, 2147483647 ], framerate=(fraction)[ 0/1, 2147483647/1 ]; video/x-raw-rgb, bpp=(int)24, endianness=(int)4321, depth=(int)24, red_mask=(int)16711680, green_mask=(int)65280, blue_mask=(int)255, width=(int)[ 1, 2147483647 ], height=(int)[ 1, 2147483647 ], framerate=(fraction)[ 0/1, 2147483647/1 ]; video/x-raw-rgb, bpp=(int)24, endianness=(int)4321, depth=(int)24, red_mask=(int)255, green_mask=(int)65280, blue_mask=(int)16711680, width=(int)[ 1, 2147483647 ], height=(int)[ 1, 2147483647 ], framerate=(fraction)[ 0/1, 2147483647/1 ]; video/x-raw-rgb, bpp=(int)16, endianness=(int)1234, depth=(int)16, red_mask=(int)63488, green_mask=(int)2016, blue_mask=(int)31, width=(int)[ 1, 2147483647 ], height=(int)[ 1, 2147483647 ], framerate=(fraction)[ 0/1, 2147483647/1 ]; video/x-raw-rgb, bpp=(int)16, endianness=(int)1234, depth=(int)15, red_mask=(int)31744, green_mask=(int)992, blue_mask=(int)31, width=(int)[ 1, 2147483647 ], height=(int)[ 1, 2147483647 ], framerate=(fraction)[ 0/1, 2147483647/1 ]; video/x-raw-bayer, width=(int)[ 1, 2147483647 ], height=(int)[ 1, 2147483647 ], framerate=(fraction)[ 0/1, 2147483647/1 ]</caps>
  </padtemplate>
 </feature>
</plugin>
<plugin>
 <name>video4linux</name>
 <description>elements for Video 4 Linux</description>
 <filename>/usr/lib/gstreamer-0.10/libgstvideo4linux.so</filename>
 <size>82816</size>
 <m32p>1206445014</m32p>
 <version>0.10.18</version>
 <license>LGPL</license>
 <source>gst-plugins-base</source>
 <package>GStreamer Base Plugins (Ubuntu)</package>
 <origin>https://launchpad.net/distros/ubuntu/+source/gst-plugins-base0.10</origin>
 <feature typename="GstElementFactory">
  <name>v4lsrc</name>
  <longname>Video (video4linux/raw) Source</longname>
  <class>Source/Video</class>
  <description>Reads raw frames from a video4linux device</description>
  <author>Ronald Bultje &lt;rbultje@ronald.bitfreak.net&gt;</author>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>ANY</caps>
  </padtemplate>
  <interface>GstTuner</interface>
  <interface>GstPropertyProbe</interface>
  <interface>GstColorBalance</interface>
  <interface>GstXOverlay</interface>
  <interface>GstImplementsInterface</interface>
 </feature>
</plugin>
<plugin>
 <name>adder</name>
 <description>Adds multiple streams</description>
 <filename>/usr/lib/gstreamer-0.10/libgstadder.so</filename>
 <size>24288</size>
 <m32p>1206445013</m32p>
 <version>0.10.18</version>
 <license>LGPL</license>
 <source>gst-plugins-base</source>
 <package>GStreamer Base Plugins (Ubuntu)</package>
 <origin>https://launchpad.net/distros/ubuntu/+source/gst-plugins-base0.10</origin>
 <feature typename="GstElementFactory">
  <name>adder</name>
  <longname>Adder</longname>
  <class>Generic/Audio</class>
  <description>Add N audio channels together</description>
  <author>Thomas &lt;thomas@apestaart.org&gt;</author>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>audio/x-raw-int, rate=(int)[ 1, 2147483647 ], channels=(int)[ 1, 2147483647 ], endianness=(int){ 1234, 4321 }, width=(int){ 8, 16, 24, 32 }, depth=(int)[ 1, 32 ], signed=(boolean){ true, false }; audio/x-raw-float, rate=(int)[ 1, 2147483647 ], channels=(int)[ 1, 2147483647 ], endianness=(int){ 1234, 4321 }, width=(int){ 32, 64 }</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>sink%d</nametemplate>
   <direction>sink</direction>
   <presence>request</presence>
   <caps>audio/x-raw-int, rate=(int)[ 1, 2147483647 ], channels=(int)[ 1, 2147483647 ], endianness=(int){ 1234, 4321 }, width=(int){ 8, 16, 24, 32 }, depth=(int)[ 1, 32 ], signed=(boolean){ true, false }; audio/x-raw-float, rate=(int)[ 1, 2147483647 ], channels=(int)[ 1, 2147483647 ], endianness=(int){ 1234, 4321 }, width=(int){ 32, 64 }</caps>
  </padtemplate>
 </feature>
</plugin>
<plugin>
 <name>libvisual</name>
 <description>libvisual visualization plugins</description>
 <filename>/usr/lib/gstreamer-0.10/libgstlibvisual.so</filename>
 <size>26304</size>
 <m32p>1206445013</m32p>
 <version>0.10.18</version>
 <license>LGPL</license>
 <source>gst-plugins-base</source>
 <package>GStreamer Base Plugins (Ubuntu)</package>
 <origin>https://launchpad.net/distros/ubuntu/+source/gst-plugins-base0.10</origin>
</plugin>
<plugin>
 <name>queue2</name>
 <description>Queue newer version</description>
 <filename>/usr/lib/gstreamer-0.10/libgstqueue2.so</filename>
 <size>50272</size>
 <m32p>1206445013</m32p>
 <version>0.10.18</version>
 <license>LGPL</license>
 <source>gst-plugins-base</source>
 <package>GStreamer Base Plugins (Ubuntu)</package>
 <origin>https://launchpad.net/distros/ubuntu/+source/gst-plugins-base0.10</origin>
 <feature typename="GstElementFactory">
  <name>queue2</name>
  <longname>Queue</longname>
  <class>Generic</class>
  <description>Simple data queue</description>
  <author>Erik Walthinsen &lt;omega@cse.ogi.edu&gt;, Wim Taymans &lt;wim.taymans@gmail.com&gt;</author>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>ANY</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>ANY</caps>
  </padtemplate>
 </feature>
</plugin>
<plugin>
 <name>audioconvert</name>
 <description>Convert audio to different formats</description>
 <filename>/usr/lib/gstreamer-0.10/libgstaudioconvert.so</filename>
 <size>62208</size>
 <m32p>1206445013</m32p>
 <version>0.10.18</version>
 <license>LGPL</license>
 <source>gst-plugins-base</source>
 <package>GStreamer Base Plugins (Ubuntu)</package>
 <origin>https://launchpad.net/distros/ubuntu/+source/gst-plugins-base0.10</origin>
 <feature typename="GstElementFactory">
  <name>audioconvert</name>
  <rank>256</rank>
  <longname>Audio converter</longname>
  <class>Filter/Converter/Audio</class>
  <description>Convert audio to different formats</description>
  <author>Benjamin Otte &lt;in7y118@public.uni-hamburg.de&gt;</author>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>audio/x-raw-float, rate=(int)[ 1, 2147483647 ], channels=(int)[ 1, 8 ], endianness=(int){ 1234, 4321 }, width=(int)64; audio/x-raw-float, rate=(int)[ 1, 2147483647 ], channels=(int)[ 1, 8 ], endianness=(int){ 1234, 4321 }, width=(int)32; audio/x-raw-int, rate=(int)[ 1, 2147483647 ], channels=(int)[ 1, 8 ], endianness=(int){ 1234, 4321 }, width=(int)32, depth=(int)[ 1, 32 ], signed=(boolean){ true, false }; audio/x-raw-int, rate=(int)[ 1, 2147483647 ], channels=(int)[ 1, 8 ], endianness=(int){ 1234, 4321 }, width=(int)24, depth=(int)[ 1, 24 ], signed=(boolean){ true, false }; audio/x-raw-int, rate=(int)[ 1, 2147483647 ], channels=(int)[ 1, 8 ], endianness=(int){ 1234, 4321 }, width=(int)16, depth=(int)[ 1, 16 ], signed=(boolean){ true, false }; audio/x-raw-int, rate=(int)[ 1, 2147483647 ], channels=(int)[ 1, 8 ], endianness=(int){ 1234, 4321 }, width=(int)8, depth=(int)[ 1, 8 ], signed=(boolean){ true, false }</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>audio/x-raw-float, rate=(int)[ 1, 2147483647 ], channels=(int)[ 1, 8 ], endianness=(int){ 1234, 4321 }, width=(int)64; audio/x-raw-float, rate=(int)[ 1, 2147483647 ], channels=(int)[ 1, 8 ], endianness=(int){ 1234, 4321 }, width=(int)32; audio/x-raw-int, rate=(int)[ 1, 2147483647 ], channels=(int)[ 1, 8 ], endianness=(int){ 1234, 4321 }, width=(int)32, depth=(int)[ 1, 32 ], signed=(boolean){ true, false }; audio/x-raw-int, rate=(int)[ 1, 2147483647 ], channels=(int)[ 1, 8 ], endianness=(int){ 1234, 4321 }, width=(int)24, depth=(int)[ 1, 24 ], signed=(boolean){ true, false }; audio/x-raw-int, rate=(int)[ 1, 2147483647 ], channels=(int)[ 1, 8 ], endianness=(int){ 1234, 4321 }, width=(int)16, depth=(int)[ 1, 16 ], signed=(boolean){ true, false }; audio/x-raw-int, rate=(int)[ 1, 2147483647 ], channels=(int)[ 1, 8 ], endianness=(int){ 1234, 4321 }, width=(int)8, depth=(int)[ 1, 8 ], signed=(boolean){ true, false }</caps>
  </padtemplate>
 </feature>
</plugin>
<plugin>
 <name>vorbis</name>
 <description>Vorbis plugin library</description>
 <filename>/usr/lib/gstreamer-0.10/libgstvorbis.so</filename>
 <size>70512</size>
 <m32p>1206445014</m32p>
 <version>0.10.18</version>
 <license>LGPL</license>
 <source>gst-plugins-base</source>
 <package>GStreamer Base Plugins (Ubuntu)</package>
 <origin>https://launchpad.net/distros/ubuntu/+source/gst-plugins-base0.10</origin>
 <feature typename="GstElementFactory">
  <name>vorbisenc</name>
  <longname>Vorbis audio encoder</longname>
  <class>Codec/Encoder/Audio</class>
  <description>Encodes audio in Vorbis format</description>
  <author>Monty &lt;monty@xiph.org&gt;, Wim Taymans &lt;wim@fluendo.com&gt;</author>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>audio/x-raw-float, rate=(int)[ 1, 200000 ], channels=(int)[ 1, 256 ], endianness=(int)1234, width=(int)32</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>audio/x-vorbis</caps>
  </padtemplate>
  <interface>GstTagSetter</interface>
 </feature>
 <feature typename="GstElementFactory">
  <name>vorbisdec</name>
  <rank>256</rank>
  <longname>Vorbis audio decoder</longname>
  <class>Codec/Decoder/Audio</class>
  <description>decode raw vorbis streams to float audio</description>
  <author>Benjamin Otte &lt;in7y118@public.uni-hamburg.de&gt;</author>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>audio/x-raw-float, rate=(int)[ 1, 2147483647 ], channels=(int)[ 1, 256 ], endianness=(int)1234, width=(int)32</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>audio/x-vorbis</caps>
  </padtemplate>
 </feature>
 <feature typename="GstElementFactory">
  <name>vorbisparse</name>
  <longname>VorbisParse</longname>
  <class>Codec/Parser/Audio</class>
  <description>parse raw vorbis streams</description>
  <author>Thomas Vander Stichele &lt;thomas at apestaart dot org&gt;</author>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>audio/x-vorbis</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>audio/x-vorbis</caps>
  </padtemplate>
 </feature>
 <feature typename="GstElementFactory">
  <name>vorbistag</name>
  <longname>VorbisTag</longname>
  <class>Formatter/Metadata</class>
  <description>Retags vorbis streams</description>
  <author>James Livingston &lt;doclivingston@gmail.com&gt;</author>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>audio/x-vorbis</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>audio/x-vorbis</caps>
  </padtemplate>
  <interface>GstTagSetter</interface>
 </feature>
</plugin>
<plugin>
 <name>ogg</name>
 <description>ogg stream manipulation (info about ogg: http://xiph.org)</description>
 <filename>/usr/lib/gstreamer-0.10/libgstogg.so</filename>
 <size>120416</size>
 <m32p>1206445013</m32p>
 <version>0.10.18</version>
 <license>LGPL</license>
 <source>gst-plugins-base</source>
 <package>GStreamer Base Plugins (Ubuntu)</package>
 <origin>https://launchpad.net/distros/ubuntu/+source/gst-plugins-base0.10</origin>
 <feature typename="GstElementFactory">
  <name>oggdemux</name>
  <rank>256</rank>
  <longname>Ogg demuxer</longname>
  <class>Codec/Demuxer</class>
  <description>demux ogg streams (info about ogg: http://xiph.org)</description>
  <author>Wim Taymans &lt;wim@fluendo.com&gt;</author>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>application/ogg; application/x-annodex</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>src_%d</nametemplate>
   <direction>src</direction>
   <presence>sometimes</presence>
   <caps>ANY</caps>
  </padtemplate>
 </feature>
 <feature typename="GstElementFactory">
  <name>oggmux</name>
  <longname>Ogg muxer</longname>
  <class>Codec/Muxer</class>
  <description>mux ogg streams (info about ogg: http://xiph.org)</description>
  <author>Wim Taymans &lt;wim@fluendo.com&gt;</author>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>application/ogg</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>sink_%d</nametemplate>
   <direction>sink</direction>
   <presence>request</presence>
   <caps>video/x-theora; audio/x-vorbis; audio/x-flac; audio/x-speex; application/x-ogm-video; application/x-ogm-audio; video/x-dirac; video/x-smoke; text/x-cmml, encoded=(boolean)true</caps>
  </padtemplate>
 </feature>
 <feature typename="GstElementFactory">
  <name>ogmaudioparse</name>
  <rank>256</rank>
  <longname>OGM audio stream parser</longname>
  <class>Codec/Decoder/Audio</class>
  <description>parse an OGM audio header and stream</description>
  <author>Ronald Bultje &lt;rbultje@ronald.bitfreak.net&gt;</author>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>application/x-ogm-audio</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>sometimes</presence>
   <caps>audio/ms-gsm, rate=(int)[ 1000, 96000 ], channels=(int)[ 1, 2 ]; audio/mpeg, mpegversion=(int)1, layer=(int)3, rate=(int)[ 8000, 48000 ], channels=(int)[ 1, 2 ]; audio/mpeg, mpegversion=(int)1, layer=(int)2, rate=(int)[ 16000, 48000 ], channels=(int)[ 1, 2 ]; audio/x-raw-int, endianness=(int)1234, signed=(boolean){ true, false }, width=(int){ 8, 16, 24, 32 }, depth=(int)[ 1, 32 ], rate=(int)[ 1000, 96000 ], channels=(int)[ 1, 8 ]; audio/x-vorbis, rate=(int)[ 1000, 96000 ], channels=(int)[ 1, 2 ]; audio/x-ac3, rate=(int)[ 1000, 96000 ], channels=(int)[ 1, 6 ]; audio/x-dts; audio/mpeg, mpegversion=(int)4, rate=(int)[ 1000, 96000 ], channels=(int)[ 1, 8 ]; audio/x-alaw, rate=(int)[ 1000, 48000 ], channels=(int)[ 1, 2 ]; audio/x-mulaw, rate=(int)[ 1000, 48000 ], channels=(int)[ 1, 2 ]; audio/x-wms, bitrate=(int)[ 0, 2147483647 ], rate=(int)[ 1000, 96000 ], channels=(int)[ 1, 2 ], block_align=(int)[ 1, 2147483647 ]; audio/x-adpcm, layout=(string)microsoft, rate=(int)[ 1000, 96000 ], channels=(int)[ 1, 2 ], block_align=(int)[ 1, 2147483647 ]; audio/x-adpcm, layout=(string)dvi, rate=(int)[ 1000, 48000 ], channels=(int)[ 1, 2 ], block_align=(int)[ 1, 2147483647 ]; audio/x-wma, wmaversion=(int)1, bitrate=(int)[ 0, 2147483647 ], rate=(int)[ 1000, 96000 ], channels=(int)[ 1, 6 ], block_align=(int)[ 1, 2147483647 ]; audio/x-wma, wmaversion=(int)2, bitrate=(int)[ 0, 2147483647 ], rate=(int)[ 1000, 96000 ], channels=(int)[ 1, 6 ], block_align=(int)[ 1, 2147483647 ]; audio/x-wma, wmaversion=(int)3, bitrate=(int)[ 0, 2147483647 ], rate=(int)[ 1000, 96000 ], channels=(int)[ 1, 6 ], block_align=(int)[ 1, 2147483647 ]; audio/x-vnd.sony.atrac3, rate=(int)[ 1000, 96000 ], channels=(int)[ 1, 2 ]; audio/x-raw-float, endianness=(int)1234, width=(int){ 32, 64 }, rate=(int)[ 1000, 96000 ], channels=(int)[ 1, 8 ]; audio/x-voxware, voxwaretype=(int)98, rate=(int)[ 1000, 96000 ], channels=(int)[ 1, 2 ]; application/x-ogg-avi</caps>
  </padtemplate>
 </feature>
 <feature typename="GstElementFactory">
  <name>ogmvideoparse</name>
  <rank>256</rank>
  <longname>OGM video stream parser</longname>
  <class>Codec/Decoder/Video</class>
  <description>parse an OGM video header and stream</description>
  <author>Ronald Bultje &lt;rbultje@ronald.bitfreak.net&gt;</author>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>application/x-ogm-video</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>sometimes</presence>
   <caps>video/x-3ivx, framerate=(fraction)[ 0/1, 2147483647/1 ], width=(int)[ 16, 4096 ], height=(int)[ 16, 4096 ]; video/x-asus, asusversion=(int)1, framerate=(fraction)[ 0/1, 2147483647/1 ], width=(int)[ 16, 4096 ], height=(int)[ 16, 4096 ]; video/x-asus, asusversion=(int)2, framerate=(fraction)[ 0/1, 2147483647/1 ], width=(int)[ 16, 4096 ], height=(int)[ 16, 4096 ]; video/x-cirrus-logic-accupak, framerate=(fraction)[ 0/1, 2147483647/1 ], width=(int)[ 16, 4096 ], height=(int)[ 16, 4096 ]; video/x-compressed-yuv, framerate=(fraction)[ 0/1, 2147483647/1 ], width=(int)[ 16, 4096 ], height=(int)[ 16, 4096 ]; video/x-raw-rgb, bpp=(int){ 8, 24 }, depth=(int){ 8, 24 }, framerate=(fraction)[ 0/1, 2147483647/1 ], width=(int)[ 16, 4096 ], height=(int)[ 16, 4096 ]; video/x-divx, divxversion=(int)3, framerate=(fraction)[ 0/1, 2147483647/1 ], width=(int)[ 16, 4096 ], height=(int)[ 16, 4096 ]; video/x-divx, divxversion=(int)4, framerate=(fraction)[ 0/1, 2147483647/1 ], width=(int)[ 16, 4096 ], height=(int)[ 16, 4096 ]; video/x-truemotion, trueversion=(int)1, framerate=(fraction)[ 0/1, 2147483647/1 ], width=(int)[ 16, 4096 ], height=(int)[ 16, 4096 ]; video/x-dv, systemstream=(boolean)false, framerate=(fraction)[ 0/1, 2147483647/1 ], width=(int)[ 16, 4096 ], height=(int)[ 16, 4096 ]; video/x-divx, divxversion=(int)5, framerate=(fraction)[ 0/1, 2147483647/1 ], width=(int)[ 16, 4096 ], height=(int)[ 16, 4096 ]; video/x-flash-video, flvversion=(int)1, framerate=(fraction)[ 0/1, 2147483647/1 ], width=(int)[ 16, 4096 ], height=(int)[ 16, 4096 ]; video/x-h263, variant=(string)itu, framerate=(fraction)[ 0/1, 2147483647/1 ], width=(int)[ 16, 4096 ], height=(int)[ 16, 4096 ]; video/x-h264, variant=(string)itu, framerate=(fraction)[ 0/1, 2147483647/1 ], width=(int)[ 16, 4096 ], height=(int)[ 16, 4096 ]; video/x-huffyuv, framerate=(fraction)[ 0/1, 2147483647/1 ], width=(int)[ 16, 4096 ], height=(int)[ 16, 4096 ]; video/x-intel-h263, variant=(string)intel, framerate=(fraction)[ 0/1, 2147483647/1 ], width=(int)[ 16, 4096 ], height=(int)[ 16, 4096 ]; video/x-raw-yuv, format=(fourcc)I420, framerate=(fraction)[ 0/1, 2147483647/1 ], width=(int)[ 16, 4096 ], height=(int)[ 16, 4096 ]; video/x-indeo, indeoversion=(int)3, framerate=(fraction)[ 0/1, 2147483647/1 ], width=(int)[ 16, 4096 ], height=(int)[ 16, 4096 ]; video/x-indeo, indeoversion=(int)4, framerate=(fraction)[ 0/1, 2147483647/1 ], width=(int)[ 16, 4096 ], height=(int)[ 16, 4096 ]; video/x-indeo, indeoversion=(int)5, framerate=(fraction)[ 0/1, 2147483647/1 ], width=(int)[ 16, 4096 ], height=(int)[ 16, 4096 ]; video/x-h263, variant=(string)lead, framerate=(fraction)[ 0/1, 2147483647/1 ], width=(int)[ 16, 4096 ], height=(int)[ 16, 4096 ]; video/x-h263, variant=(string)microsoft, framerate=(fraction)[ 0/1, 2147483647/1 ], width=(int)[ 16, 4096 ], height=(int)[ 16, 4096 ]; video/mpeg, mpegversion=(int)4, framerate=(fraction)[ 0/1, 2147483647/1 ], width=(int)[ 16, 4096 ], height=(int)[ 16, 4096 ]; image/jpeg, framerate=(fraction)[ 0/1, 2147483647/1 ], width=(int)[ 16, 4096 ], height=(int)[ 16, 4096 ]; video/x-msmpeg, msmpegversion=(int)42, framerate=(fraction)[ 0/1, 2147483647/1 ], width=(int)[ 16, 4096 ], height=(int)[ 16, 4096 ]; video/x-msmpeg, msmpegversion=(int)43, framerate=(fraction)[ 0/1, 2147483647/1 ], width=(int)[ 16, 4096 ], height=(int)[ 16, 4096 ]; video/mpeg, systemstream=(boolean)false, mpegversion=(int)1, framerate=(fraction)[ 0/1, 2147483647/1 ], width=(int)[ 16, 4096 ], height=(int)[ 16, 4096 ]; video/mpeg, systemstream=(boolean)false, mpegversion=(int)2, framerate=(fraction)[ 0/1, 2147483647/1 ], width=(int)[ 16, 4096 ], height=(int)[ 16, 4096 ]; video/x-msmpeg, msmpegversion=(int)41, framerate=(fraction)[ 0/1, 2147483647/1 ], width=(int)[ 16, 4096 ], height=(int)[ 16, 4096 ]; video/x-mszh, framerate=(fraction)[ 0/1, 2147483647/1 ], width=(int)[ 16, 4096 ], height=(int)[ 16, 4096 ]; image/png, framerate=(fraction)[ 0/1, 2147483647/1 ], width=(int)[ 16, 4096 ], height=(int)[ 16, 4096 ]; video/x-rle, layout=(string)microsoft, depth=(int)[ 1, 64 ], framerate=(fraction)[ 0/1, 2147483647/1 ], width=(int)[ 16, 4096 ], height=(int)[ 16, 4096 ]; video/x-indeo, indeoversion=(int)2, framerate=(fraction)[ 0/1, 2147483647/1 ], width=(int)[ 16, 4096 ], height=(int)[ 16, 4096 ]; video/sp5x, framerate=(fraction)[ 0/1, 2147483647/1 ], width=(int)[ 16, 4096 ], height=(int)[ 16, 4096 ]; video/x-truemotion, trueversion=(int)2, framerate=(fraction)[ 0/1, 2147483647/1 ], width=(int)[ 16, 4096 ], height=(int)[ 16, 4096 ]; video/x-camtasia, framerate=(fraction)[ 0/1, 2147483647/1 ], width=(int)[ 16, 4096 ], height=(int)[ 16, 4096 ]; video/x-ultimotion, framerate=(fraction)[ 0/1, 2147483647/1 ], width=(int)[ 16, 4096 ], height=(int)[ 16, 4096 ]; video/x-ati-vcr, vcrversion=(int)1, framerate=(fraction)[ 0/1, 2147483647/1 ], width=(int)[ 16, 4096 ], height=(int)[ 16, 4096 ]; video/x-ati-vcr, vcrversion=(int)2, framerate=(fraction)[ 0/1, 2147483647/1 ], width=(int)[ 16, 4096 ], height=(int)[ 16, 4096 ]; video/x-h263, variant=(string)vdolive, framerate=(fraction)[ 0/1, 2147483647/1 ], width=(int)[ 16, 4096 ], height=(int)[ 16, 4096 ]; video/x-h263, variant=(string)vivo, framerate=(fraction)[ 0/1, 2147483647/1 ], width=(int)[ 16, 4096 ], height=(int)[ 16, 4096 ]; video/x-vmnc, version=(int)1, framerate=(fraction)[ 0/1, 2147483647/1 ], width=(int)[ 16, 4096 ], height=(int)[ 16, 4096 ]; video/x-vp3, framerate=(fraction)[ 0/1, 2147483647/1 ], width=(int)[ 16, 4096 ], height=(int)[ 16, 4096 ]; video/x-h264, variant=(string)videosoft, framerate=(fraction)[ 0/1, 2147483647/1 ], width=(int)[ 16, 4096 ], height=(int)[ 16, 4096 ]; video/x-wmv, wmvversion=(int)1, framerate=(fraction)[ 0/1, 2147483647/1 ], width=(int)[ 16, 4096 ], height=(int)[ 16, 4096 ]; video/x-wmv, wmvversion=(int)2, framerate=(fraction)[ 0/1, 2147483647/1 ], width=(int)[ 16, 4096 ], height=(int)[ 16, 4096 ]; video/x-wmv, wmvversion=(int)3, framerate=(fraction)[ 0/1, 2147483647/1 ], width=(int)[ 16, 4096 ], height=(int)[ 16, 4096 ]; video/x-xvid, framerate=(fraction)[ 0/1, 2147483647/1 ], width=(int)[ 16, 4096 ], height=(int)[ 16, 4096 ]; video/x-xan, wcversion=(int)4, framerate=(fraction)[ 0/1, 2147483647/1 ], width=(int)[ 16, 4096 ], height=(int)[ 16, 4096 ]; video/x-raw-yuv, format=(fourcc)YUY2, framerate=(fraction)[ 0/1, 2147483647/1 ], width=(int)[ 16, 4096 ], height=(int)[ 16, 4096 ]; video/x-raw-yuv, format=(fourcc)YVU9, framerate=(fraction)[ 0/1, 2147483647/1 ], width=(int)[ 16, 4096 ], height=(int)[ 16, 4096 ]; video/x-zlib, framerate=(fraction)[ 0/1, 2147483647/1 ], width=(int)[ 16, 4096 ], height=(int)[ 16, 4096 ]; video/x-cinepak, framerate=(fraction)[ 0/1, 2147483647/1 ], width=(int)[ 16, 4096 ], height=(int)[ 16, 4096 ]; video/x-h264, variant=(string)itu, framerate=(fraction)[ 0/1, 2147483647/1 ], width=(int)[ 16, 4096 ], height=(int)[ 16, 4096 ]; video/x-msvideocodec, msvideoversion=(int)1, framerate=(fraction)[ 0/1, 2147483647/1 ], width=(int)[ 16, 4096 ], height=(int)[ 16, 4096 ]; video/x-h263, variant=(string)xirlink, framerate=(fraction)[ 0/1, 2147483647/1 ], width=(int)[ 16, 4096 ], height=(int)[ 16, 4096 ]; video/x-dirac, framerate=(fraction)[ 0/1, 2147483647/1 ], width=(int)[ 16, 4096 ], height=(int)[ 16, 4096 ]</caps>
  </padtemplate>
 </feature>
 <feature typename="GstElementFactory">
  <name>ogmtextparse</name>
  <rank>256</rank>
  <longname>OGM text stream parser</longname>
  <class>Codec/Decoder/Subtitle</class>
  <description>parse an OGM text header and stream</description>
  <author>Ronald Bultje &lt;rbultje@ronald.bitfreak.net&gt;</author>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>application/x-ogm-text</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>sometimes</presence>
   <caps>text/plain</caps>
  </padtemplate>
 </feature>
 <feature typename="GstElementFactory">
  <name>oggparse</name>
  <longname>Ogg parser</longname>
  <class>Codec/Parser</class>
  <description>parse ogg streams into pages (info about ogg: http://xiph.org)</description>
  <author>Michael Smith &lt;msmith@fluendo.com&gt;</author>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>application/ogg</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>application/ogg</caps>
  </padtemplate>
 </feature>
 <feature typename="GstElementFactory">
  <name>oggaviparse</name>
  <rank>256</rank>
  <longname>Ogg AVI parser</longname>
  <class>Codec/Parser</class>
  <description>parse an ogg avi stream into pages (info about ogg: http://xiph.org)</description>
  <author>Wim Taymans &lt;wim@fluendo.com&gt;</author>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>application/x-ogg-avi</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>audio/x-vorbis</caps>
  </padtemplate>
 </feature>
</plugin>
<plugin>
 <name>videorate</name>
 <description>Adjusts video frames</description>
 <filename>/usr/lib/gstreamer-0.10/libgstvideorate.so</filename>
 <size>25440</size>
 <m32p>1206445014</m32p>
 <version>0.10.18</version>
 <license>LGPL</license>
 <source>gst-plugins-base</source>
 <package>GStreamer Base Plugins (Ubuntu)</package>
 <origin>https://launchpad.net/distros/ubuntu/+source/gst-plugins-base0.10</origin>
 <feature typename="GstElementFactory">
  <name>videorate</name>
  <longname>Video rate adjuster</longname>
  <class>Filter/Effect/Video</class>
  <description>Drops/duplicates/adjusts timestamps on video frames to make a perfect stream</description>
  <author>Wim Taymans &lt;wim@fluendo.com&gt;</author>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>video/x-raw-yuv; video/x-raw-rgb</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>video/x-raw-yuv; video/x-raw-rgb</caps>
  </padtemplate>
 </feature>
</plugin>
<plugin>
 <name>coreelements</name>
 <description>standard GStreamer elements</description>
 <filename>/usr/lib/gstreamer-0.10/libgstcoreelements.so</filename>
 <size>172488</size>
 <m32p>1206437423</m32p>
 <version>0.10.18</version>
 <license>LGPL</license>
 <source>gstreamer</source>
 <package>GStreamer (Ubuntu)</package>
 <origin>https://launchpad.net/distros/ubuntu/+source/gstreamer0.10</origin>
 <feature typename="GstElementFactory">
  <name>capsfilter</name>
  <longname>CapsFilter</longname>
  <class>Generic</class>
  <description>Pass data without modification, limiting formats</description>
  <author>David Schleef &lt;ds@schleef.org&gt;</author>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>ANY</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>ANY</caps>
  </padtemplate>
 </feature>
 <feature typename="GstElementFactory">
  <name>fakesrc</name>
  <longname>Fake Source</longname>
  <class>Source</class>
  <description>Push empty (no data) buffers around</description>
  <author>Erik Walthinsen &lt;omega@cse.ogi.edu&gt;, Wim Taymans &lt;wim@fluendo.com&gt;</author>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>ANY</caps>
  </padtemplate>
 </feature>
 <feature typename="GstElementFactory">
  <name>fakesink</name>
  <longname>Fake Sink</longname>
  <class>Sink</class>
  <description>Black hole for data</description>
  <author>Erik Walthinsen &lt;omega@cse.ogi.edu&gt;, Wim Taymans &lt;wim@fluendo.com&gt;, Mr. &apos;frag-me-more&apos; Vanderwingo &lt;wingo@fluendo.com&gt;</author>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>ANY</caps>
  </padtemplate>
 </feature>
 <feature typename="GstElementFactory">
  <name>fdsrc</name>
  <longname>Filedescriptor Source</longname>
  <class>Source/File</class>
  <description>Read from a file descriptor</description>
  <author>Erik Walthinsen &lt;omega@cse.ogi.edu&gt;</author>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>ANY</caps>
  </padtemplate>
  <interface>GstURIHandler</interface>
  <uri_type>source</uri_type>
  <uri_protocol>fd</uri_protocol>
 </feature>
 <feature typename="GstElementFactory">
  <name>fdsink</name>
  <longname>Filedescriptor Sink</longname>
  <class>Sink/File</class>
  <description>Write data to a file descriptor</description>
  <author>Erik Walthinsen &lt;omega@cse.ogi.edu&gt;</author>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>ANY</caps>
  </padtemplate>
  <interface>GstURIHandler</interface>
  <uri_type>sink</uri_type>
  <uri_protocol>fd</uri_protocol>
 </feature>
 <feature typename="GstElementFactory">
  <name>filesrc</name>
  <rank>256</rank>
  <longname>File Source</longname>
  <class>Source/File</class>
  <description>Read from arbitrary point in a file</description>
  <author>Erik Walthinsen &lt;omega@cse.ogi.edu&gt;</author>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>ANY</caps>
  </padtemplate>
  <interface>GstURIHandler</interface>
  <uri_type>source</uri_type>
  <uri_protocol>file</uri_protocol>
 </feature>
 <feature typename="GstElementFactory">
  <name>identity</name>
  <longname>Identity</longname>
  <class>Generic</class>
  <description>Pass data without modification</description>
  <author>Erik Walthinsen &lt;omega@cse.ogi.edu&gt;</author>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>ANY</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>ANY</caps>
  </padtemplate>
 </feature>
 <feature typename="GstElementFactory">
  <name>queue</name>
  <longname>Queue</longname>
  <class>Generic</class>
  <description>Simple data queue</description>
  <author>Erik Walthinsen &lt;omega@cse.ogi.edu&gt;</author>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>ANY</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>ANY</caps>
  </padtemplate>
 </feature>
 <feature typename="GstElementFactory">
  <name>filesink</name>
  <rank>256</rank>
  <longname>File Sink</longname>
  <class>Sink/File</class>
  <description>Write stream to a file</description>
  <author>Thomas &lt;thomas@apestaart.org&gt;</author>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>ANY</caps>
  </padtemplate>
  <interface>GstURIHandler</interface>
  <uri_type>sink</uri_type>
  <uri_protocol>file</uri_protocol>
 </feature>
 <feature typename="GstElementFactory">
  <name>tee</name>
  <longname>Tee pipe fitting</longname>
  <class>Generic</class>
  <description>1-to-N pipe fitting</description>
  <author>Erik Walthinsen &lt;omega@cse.ogi.edu&gt;, Wim Taymans &lt;wim@fluendo.com&gt;</author>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>ANY</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>src%d</nametemplate>
   <direction>src</direction>
   <presence>request</presence>
   <caps>ANY</caps>
  </padtemplate>
 </feature>
 <feature typename="GstElementFactory">
  <name>typefind</name>
  <longname>TypeFind</longname>
  <class>Generic</class>
  <description>Finds the media type of a stream</description>
  <author>Benjamin Otte &lt;in7y118@public.uni-hamburg.de&gt;</author>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>ANY</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>ANY</caps>
  </padtemplate>
 </feature>
 <feature typename="GstElementFactory">
  <name>multiqueue</name>
  <longname>MultiQueue</longname>
  <class>Generic</class>
  <description>Multiple data queue</description>
  <author>Edward Hervey &lt;edward@fluendo.com&gt;</author>
  <padtemplate>
   <nametemplate>sink%d</nametemplate>
   <direction>sink</direction>
   <presence>request</presence>
   <caps>ANY</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>src%d</nametemplate>
   <direction>src</direction>
   <presence>sometimes</presence>
   <caps>ANY</caps>
  </padtemplate>
 </feature>
</plugin>
<plugin>
 <name>cdparanoia</name>
 <description>Read audio from CD in paranoid mode</description>
 <filename>/usr/lib/gstreamer-0.10/libgstcdparanoia.so</filename>
 <size>19864</size>
 <m32p>1206445013</m32p>
 <version>0.10.18</version>
 <license>GPL</license>
 <source>gst-plugins-base</source>
 <package>GStreamer Base Plugins (Ubuntu)</package>
 <origin>https://launchpad.net/distros/ubuntu/+source/gst-plugins-base0.10</origin>
 <feature typename="GstElementFactory">
  <name>cdparanoiasrc</name>
  <rank>128</rank>
  <longname>CD Audio (cdda) Source, Paranoia IV</longname>
  <class>Source/File</class>
  <description>Read audio from CD in paranoid mode</description>
  <author>Erik Walthinsen &lt;omega@cse.ogi.edu&gt;, Wim Taymans &lt;wim@fluendo.com&gt;</author>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>audio/x-raw-int, endianness=(int)1234, signed=(boolean)true, width=(int)16, depth=(int)16, rate=(int)44100, channels=(int)2</caps>
  </padtemplate>
  <interface>GstURIHandler</interface>
  <uri_type>source</uri_type>
  <uri_protocol>cdda</uri_protocol>
 </feature>
</plugin>
<plugin>
 <name>typefindfunctions</name>
 <description>default typefind functions</description>
 <filename>/usr/lib/gstreamer-0.10/libgsttypefindfunctions.so</filename>
 <size>56048</size>
 <m32p>1206445014</m32p>
 <version>0.10.18</version>
 <license>LGPL</license>
 <source>gst-plugins-base</source>
 <package>GStreamer Base Plugins (Ubuntu)</package>
 <origin>https://launchpad.net/distros/ubuntu/+source/gst-plugins-base0.10</origin>
 <feature typename="GstTypeFindFactory">
  <name>video/x-ms-asf</name>
  <rank>128</rank>
  <caps>video/x-ms-asf</caps>
  <extension>asf</extension>
  <extension>wm</extension>
  <extension>wma</extension>
  <extension>wmv</extension>
 </feature>
 <feature typename="GstTypeFindFactory">
  <name>audio/x-musepack</name>
  <rank>256</rank>
  <caps>audio/x-musepack</caps>
  <extension>mpc</extension>
 </feature>
 <feature typename="GstTypeFindFactory">
  <name>audio/x-au</name>
  <rank>64</rank>
  <caps>audio/x-au</caps>
  <extension>au</extension>
  <extension>snd</extension>
 </feature>
 <feature typename="GstTypeFindFactory">
  <name>video/x-msvideo</name>
  <rank>256</rank>
  <caps>video/x-msvideo</caps>
  <extension>avi</extension>
 </feature>
 <feature typename="GstTypeFindFactory">
  <name>audio/qcelp</name>
  <rank>256</rank>
  <caps>audio/qcelp</caps>
  <extension>qcp</extension>
 </feature>
 <feature typename="GstTypeFindFactory">
  <name>video/x-cdxa</name>
  <rank>256</rank>
  <caps>video/x-cdxa</caps>
  <extension>dat</extension>
 </feature>
 <feature typename="GstTypeFindFactory">
  <name>video/x-vcd</name>
  <rank>256</rank>
  <caps>video/x-vcd</caps>
  <extension>dat</extension>
 </feature>
 <feature typename="GstTypeFindFactory">
  <name>audio/x-imelody</name>
  <rank>256</rank>
  <caps>audio/x-imelody</caps>
  <extension>imy</extension>
  <extension>ime</extension>
  <extension>imelody</extension>
 </feature>
 <feature typename="GstTypeFindFactory">
  <name>video/x-fli</name>
  <rank>64</rank>
  <caps>video/x-fli</caps>
  <extension>flc</extension>
  <extension>fli</extension>
 </feature>
 <feature typename="GstTypeFindFactory">
  <name>application/x-id3v2</name>
  <rank>359</rank>
  <caps>application/x-id3</caps>
  <extension>mp3</extension>
  <extension>mp2</extension>
  <extension>mp1</extension>
  <extension>mpga</extension>
  <extension>ogg</extension>
  <extension>flac</extension>
  <extension>tta</extension>
 </feature>
 <feature typename="GstTypeFindFactory">
  <name>application/x-id3v1</name>
  <rank>357</rank>
  <caps>application/x-id3</caps>
  <extension>mp3</extension>
  <extension>mp2</extension>
  <extension>mp1</extension>
  <extension>mpga</extension>
  <extension>ogg</extension>
  <extension>flac</extension>
  <extension>tta</extension>
 </feature>
 <feature typename="GstTypeFindFactory">
  <name>application/x-apetag</name>
  <rank>358</rank>
  <caps>application/x-apetag</caps>
  <extension>ape</extension>
  <extension>mpc</extension>
  <extension>wv</extension>
 </feature>
 <feature typename="GstTypeFindFactory">
  <name>audio/x-ttafile</name>
  <rank>256</rank>
  <caps>audio/x-ttafile</caps>
  <extension>tta</extension>
 </feature>
 <feature typename="GstTypeFindFactory">
  <name>audio/x-mod</name>
  <rank>128</rank>
  <caps>audio/x-mod</caps>
  <extension>669</extension>
  <extension>amf</extension>
  <extension>dsm</extension>
  <extension>gdm</extension>
  <extension>far</extension>
  <extension>imf</extension>
  <extension>it</extension>
  <extension>med</extension>
  <extension>mod</extension>
  <extension>mtm</extension>
  <extension>okt</extension>
  <extension>sam</extension>
  <extension>s3m</extension>
  <extension>stm</extension>
  <extension>stx</extension>
  <extension>ult</extension>
  <extension>xm</extension>
 </feature>
 <feature typename="GstTypeFindFactory">
  <name>audio/mpeg</name>
  <rank>256</rank>
  <caps>audio/mpeg, mpegversion=(int)1, layer=(int)[ 1, 3 ]</caps>
  <extension>mp3</extension>
  <extension>mp2</extension>
  <extension>mp1</extension>
  <extension>mpga</extension>
 </feature>
 <feature typename="GstTypeFindFactory">
  <name>audio/x-ac3</name>
  <rank>256</rank>
  <caps>audio/x-ac3</caps>
  <extension>ac3</extension>
 </feature>
 <feature typename="GstTypeFindFactory">
  <name>video/mpeg-sys</name>
  <rank>256</rank>
  <caps>video/mpeg, systemstream=(boolean)true, mpegversion=(int)[ 1, 2 ]</caps>
  <extension>mpe</extension>
  <extension>mpeg</extension>
  <extension>mpg</extension>
 </feature>
 <feature typename="GstTypeFindFactory">
  <name>video/mpegts</name>
  <rank>256</rank>
  <caps>video/mpegts, systemstream=(boolean)true, packetsize=(int)[ 188, 208 ]</caps>
  <extension>ts</extension>
 </feature>
 <feature typename="GstTypeFindFactory">
  <name>application/ogg</name>
  <rank>256</rank>
  <caps>application/x-annodex</caps>
  <extension>anx</extension>
  <extension>ogg</extension>
  <extension>ogm</extension>
 </feature>
 <feature typename="GstTypeFindFactory">
  <name>video/mpeg,elementary</name>
  <rank>128</rank>
  <caps>video/mpeg, systemstream=(boolean)false</caps>
  <extension>mpv</extension>
  <extension>mpeg</extension>
  <extension>mpg</extension>
 </feature>
 <feature typename="GstTypeFindFactory">
  <name>video/mpeg-stream</name>
  <rank>64</rank>
  <caps>video/mpeg, systemstream=(boolean)false</caps>
  <extension>mpv</extension>
  <extension>mpeg</extension>
  <extension>mpg</extension>
 </feature>
 <feature typename="GstTypeFindFactory">
  <name>video/mpeg4</name>
  <rank>256</rank>
  <caps>video/mpeg, systemstream=(boolean)false</caps>
  <extension>m4v</extension>
 </feature>
 <feature typename="GstTypeFindFactory">
  <name>video/x-h264</name>
  <rank>256</rank>
  <caps>video/mpeg, systemstream=(boolean)false</caps>
  <extension>h264</extension>
  <extension>x264</extension>
  <extension>264</extension>
 </feature>
 <feature typename="GstTypeFindFactory">
  <name>video/x-nuv</name>
  <rank>128</rank>
  <caps>video/x-nuv</caps>
  <extension>nuv</extension>
 </feature>
 <feature typename="GstTypeFindFactory">
  <name>audio/x-m4a</name>
  <rank>256</rank>
  <caps>audio/x-m4a</caps>
  <extension>m4a</extension>
 </feature>
 <feature typename="GstTypeFindFactory">
  <name>application/x-3gp</name>
  <rank>256</rank>
  <caps>application/x-3gp</caps>
  <extension>3gp</extension>
 </feature>
 <feature typename="GstTypeFindFactory">
  <name>video/quicktime</name>
  <rank>128</rank>
  <caps>video/quicktime</caps>
  <extension>mov</extension>
 </feature>
 <feature typename="GstTypeFindFactory">
  <name>image/x-quicktime</name>
  <rank>128</rank>
  <caps>image/x-quicktime</caps>
  <extension>qif</extension>
  <extension>qtif</extension>
  <extension>qti</extension>
 </feature>
 <feature typename="GstTypeFindFactory">
  <name>text/html</name>
  <rank>128</rank>
  <caps>text/html</caps>
  <extension>htm</extension>
  <extension>html</extension>
 </feature>
 <feature typename="GstTypeFindFactory">
  <name>application/vnd.rn-realmedia</name>
  <rank>128</rank>
  <caps>application/vnd.rn-realmedia</caps>
  <extension>ra</extension>
  <extension>ram</extension>
  <extension>rm</extension>
  <extension>rmvb</extension>
 </feature>
 <feature typename="GstTypeFindFactory">
  <name>application/x-pn-realaudio</name>
  <rank>128</rank>
  <caps>application/x-pn-realaudio</caps>
  <extension>ra</extension>
  <extension>ram</extension>
  <extension>rm</extension>
  <extension>rmvb</extension>
 </feature>
 <feature typename="GstTypeFindFactory">
  <name>application/x-shockwave-flash</name>
  <rank>128</rank>
  <caps>application/x-shockwave-flash</caps>
  <extension>swf</extension>
  <extension>swfl</extension>
 </feature>
 <feature typename="GstTypeFindFactory">
  <name>video/x-flv</name>
  <rank>128</rank>
  <caps>video/x-flv</caps>
  <extension>flv</extension>
 </feature>
 <feature typename="GstTypeFindFactory">
  <name>text/plain</name>
  <rank>64</rank>
  <caps>text/plain</caps>
  <extension>txt</extension>
 </feature>
 <feature typename="GstTypeFindFactory">
  <name>text/uri-list</name>
  <rank>64</rank>
  <caps>text/uri-list</caps>
  <extension>ram</extension>
 </feature>
 <feature typename="GstTypeFindFactory">
  <name>application/sdp</name>
  <rank>128</rank>
  <caps>application/sdp</caps>
  <extension>sdp</extension>
 </feature>
 <feature typename="GstTypeFindFactory">
  <name>application/smil</name>
  <rank>128</rank>
  <caps>application/smil</caps>
  <extension>smil</extension>
 </feature>
 <feature typename="GstTypeFindFactory">
  <name>application/xml</name>
  <rank>64</rank>
  <caps>application/xml</caps>
  <extension>xml</extension>
 </feature>
 <feature typename="GstTypeFindFactory">
  <name>audio/x-wav</name>
  <rank>256</rank>
  <caps>audio/x-wav</caps>
  <extension>wav</extension>
 </feature>
 <feature typename="GstTypeFindFactory">
  <name>audio/x-aiff</name>
  <rank>128</rank>
  <caps>audio/x-aiff</caps>
  <extension>aiff</extension>
  <extension>aif</extension>
  <extension>aifc</extension>
 </feature>
 <feature typename="GstTypeFindFactory">
  <name>audio/x-svx</name>
  <rank>128</rank>
  <caps>audio/x-svx</caps>
  <extension>iff</extension>
  <extension>svx</extension>
 </feature>
 <feature typename="GstTypeFindFactory">
  <name>audio/x-paris</name>
  <rank>128</rank>
  <caps>audio/x-paris</caps>
  <extension>paf</extension>
 </feature>
 <feature typename="GstTypeFindFactory">
  <name>audio/x-nist</name>
  <rank>128</rank>
  <caps>audio/x-nist</caps>
  <extension>nist</extension>
 </feature>
 <feature typename="GstTypeFindFactory">
  <name>audio/x-voc</name>
  <rank>128</rank>
  <caps>audio/x-voc</caps>
  <extension>voc</extension>
 </feature>
 <feature typename="GstTypeFindFactory">
  <name>audio/x-sds</name>
  <rank>128</rank>
  <caps>audio/x-sds</caps>
  <extension>sds</extension>
 </feature>
 <feature typename="GstTypeFindFactory">
  <name>audio/x-ircam</name>
  <rank>128</rank>
  <caps>audio/x-ircam</caps>
  <extension>sf</extension>
 </feature>
 <feature typename="GstTypeFindFactory">
  <name>audio/x-w64</name>
  <rank>128</rank>
  <caps>audio/x-w64</caps>
  <extension>w64</extension>
 </feature>
 <feature typename="GstTypeFindFactory">
  <name>audio/x-shorten</name>
  <rank>128</rank>
  <caps>audio/x-shorten</caps>
  <extension>shn</extension>
 </feature>
 <feature typename="GstTypeFindFactory">
  <name>application/x-ape</name>
  <rank>128</rank>
  <caps>application/x-ape</caps>
  <extension>ape</extension>
 </feature>
 <feature typename="GstTypeFindFactory">
  <name>image/jpeg</name>
  <rank>271</rank>
  <caps>image/jpeg</caps>
  <extension>jpg</extension>
  <extension>jpe</extension>
  <extension>jpeg</extension>
 </feature>
 <feature typename="GstTypeFindFactory">
  <name>image/gif</name>
  <rank>256</rank>
  <caps>image/gif</caps>
  <extension>gif</extension>
 </feature>
 <feature typename="GstTypeFindFactory">
  <name>image/png</name>
  <rank>270</rank>
  <caps>image/png</caps>
  <extension>png</extension>
 </feature>
 <feature typename="GstTypeFindFactory">
  <name>image/bmp</name>
  <rank>256</rank>
  <caps>image/bmp</caps>
  <extension>bmp</extension>
 </feature>
 <feature typename="GstTypeFindFactory">
  <name>image/tiff</name>
  <rank>256</rank>
  <caps>image/tiff, endianness=(int){ 4321, 1234 }</caps>
  <extension>tif</extension>
  <extension>tiff</extension>
 </feature>
 <feature typename="GstTypeFindFactory">
  <name>video/x-matroska</name>
  <rank>256</rank>
  <caps>video/x-matroska</caps>
  <extension>mkv</extension>
  <extension>mka</extension>
 </feature>
 <feature typename="GstTypeFindFactory">
  <name>video/x-mve</name>
  <rank>128</rank>
  <caps>video/x-mve</caps>
  <extension>mve</extension>
 </feature>
 <feature typename="GstTypeFindFactory">
  <name>video/x-dv</name>
  <rank>128</rank>
  <caps>video/x-dv, systemstream=(boolean)true</caps>
  <extension>dv</extension>
  <extension>dif</extension>
 </feature>
 <feature typename="GstTypeFindFactory">
  <name>audio/x-amr-nb-sh</name>
  <rank>256</rank>
  <caps>audio/x-amr-nb-sh</caps>
  <extension>amr</extension>
 </feature>
 <feature typename="GstTypeFindFactory">
  <name>audio/x-amr-wb-sh</name>
  <rank>256</rank>
  <caps>audio/x-amr-wb-sh</caps>
  <extension>amr</extension>
 </feature>
 <feature typename="GstTypeFindFactory">
  <name>audio/iLBC-sh</name>
  <rank>256</rank>
  <caps>audio/iLBC-sh</caps>
  <extension>ilbc</extension>
 </feature>
 <feature typename="GstTypeFindFactory">
  <name>audio/x-sid</name>
  <rank>64</rank>
  <caps>audio/x-sid</caps>
  <extension>sid</extension>
 </feature>
 <feature typename="GstTypeFindFactory">
  <name>image/x-xcf</name>
  <rank>128</rank>
  <caps>image/x-xcf</caps>
  <extension>xcf</extension>
 </feature>
 <feature typename="GstTypeFindFactory">
  <name>video/x-mng</name>
  <rank>128</rank>
  <caps>video/x-mng</caps>
  <extension>mng</extension>
 </feature>
 <feature typename="GstTypeFindFactory">
  <name>image/x-jng</name>
  <rank>128</rank>
  <caps>image/x-jng</caps>
  <extension>jng</extension>
 </feature>
 <feature typename="GstTypeFindFactory">
  <name>image/x-xpixmap</name>
  <rank>128</rank>
  <caps>image/x-xpixmap</caps>
  <extension>xpm</extension>
 </feature>
 <feature typename="GstTypeFindFactory">
  <name>image/x-sun-raster</name>
  <rank>128</rank>
  <caps>image/x-sun-raster</caps>
  <extension>ras</extension>
 </feature>
 <feature typename="GstTypeFindFactory">
  <name>application/x-bzip</name>
  <rank>128</rank>
  <caps>application/x-bzip</caps>
  <extension>bz2</extension>
 </feature>
 <feature typename="GstTypeFindFactory">
  <name>application/x-gzip</name>
  <rank>128</rank>
  <caps>application/x-gzip</caps>
  <extension>gz</extension>
 </feature>
 <feature typename="GstTypeFindFactory">
  <name>application/zip</name>
  <rank>128</rank>
  <caps>application/zip</caps>
  <extension>zip</extension>
 </feature>
 <feature typename="GstTypeFindFactory">
  <name>application/x-compress</name>
  <rank>128</rank>
  <caps>application/x-compress</caps>
  <extension>Z</extension>
 </feature>
 <feature typename="GstTypeFindFactory">
  <name>audio/x-flac</name>
  <rank>256</rank>
  <caps>audio/x-flac</caps>
  <extension>flac</extension>
 </feature>
 <feature typename="GstTypeFindFactory">
  <name>audio/x-vorbis</name>
  <rank>256</rank>
  <caps>audio/x-vorbis</caps>
 </feature>
 <feature typename="GstTypeFindFactory">
  <name>video/x-theora</name>
  <rank>256</rank>
  <caps>video/x-theora</caps>
 </feature>
 <feature typename="GstTypeFindFactory">
  <name>application/x-ogm-video</name>
  <rank>256</rank>
  <caps>application/x-ogm-video</caps>
 </feature>
 <feature typename="GstTypeFindFactory">
  <name>application/x-ogm-audio</name>
  <rank>256</rank>
  <caps>application/x-ogm-audio</caps>
 </feature>
 <feature typename="GstTypeFindFactory">
  <name>application/x-ogm-text</name>
  <rank>256</rank>
  <caps>application/x-ogm-text</caps>
 </feature>
 <feature typename="GstTypeFindFactory">
  <name>audio/x-speex</name>
  <rank>256</rank>
  <caps>audio/x-speex</caps>
 </feature>
 <feature typename="GstTypeFindFactory">
  <name>application/x-ogg-skeleton</name>
  <rank>256</rank>
  <caps>application/x-ogg-skeleton, parsed=(boolean)false</caps>
 </feature>
 <feature typename="GstTypeFindFactory">
  <name>text/x-cmml</name>
  <rank>256</rank>
  <caps>text/x-cmml</caps>
 </feature>
 <feature typename="GstTypeFindFactory">
  <name>application/x-executable</name>
  <rank>64</rank>
  <caps>application/x-executable</caps>
 </feature>
 <feature typename="GstTypeFindFactory">
  <name>adts_mpeg_stream</name>
  <rank>128</rank>
  <caps>audio/mpeg, mpegversion=(int){ 2, 4 }, framed=(boolean)false</caps>
  <extension>aac</extension>
 </feature>
 <feature typename="GstTypeFindFactory">
  <name>audio/x-spc</name>
  <rank>128</rank>
  <caps>audio/x-spc</caps>
  <extension>spc</extension>
 </feature>
 <feature typename="GstTypeFindFactory">
  <name>audio/x-wavpack</name>
  <rank>128</rank>
  <caps>audio/x-wavpack, framed=(boolean)false</caps>
  <extension>wv</extension>
  <extension>wvp</extension>
 </feature>
 <feature typename="GstTypeFindFactory">
  <name>audio/x-wavpack-correction</name>
  <rank>128</rank>
  <caps>audio/x-wavpack-correction, framed=(boolean)false</caps>
  <extension>wvc</extension>
 </feature>
 <feature typename="GstTypeFindFactory">
  <name>application/x-rar</name>
  <rank>128</rank>
  <caps>application/x-rar</caps>
  <extension>rar</extension>
 </feature>
 <feature typename="GstTypeFindFactory">
  <name>application/x-tar</name>
  <rank>128</rank>
  <caps>application/x-tar</caps>
  <extension>tar</extension>
 </feature>
 <feature typename="GstTypeFindFactory">
  <name>application/x-ar</name>
  <rank>128</rank>
  <caps>application/x-ar</caps>
  <extension>a</extension>
 </feature>
 <feature typename="GstTypeFindFactory">
  <name>application/x-ms-dos-executable</name>
  <rank>128</rank>
  <caps>application/x-ms-dos-executable</caps>
  <extension>dll</extension>
  <extension>exe</extension>
  <extension>ocx</extension>
  <extension>sys</extension>
  <extension>scr</extension>
  <extension>msstyles</extension>
  <extension>cpl</extension>
 </feature>
 <feature typename="GstTypeFindFactory">
  <name>video/x-dirac</name>
  <rank>256</rank>
  <caps>video/x-dirac</caps>
 </feature>
 <feature typename="GstTypeFindFactory">
  <name>multipart/x-mixed-replace</name>
  <rank>128</rank>
  <caps>multipart/x-mixed-replace</caps>
 </feature>
 <feature typename="GstTypeFindFactory">
  <name>application/x-mmsh</name>
  <rank>128</rank>
  <caps>application/x-mmsh</caps>
 </feature>
 <feature typename="GstTypeFindFactory">
  <name>video/vivo</name>
  <rank>128</rank>
  <caps>video/vivo</caps>
  <extension>viv</extension>
 </feature>
 <feature typename="GstTypeFindFactory">
  <name>audio/x-nsf</name>
  <rank>128</rank>
  <caps>audio/x-nsf</caps>
  <extension>nsf</extension>
 </feature>
</plugin>
<plugin>
 <name>subparse</name>
 <description>Subtitle parsing</description>
 <filename>/usr/lib/gstreamer-0.10/libgstsubparse.so</filename>
 <size>50224</size>
 <m32p>1206445014</m32p>
 <version>0.10.18</version>
 <license>LGPL</license>
 <source>gst-plugins-base</source>
 <package>GStreamer Base Plugins (Ubuntu)</package>
 <origin>https://launchpad.net/distros/ubuntu/+source/gst-plugins-base0.10</origin>
 <feature typename="GstTypeFindFactory">
  <name>subparse_typefind</name>
  <rank>64</rank>
  <caps>application/x-subtitle</caps>
  <extension>srt</extension>
  <extension>sub</extension>
  <extension>mpsub</extension>
  <extension>mdvd</extension>
  <extension>smi</extension>
  <extension>txt</extension>
 </feature>
 <feature typename="GstElementFactory">
  <name>subparse</name>
  <rank>256</rank>
  <longname>Subtitle parser</longname>
  <class>Codec/Parser/Subtitle</class>
  <description>Parses subtitle (.sub) files into text streams</description>
  <author>Gustavo J. A. M. Carneiro &lt;gjc@inescporto.pt&gt;
Ronald S. Bultje &lt;rbultje@ronald.bitfreak.net&gt;</author>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>application/x-subtitle; application/x-subtitle-sami; application/x-subtitle-tmplayer; application/x-subtitle-mpl2</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>text/plain; text/x-pango-markup</caps>
  </padtemplate>
 </feature>
 <feature typename="GstElementFactory">
  <name>ssaparse</name>
  <rank>256</rank>
  <longname>SSA Subtitle Parser</longname>
  <class>Codec/Parser/Subtitle</class>
  <description>Parses SSA subtitle streams</description>
  <author>Tim-Philipp Müller &lt;tim centricular net&gt;</author>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>application/x-ssa; application/x-ass</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>text/x-pango-markup</caps>
  </padtemplate>
 </feature>
</plugin>
<plugin>
 <name>audioresample</name>
 <description>Resamples audio</description>
 <filename>/usr/lib/gstreamer-0.10/libgstaudioresample.so</filename>
 <size>41800</size>
 <m32p>1206445013</m32p>
 <version>0.10.18</version>
 <license>LGPL</license>
 <source>gst-plugins-base</source>
 <package>GStreamer Base Plugins (Ubuntu)</package>
 <origin>https://launchpad.net/distros/ubuntu/+source/gst-plugins-base0.10</origin>
 <feature typename="GstElementFactory">
  <name>audioresample</name>
  <rank>256</rank>
  <longname>Audio scaler</longname>
  <class>Filter/Converter/Audio</class>
  <description>Resample audio</description>
  <author>David Schleef &lt;ds@schleef.org&gt;</author>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>audio/x-raw-int, rate=(int)[ 1, 2147483647 ], channels=(int)[ 1, 2147483647 ], endianness=(int)1234, width=(int)16, depth=(int)16, signed=(boolean)true; audio/x-raw-int, rate=(int)[ 1, 2147483647 ], channels=(int)[ 1, 2147483647 ], endianness=(int)1234, width=(int)32, depth=(int)32, signed=(boolean)true; audio/x-raw-float, rate=(int)[ 1, 2147483647 ], channels=(int)[ 1, 2147483647 ], endianness=(int)1234, width=(int)32; audio/x-raw-float, rate=(int)[ 1, 2147483647 ], channels=(int)[ 1, 2147483647 ], endianness=(int)1234, width=(int)64</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>audio/x-raw-int, rate=(int)[ 1, 2147483647 ], channels=(int)[ 1, 2147483647 ], endianness=(int)1234, width=(int)16, depth=(int)16, signed=(boolean)true; audio/x-raw-int, rate=(int)[ 1, 2147483647 ], channels=(int)[ 1, 2147483647 ], endianness=(int)1234, width=(int)32, depth=(int)32, signed=(boolean)true; audio/x-raw-float, rate=(int)[ 1, 2147483647 ], channels=(int)[ 1, 2147483647 ], endianness=(int)1234, width=(int)32; audio/x-raw-float, rate=(int)[ 1, 2147483647 ], channels=(int)[ 1, 2147483647 ], endianness=(int)1234, width=(int)64</caps>
  </padtemplate>
 </feature>
</plugin>
<plugin>
 <name>videoscale</name>
 <description>Resizes video</description>
 <filename>/usr/lib/gstreamer-0.10/libgstvideoscale.so</filename>
 <size>46448</size>
 <m32p>1206445014</m32p>
 <version>0.10.18</version>
 <license>LGPL</license>
 <source>gst-plugins-base</source>
 <package>GStreamer Base Plugins (Ubuntu)</package>
 <origin>https://launchpad.net/distros/ubuntu/+source/gst-plugins-base0.10</origin>
 <feature typename="GstElementFactory">
  <name>videoscale</name>
  <longname>Video scaler</longname>
  <class>Filter/Effect/Video</class>
  <description>Resizes video</description>
  <author>Wim Taymans &lt;wim.taymans@chello.be&gt;</author>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>video/x-raw-rgb, bpp=(int)32, depth=(int)24, endianness=(int)4321, red_mask=(int)-16777216, green_mask=(int)16711680, blue_mask=(int)65280, width=(int)[ 2, 2147483647 ], height=(int)[ 2, 2147483647 ], framerate=(fraction)[ 0/1, 2147483647/1 ]; video/x-raw-rgb, bpp=(int)32, depth=(int)24, endianness=(int)4321, red_mask=(int)16711680, green_mask=(int)65280, blue_mask=(int)255, width=(int)[ 2, 2147483647 ], height=(int)[ 2, 2147483647 ], framerate=(fraction)[ 0/1, 2147483647/1 ]; video/x-raw-rgb, bpp=(int)32, depth=(int)24, endianness=(int)4321, red_mask=(int)65280, green_mask=(int)16711680, blue_mask=(int)-16777216, width=(int)[ 2, 2147483647 ], height=(int)[ 2, 2147483647 ], framerate=(fraction)[ 0/1, 2147483647/1 ]; video/x-raw-rgb, bpp=(int)32, depth=(int)24, endianness=(int)4321, red_mask=(int)255, green_mask=(int)65280, blue_mask=(int)16711680, width=(int)[ 2, 2147483647 ], height=(int)[ 2, 2147483647 ], framerate=(fraction)[ 0/1, 2147483647/1 ]; video/x-raw-rgb, bpp=(int)32, depth=(int)32, endianness=(int)4321, red_mask=(int)-16777216, green_mask=(int)16711680, blue_mask=(int)65280, alpha_mask=(int)255, width=(int)[ 2, 2147483647 ], height=(int)[ 2, 2147483647 ], framerate=(fraction)[ 0/1, 2147483647/1 ]; video/x-raw-rgb, bpp=(int)32, depth=(int)32, endianness=(int)4321, red_mask=(int)16711680, green_mask=(int)65280, blue_mask=(int)255, alpha_mask=(int)-16777216, width=(int)[ 2, 2147483647 ], height=(int)[ 2, 2147483647 ], framerate=(fraction)[ 0/1, 2147483647/1 ]; video/x-raw-rgb, bpp=(int)32, depth=(int)32, endianness=(int)4321, red_mask=(int)65280, green_mask=(int)16711680, blue_mask=(int)-16777216, alpha_mask=(int)255, width=(int)[ 2, 2147483647 ], height=(int)[ 2, 2147483647 ], framerate=(fraction)[ 0/1, 2147483647/1 ]; video/x-raw-rgb, bpp=(int)32, depth=(int)32, endianness=(int)4321, red_mask=(int)255, green_mask=(int)65280, blue_mask=(int)16711680, alpha_mask=(int)-16777216, width=(int)[ 2, 2147483647 ], height=(int)[ 2, 2147483647 ], framerate=(fraction)[ 0/1, 2147483647/1 ]; video/x-raw-rgb, bpp=(int)24, depth=(int)24, endianness=(int)4321, red_mask=(int)16711680, green_mask=(int)65280, blue_mask=(int)255, width=(int)[ 2, 2147483647 ], height=(int)[ 2, 2147483647 ], framerate=(fraction)[ 0/1, 2147483647/1 ]; video/x-raw-rgb, bpp=(int)24, depth=(int)24, endianness=(int)4321, red_mask=(int)255, green_mask=(int)65280, blue_mask=(int)16711680, width=(int)[ 2, 2147483647 ], height=(int)[ 2, 2147483647 ], framerate=(fraction)[ 0/1, 2147483647/1 ]; video/x-raw-yuv, format=(fourcc)AYUV, width=(int)[ 2, 2147483647 ], height=(int)[ 2, 2147483647 ], framerate=(fraction)[ 0/1, 2147483647/1 ]; video/x-raw-yuv, format=(fourcc)YUY2, width=(int)[ 2, 2147483647 ], height=(int)[ 2, 2147483647 ], framerate=(fraction)[ 0/1, 2147483647/1 ]; video/x-raw-yuv, format=(fourcc)YVYU, width=(int)[ 2, 2147483647 ], height=(int)[ 2, 2147483647 ], framerate=(fraction)[ 0/1, 2147483647/1 ]; video/x-raw-yuv, format=(fourcc)UYVY, width=(int)[ 2, 2147483647 ], height=(int)[ 2, 2147483647 ], framerate=(fraction)[ 0/1, 2147483647/1 ]; video/x-raw-yuv, format=(fourcc)Y800, width=(int)[ 2, 2147483647 ], height=(int)[ 2, 2147483647 ], framerate=(fraction)[ 0/1, 2147483647/1 ]; video/x-raw-yuv, format=(fourcc)I420, width=(int)[ 2, 2147483647 ], height=(int)[ 2, 2147483647 ], framerate=(fraction)[ 0/1, 2147483647/1 ]; video/x-raw-yuv, format=(fourcc)YV12, width=(int)[ 2, 2147483647 ], height=(int)[ 2, 2147483647 ], framerate=(fraction)[ 0/1, 2147483647/1 ]; video/x-raw-rgb, bpp=(int)16, depth=(int)16, endianness=(int)1234, red_mask=(int)63488, green_mask=(int)2016, blue_mask=(int)31, width=(int)[ 2, 2147483647 ], height=(int)[ 2, 2147483647 ], framerate=(fraction)[ 0/1, 2147483647/1 ]; video/x-raw-rgb, bpp=(int)16, depth=(int)15, endianness=(int)1234, red_mask=(int)31744, green_mask=(int)992, blue_mask=(int)31, width=(int)[ 2, 2147483647 ], height=(int)[ 2, 2147483647 ], framerate=(fraction)[ 0/1, 2147483647/1 ]</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>video/x-raw-rgb, bpp=(int)32, depth=(int)24, endianness=(int)4321, red_mask=(int)-16777216, green_mask=(int)16711680, blue_mask=(int)65280, width=(int)[ 2, 2147483647 ], height=(int)[ 2, 2147483647 ], framerate=(fraction)[ 0/1, 2147483647/1 ]; video/x-raw-rgb, bpp=(int)32, depth=(int)24, endianness=(int)4321, red_mask=(int)16711680, green_mask=(int)65280, blue_mask=(int)255, width=(int)[ 2, 2147483647 ], height=(int)[ 2, 2147483647 ], framerate=(fraction)[ 0/1, 2147483647/1 ]; video/x-raw-rgb, bpp=(int)32, depth=(int)24, endianness=(int)4321, red_mask=(int)65280, green_mask=(int)16711680, blue_mask=(int)-16777216, width=(int)[ 2, 2147483647 ], height=(int)[ 2, 2147483647 ], framerate=(fraction)[ 0/1, 2147483647/1 ]; video/x-raw-rgb, bpp=(int)32, depth=(int)24, endianness=(int)4321, red_mask=(int)255, green_mask=(int)65280, blue_mask=(int)16711680, width=(int)[ 2, 2147483647 ], height=(int)[ 2, 2147483647 ], framerate=(fraction)[ 0/1, 2147483647/1 ]; video/x-raw-rgb, bpp=(int)32, depth=(int)32, endianness=(int)4321, red_mask=(int)-16777216, green_mask=(int)16711680, blue_mask=(int)65280, alpha_mask=(int)255, width=(int)[ 2, 2147483647 ], height=(int)[ 2, 2147483647 ], framerate=(fraction)[ 0/1, 2147483647/1 ]; video/x-raw-rgb, bpp=(int)32, depth=(int)32, endianness=(int)4321, red_mask=(int)16711680, green_mask=(int)65280, blue_mask=(int)255, alpha_mask=(int)-16777216, width=(int)[ 2, 2147483647 ], height=(int)[ 2, 2147483647 ], framerate=(fraction)[ 0/1, 2147483647/1 ]; video/x-raw-rgb, bpp=(int)32, depth=(int)32, endianness=(int)4321, red_mask=(int)65280, green_mask=(int)16711680, blue_mask=(int)-16777216, alpha_mask=(int)255, width=(int)[ 2, 2147483647 ], height=(int)[ 2, 2147483647 ], framerate=(fraction)[ 0/1, 2147483647/1 ]; video/x-raw-rgb, bpp=(int)32, depth=(int)32, endianness=(int)4321, red_mask=(int)255, green_mask=(int)65280, blue_mask=(int)16711680, alpha_mask=(int)-16777216, width=(int)[ 2, 2147483647 ], height=(int)[ 2, 2147483647 ], framerate=(fraction)[ 0/1, 2147483647/1 ]; video/x-raw-rgb, bpp=(int)24, depth=(int)24, endianness=(int)4321, red_mask=(int)16711680, green_mask=(int)65280, blue_mask=(int)255, width=(int)[ 2, 2147483647 ], height=(int)[ 2, 2147483647 ], framerate=(fraction)[ 0/1, 2147483647/1 ]; video/x-raw-rgb, bpp=(int)24, depth=(int)24, endianness=(int)4321, red_mask=(int)255, green_mask=(int)65280, blue_mask=(int)16711680, width=(int)[ 2, 2147483647 ], height=(int)[ 2, 2147483647 ], framerate=(fraction)[ 0/1, 2147483647/1 ]; video/x-raw-yuv, format=(fourcc)AYUV, width=(int)[ 2, 2147483647 ], height=(int)[ 2, 2147483647 ], framerate=(fraction)[ 0/1, 2147483647/1 ]; video/x-raw-yuv, format=(fourcc)YUY2, width=(int)[ 2, 2147483647 ], height=(int)[ 2, 2147483647 ], framerate=(fraction)[ 0/1, 2147483647/1 ]; video/x-raw-yuv, format=(fourcc)YVYU, width=(int)[ 2, 2147483647 ], height=(int)[ 2, 2147483647 ], framerate=(fraction)[ 0/1, 2147483647/1 ]; video/x-raw-yuv, format=(fourcc)UYVY, width=(int)[ 2, 2147483647 ], height=(int)[ 2, 2147483647 ], framerate=(fraction)[ 0/1, 2147483647/1 ]; video/x-raw-yuv, format=(fourcc)Y800, width=(int)[ 2, 2147483647 ], height=(int)[ 2, 2147483647 ], framerate=(fraction)[ 0/1, 2147483647/1 ]; video/x-raw-yuv, format=(fourcc)I420, width=(int)[ 2, 2147483647 ], height=(int)[ 2, 2147483647 ], framerate=(fraction)[ 0/1, 2147483647/1 ]; video/x-raw-yuv, format=(fourcc)YV12, width=(int)[ 2, 2147483647 ], height=(int)[ 2, 2147483647 ], framerate=(fraction)[ 0/1, 2147483647/1 ]; video/x-raw-rgb, bpp=(int)16, depth=(int)16, endianness=(int)1234, red_mask=(int)63488, green_mask=(int)2016, blue_mask=(int)31, width=(int)[ 2, 2147483647 ], height=(int)[ 2, 2147483647 ], framerate=(fraction)[ 0/1, 2147483647/1 ]; video/x-raw-rgb, bpp=(int)16, depth=(int)15, endianness=(int)1234, red_mask=(int)31744, green_mask=(int)992, blue_mask=(int)31, width=(int)[ 2, 2147483647 ], height=(int)[ 2, 2147483647 ], framerate=(fraction)[ 0/1, 2147483647/1 ]</caps>
  </padtemplate>
 </feature>
</plugin>
<plugin>
 <name>pango</name>
 <description>Pango-based text rendering and overlay</description>
 <filename>/usr/lib/gstreamer-0.10/libgstpango.so</filename>
 <size>54272</size>
 <m32p>1206445016</m32p>
 <version>0.10.18</version>
 <license>LGPL</license>
 <source>gst-plugins-base</source>
 <package>GStreamer Base Plugins (Ubuntu)</package>
 <origin>https://launchpad.net/distros/ubuntu/+source/gst-plugins-base0.10</origin>
 <feature typename="GstElementFactory">
  <name>textoverlay</name>
  <longname>Text overlay</longname>
  <class>Filter/Editor/Video</class>
  <description>Adds text strings on top of a video buffer</description>
  <author>David Schleef &lt;ds@schleef.org&gt;</author>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>video/x-raw-yuv, format=(fourcc)I420, width=(int)[ 1, 2147483647 ], height=(int)[ 1, 2147483647 ], framerate=(fraction)[ 0/1, 2147483647/1 ]</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>video_sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>video/x-raw-yuv, format=(fourcc)I420, width=(int)[ 1, 2147483647 ], height=(int)[ 1, 2147483647 ], framerate=(fraction)[ 0/1, 2147483647/1 ]</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>text_sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>text/x-pango-markup; text/plain</caps>
  </padtemplate>
 </feature>
 <feature typename="GstElementFactory">
  <name>timeoverlay</name>
  <longname>Time overlay</longname>
  <class>Filter/Editor/Video</class>
  <description>Overlays buffer time stamps on a video stream</description>
  <author>Tim-Philipp Müller &lt;tim@centricular.net&gt;</author>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>video/x-raw-yuv, format=(fourcc)I420, width=(int)[ 1, 2147483647 ], height=(int)[ 1, 2147483647 ], framerate=(fraction)[ 0/1, 2147483647/1 ]</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>video_sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>video/x-raw-yuv, format=(fourcc)I420, width=(int)[ 1, 2147483647 ], height=(int)[ 1, 2147483647 ], framerate=(fraction)[ 0/1, 2147483647/1 ]</caps>
  </padtemplate>
 </feature>
 <feature typename="GstElementFactory">
  <name>clockoverlay</name>
  <longname>Clock overlay</longname>
  <class>Filter/Editor/Video</class>
  <description>Overlays the current clock time on a video stream</description>
  <author>Tim-Philipp Müller &lt;tim@centricular.net&gt;</author>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>video/x-raw-yuv, format=(fourcc)I420, width=(int)[ 1, 2147483647 ], height=(int)[ 1, 2147483647 ], framerate=(fraction)[ 0/1, 2147483647/1 ]</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>video_sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>video/x-raw-yuv, format=(fourcc)I420, width=(int)[ 1, 2147483647 ], height=(int)[ 1, 2147483647 ], framerate=(fraction)[ 0/1, 2147483647/1 ]</caps>
  </padtemplate>
 </feature>
 <feature typename="GstElementFactory">
  <name>textrender</name>
  <longname>Text renderer</longname>
  <class>Filter/Editor/Video</class>
  <description>Renders a text string to an image bitmap</description>
  <author>David Schleef &lt;ds@schleef.org&gt;, Ronald S. Bultje &lt;rbultje@ronald.bitfreak.net&gt;</author>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>video/x-raw-yuv, format=(fourcc)AYUV, width=(int)[ 1, 2147483647 ], height=(int)[ 1, 2147483647 ], framerate=(fraction)[ 0/1, 2147483647/1 ]</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>text/x-pango-markup; text/plain</caps>
  </padtemplate>
 </feature>
</plugin>
<plugin>
 <name>ffmpegcolorspace</name>
 <description>colorspace conversion copied from FFMpeg 0.4.9-pre1</description>
 <filename>/usr/lib/gstreamer-0.10/libgstffmpegcolorspace.so</filename>
 <size>125144</size>
 <m32p>1206445013</m32p>
 <version>0.10.18</version>
 <license>LGPL</license>
 <source>gst-plugins-base</source>
 <package>FFMpeg</package>
 <origin>http://ffmpeg.sourceforge.net/</origin>
 <feature typename="GstElementFactory">
  <name>ffmpegcolorspace</name>
  <longname>FFMPEG Colorspace converter</longname>
  <class>Filter/Converter/Video</class>
  <description>Converts video from one colorspace to another</description>
  <author>Ronald Bultje &lt;rbultje@ronald.bitfreak.net&gt;</author>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>video/x-raw-yuv, width=(int)[ 1, 2147483647 ], height=(int)[ 1, 2147483647 ], framerate=(fraction)[ 0/1, 2147483647/1 ], format=(fourcc)I420; video/x-raw-yuv, width=(int)[ 1, 2147483647 ], height=(int)[ 1, 2147483647 ], framerate=(fraction)[ 0/1, 2147483647/1 ], format=(fourcc)YV12; video/x-raw-yuv, width=(int)[ 1, 2147483647 ], height=(int)[ 1, 2147483647 ], framerate=(fraction)[ 0/1, 2147483647/1 ], format=(fourcc)YUY2; video/x-raw-rgb, width=(int)[ 1, 2147483647 ], height=(int)[ 1, 2147483647 ], framerate=(fraction)[ 0/1, 2147483647/1 ], bpp=(int)24, depth=(int)24, red_mask=(int)16711680, green_mask=(int)65280, blue_mask=(int)255, endianness=(int)4321; video/x-raw-rgb, width=(int)[ 1, 2147483647 ], height=(int)[ 1, 2147483647 ], framerate=(fraction)[ 0/1, 2147483647/1 ], bpp=(int)24, depth=(int)24, red_mask=(int)255, green_mask=(int)65280, blue_mask=(int)16711680, endianness=(int)4321; video/x-raw-yuv, width=(int)[ 1, 2147483647 ], height=(int)[ 1, 2147483647 ], framerate=(fraction)[ 0/1, 2147483647/1 ], format=(fourcc)Y42B; video/x-raw-yuv, width=(int)[ 1, 2147483647 ], height=(int)[ 1, 2147483647 ], framerate=(fraction)[ 0/1, 2147483647/1 ], format=(fourcc)Y444; video/x-raw-rgb, width=(int)[ 1, 2147483647 ], height=(int)[ 1, 2147483647 ], framerate=(fraction)[ 0/1, 2147483647/1 ], bpp=(int)32, depth=(int)32, red_mask=(int)65280, green_mask=(int)16711680, blue_mask=(int)-16777216, alpha_mask=(int)255, endianness=(int)4321; video/x-raw-rgb, width=(int)[ 1, 2147483647 ], height=(int)[ 1, 2147483647 ], framerate=(fraction)[ 0/1, 2147483647/1 ], bpp=(int)32, depth=(int)32, red_mask=(int)16711680, green_mask=(int)65280, blue_mask=(int)255, alpha_mask=(int)-16777216, endianness=(int)4321; video/x-raw-rgb, width=(int)[ 1, 2147483647 ], height=(int)[ 1, 2147483647 ], framerate=(fraction)[ 0/1, 2147483647/1 ], bpp=(int)32, depth=(int)32, red_mask=(int)255, green_mask=(int)65280, blue_mask=(int)16711680, alpha_mask=(int)-16777216, endianness=(int)4321; video/x-raw-rgb, width=(int)[ 1, 2147483647 ], height=(int)[ 1, 2147483647 ], framerate=(fraction)[ 0/1, 2147483647/1 ], bpp=(int)32, depth=(int)32, red_mask=(int)-16777216, green_mask=(int)16711680, blue_mask=(int)65280, alpha_mask=(int)255, endianness=(int)4321; video/x-raw-rgb, width=(int)[ 1, 2147483647 ], height=(int)[ 1, 2147483647 ], framerate=(fraction)[ 0/1, 2147483647/1 ], bpp=(int)32, depth=(int)24, red_mask=(int)65280, green_mask=(int)16711680, blue_mask=(int)-16777216, endianness=(int)4321; video/x-raw-rgb, width=(int)[ 1, 2147483647 ], height=(int)[ 1, 2147483647 ], framerate=(fraction)[ 0/1, 2147483647/1 ], bpp=(int)32, depth=(int)24, red_mask=(int)255, green_mask=(int)65280, blue_mask=(int)16711680, endianness=(int)4321; video/x-raw-rgb, width=(int)[ 1, 2147483647 ], height=(int)[ 1, 2147483647 ], framerate=(fraction)[ 0/1, 2147483647/1 ], bpp=(int)32, depth=(int)24, red_mask=(int)16711680, green_mask=(int)65280, blue_mask=(int)255, endianness=(int)4321; video/x-raw-rgb, width=(int)[ 1, 2147483647 ], height=(int)[ 1, 2147483647 ], framerate=(fraction)[ 0/1, 2147483647/1 ], bpp=(int)32, depth=(int)24, red_mask=(int)-16777216, green_mask=(int)16711680, blue_mask=(int)65280, endianness=(int)4321; video/x-raw-yuv, width=(int)[ 1, 2147483647 ], height=(int)[ 1, 2147483647 ], framerate=(fraction)[ 0/1, 2147483647/1 ], format=(fourcc)YUV9; video/x-raw-yuv, width=(int)[ 1, 2147483647 ], height=(int)[ 1, 2147483647 ], framerate=(fraction)[ 0/1, 2147483647/1 ], format=(fourcc)YVU9; video/x-raw-yuv, width=(int)[ 1, 2147483647 ], height=(int)[ 1, 2147483647 ], framerate=(fraction)[ 0/1, 2147483647/1 ], format=(fourcc)Y41B; video/x-raw-rgb, width=(int)[ 1, 2147483647 ], height=(int)[ 1, 2147483647 ], framerate=(fraction)[ 0/1, 2147483647/1 ], bpp=(int)16, depth=(int)16, red_mask=(int)63488, green_mask=(int)2016, blue_mask=(int)31, endianness=(int)1234; video/x-raw-rgb, width=(int)[ 1, 2147483647 ], height=(int)[ 1, 2147483647 ], framerate=(fraction)[ 0/1, 2147483647/1 ], bpp=(int)16, depth=(int)15, red_mask=(int)31744, green_mask=(int)992, blue_mask=(int)31, endianness=(int)1234; video/x-raw-gray, width=(int)[ 1, 2147483647 ], height=(int)[ 1, 2147483647 ], framerate=(fraction)[ 0/1, 2147483647/1 ], bpp=(int)8, depth=(int)8; video/x-raw-rgb, width=(int)[ 1, 2147483647 ], height=(int)[ 1, 2147483647 ], framerate=(fraction)[ 0/1, 2147483647/1 ], bpp=(int)8, depth=(int)8, endianness=(int)1234; video/x-raw-yuv, width=(int)[ 1, 2147483647 ], height=(int)[ 1, 2147483647 ], framerate=(fraction)[ 0/1, 2147483647/1 ], format=(fourcc)UYVY; video/x-raw-yuv, width=(int)[ 1, 2147483647 ], height=(int)[ 1, 2147483647 ], framerate=(fraction)[ 0/1, 2147483647/1 ], format=(fourcc)IYU1; video/x-raw-yuv, width=(int)[ 1, 2147483647 ], height=(int)[ 1, 2147483647 ], framerate=(fraction)[ 0/1, 2147483647/1 ], format=(fourcc)AYUV</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>video/x-raw-yuv, width=(int)[ 1, 2147483647 ], height=(int)[ 1, 2147483647 ], framerate=(fraction)[ 0/1, 2147483647/1 ], format=(fourcc)I420; video/x-raw-yuv, width=(int)[ 1, 2147483647 ], height=(int)[ 1, 2147483647 ], framerate=(fraction)[ 0/1, 2147483647/1 ], format=(fourcc)YV12; video/x-raw-yuv, width=(int)[ 1, 2147483647 ], height=(int)[ 1, 2147483647 ], framerate=(fraction)[ 0/1, 2147483647/1 ], format=(fourcc)YUY2; video/x-raw-rgb, width=(int)[ 1, 2147483647 ], height=(int)[ 1, 2147483647 ], framerate=(fraction)[ 0/1, 2147483647/1 ], bpp=(int)24, depth=(int)24, red_mask=(int)16711680, green_mask=(int)65280, blue_mask=(int)255, endianness=(int)4321; video/x-raw-rgb, width=(int)[ 1, 2147483647 ], height=(int)[ 1, 2147483647 ], framerate=(fraction)[ 0/1, 2147483647/1 ], bpp=(int)24, depth=(int)24, red_mask=(int)255, green_mask=(int)65280, blue_mask=(int)16711680, endianness=(int)4321; video/x-raw-yuv, width=(int)[ 1, 2147483647 ], height=(int)[ 1, 2147483647 ], framerate=(fraction)[ 0/1, 2147483647/1 ], format=(fourcc)Y42B; video/x-raw-yuv, width=(int)[ 1, 2147483647 ], height=(int)[ 1, 2147483647 ], framerate=(fraction)[ 0/1, 2147483647/1 ], format=(fourcc)Y444; video/x-raw-rgb, width=(int)[ 1, 2147483647 ], height=(int)[ 1, 2147483647 ], framerate=(fraction)[ 0/1, 2147483647/1 ], bpp=(int)32, depth=(int)32, red_mask=(int)65280, green_mask=(int)16711680, blue_mask=(int)-16777216, alpha_mask=(int)255, endianness=(int)4321; video/x-raw-rgb, width=(int)[ 1, 2147483647 ], height=(int)[ 1, 2147483647 ], framerate=(fraction)[ 0/1, 2147483647/1 ], bpp=(int)32, depth=(int)32, red_mask=(int)16711680, green_mask=(int)65280, blue_mask=(int)255, alpha_mask=(int)-16777216, endianness=(int)4321; video/x-raw-rgb, width=(int)[ 1, 2147483647 ], height=(int)[ 1, 2147483647 ], framerate=(fraction)[ 0/1, 2147483647/1 ], bpp=(int)32, depth=(int)32, red_mask=(int)255, green_mask=(int)65280, blue_mask=(int)16711680, alpha_mask=(int)-16777216, endianness=(int)4321; video/x-raw-rgb, width=(int)[ 1, 2147483647 ], height=(int)[ 1, 2147483647 ], framerate=(fraction)[ 0/1, 2147483647/1 ], bpp=(int)32, depth=(int)32, red_mask=(int)-16777216, green_mask=(int)16711680, blue_mask=(int)65280, alpha_mask=(int)255, endianness=(int)4321; video/x-raw-rgb, width=(int)[ 1, 2147483647 ], height=(int)[ 1, 2147483647 ], framerate=(fraction)[ 0/1, 2147483647/1 ], bpp=(int)32, depth=(int)24, red_mask=(int)65280, green_mask=(int)16711680, blue_mask=(int)-16777216, endianness=(int)4321; video/x-raw-rgb, width=(int)[ 1, 2147483647 ], height=(int)[ 1, 2147483647 ], framerate=(fraction)[ 0/1, 2147483647/1 ], bpp=(int)32, depth=(int)24, red_mask=(int)255, green_mask=(int)65280, blue_mask=(int)16711680, endianness=(int)4321; video/x-raw-rgb, width=(int)[ 1, 2147483647 ], height=(int)[ 1, 2147483647 ], framerate=(fraction)[ 0/1, 2147483647/1 ], bpp=(int)32, depth=(int)24, red_mask=(int)16711680, green_mask=(int)65280, blue_mask=(int)255, endianness=(int)4321; video/x-raw-rgb, width=(int)[ 1, 2147483647 ], height=(int)[ 1, 2147483647 ], framerate=(fraction)[ 0/1, 2147483647/1 ], bpp=(int)32, depth=(int)24, red_mask=(int)-16777216, green_mask=(int)16711680, blue_mask=(int)65280, endianness=(int)4321; video/x-raw-yuv, width=(int)[ 1, 2147483647 ], height=(int)[ 1, 2147483647 ], framerate=(fraction)[ 0/1, 2147483647/1 ], format=(fourcc)YUV9; video/x-raw-yuv, width=(int)[ 1, 2147483647 ], height=(int)[ 1, 2147483647 ], framerate=(fraction)[ 0/1, 2147483647/1 ], format=(fourcc)YVU9; video/x-raw-yuv, width=(int)[ 1, 2147483647 ], height=(int)[ 1, 2147483647 ], framerate=(fraction)[ 0/1, 2147483647/1 ], format=(fourcc)Y41B; video/x-raw-rgb, width=(int)[ 1, 2147483647 ], height=(int)[ 1, 2147483647 ], framerate=(fraction)[ 0/1, 2147483647/1 ], bpp=(int)16, depth=(int)16, red_mask=(int)63488, green_mask=(int)2016, blue_mask=(int)31, endianness=(int)1234; video/x-raw-rgb, width=(int)[ 1, 2147483647 ], height=(int)[ 1, 2147483647 ], framerate=(fraction)[ 0/1, 2147483647/1 ], bpp=(int)16, depth=(int)15, red_mask=(int)31744, green_mask=(int)992, blue_mask=(int)31, endianness=(int)1234; video/x-raw-gray, width=(int)[ 1, 2147483647 ], height=(int)[ 1, 2147483647 ], framerate=(fraction)[ 0/1, 2147483647/1 ], bpp=(int)8, depth=(int)8; video/x-raw-rgb, width=(int)[ 1, 2147483647 ], height=(int)[ 1, 2147483647 ], framerate=(fraction)[ 0/1, 2147483647/1 ], bpp=(int)8, depth=(int)8, endianness=(int)1234; video/x-raw-yuv, width=(int)[ 1, 2147483647 ], height=(int)[ 1, 2147483647 ], framerate=(fraction)[ 0/1, 2147483647/1 ], format=(fourcc)UYVY; video/x-raw-yuv, width=(int)[ 1, 2147483647 ], height=(int)[ 1, 2147483647 ], framerate=(fraction)[ 0/1, 2147483647/1 ], format=(fourcc)IYU1; video/x-raw-yuv, width=(int)[ 1, 2147483647 ], height=(int)[ 1, 2147483647 ], framerate=(fraction)[ 0/1, 2147483647/1 ], format=(fourcc)AYUV</caps>
  </padtemplate>
 </feature>
</plugin>
<plugin>
 <name>gio</name>
 <description>GIO elements</description>
 <filename>/usr/lib/gstreamer-0.10/libgstgio.so</filename>
 <size>41024</size>
 <m32p>1206445013</m32p>
 <version>0.10.18</version>
 <license>LGPL</license>
 <source>gst-plugins-base</source>
 <package>GStreamer Base Plugins (Ubuntu)</package>
 <origin>https://launchpad.net/distros/ubuntu/+source/gst-plugins-base0.10</origin>
 <feature typename="GstElementFactory">
  <name>giosink</name>
  <rank>64</rank>
  <longname>GIO sink</longname>
  <class>Sink/File</class>
  <description>Write to any GIO-supported location</description>
  <author>René Stadler &lt;mail@renestadler.de&gt;, Sebastian Dröge &lt;slomo@circular-chaos.org&gt;</author>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>ANY</caps>
  </padtemplate>
  <interface>GstURIHandler</interface>
  <uri_type>sink</uri_type>
  <uri_protocol>dns-sd</uri_protocol>
  <uri_protocol>dav</uri_protocol>
  <uri_protocol>gphoto2</uri_protocol>
  <uri_protocol>computer</uri_protocol>
  <uri_protocol>smb</uri_protocol>
  <uri_protocol>cdda</uri_protocol>
  <uri_protocol>trash</uri_protocol>
  <uri_protocol>localtest</uri_protocol>
  <uri_protocol>ftp</uri_protocol>
  <uri_protocol>obex</uri_protocol>
  <uri_protocol>network</uri_protocol>
  <uri_protocol>sftp</uri_protocol>
  <uri_protocol>ssh</uri_protocol>
  <uri_protocol>burn</uri_protocol>
 </feature>
 <feature typename="GstElementFactory">
  <name>giosrc</name>
  <rank>64</rank>
  <longname>GIO source</longname>
  <class>Source/File</class>
  <description>Read from any GIO-supported location</description>
  <author>René Stadler &lt;mail@renestadler.de&gt;, Sebastian Dröge &lt;slomo@circular-chaos.org&gt;</author>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>ANY</caps>
  </padtemplate>
  <interface>GstURIHandler</interface>
  <uri_type>source</uri_type>
  <uri_protocol>dns-sd</uri_protocol>
  <uri_protocol>dav</uri_protocol>
  <uri_protocol>gphoto2</uri_protocol>
  <uri_protocol>computer</uri_protocol>
  <uri_protocol>smb</uri_protocol>
  <uri_protocol>cdda</uri_protocol>
  <uri_protocol>trash</uri_protocol>
  <uri_protocol>localtest</uri_protocol>
  <uri_protocol>ftp</uri_protocol>
  <uri_protocol>obex</uri_protocol>
  <uri_protocol>network</uri_protocol>
  <uri_protocol>sftp</uri_protocol>
  <uri_protocol>ssh</uri_protocol>
  <uri_protocol>burn</uri_protocol>
 </feature>
 <feature typename="GstElementFactory">
  <name>giostreamsink</name>
  <longname>GIO stream sink</longname>
  <class>Sink</class>
  <description>Write to any GIO stream</description>
  <author>Sebastian Dröge &lt;slomo@circular-chaos.org&gt;</author>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>ANY</caps>
  </padtemplate>
 </feature>
 <feature typename="GstElementFactory">
  <name>giostreamsrc</name>
  <longname>GIO stream source</longname>
  <class>Source</class>
  <description>Read from any GIO stream</description>
  <author>Sebastian Dröge &lt;slomo@circular-chaos.org&gt;</author>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>ANY</caps>
  </padtemplate>
 </feature>
</plugin>
<plugin>
 <name>alsa</name>
 <description>ALSA plugin library</description>
 <filename>/usr/lib/gstreamer-0.10/libgstalsa.so</filename>
 <size>99712</size>
 <m32p>1206445007</m32p>
 <version>0.10.18</version>
 <license>LGPL</license>
 <source>gst-plugins-base</source>
 <package>GStreamer Base Plugins (Ubuntu)</package>
 <origin>https://launchpad.net/distros/ubuntu/+source/gst-plugins-base0.10</origin>
 <feature typename="GstElementFactory">
  <name>alsamixer</name>
  <longname>Alsa mixer</longname>
  <class>Generic/Audio</class>
  <description>Control sound input and output levels with ALSA</description>
  <author>Leif Johnson &lt;leif@ambient.2y.net&gt;</author>
  <interface>GstPropertyProbe</interface>
  <interface>GstMixer</interface>
  <interface>GstImplementsInterface</interface>
 </feature>
 <feature typename="GstElementFactory">
  <name>alsasrc</name>
  <rank>256</rank>
  <longname>Audio source (ALSA)</longname>
  <class>Source/Audio</class>
  <description>Read from a sound card via ALSA</description>
  <author>Wim Taymans &lt;wim@fluendo.com&gt;</author>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>audio/x-raw-int, endianness=(int){ 1234, 4321 }, signed=(boolean){ true, false }, width=(int)32, depth=(int)32, rate=(int)[ 1, 2147483647 ], channels=(int)[ 1, 2147483647 ]; audio/x-raw-int, endianness=(int){ 1234, 4321 }, signed=(boolean){ true, false }, width=(int)32, depth=(int)24, rate=(int)[ 1, 2147483647 ], channels=(int)[ 1, 2147483647 ]; audio/x-raw-int, endianness=(int){ 1234, 4321 }, signed=(boolean){ true, false }, width=(int)24, depth=(int)24, rate=(int)[ 1, 2147483647 ], channels=(int)[ 1, 2147483647 ]; audio/x-raw-int, endianness=(int){ 1234, 4321 }, signed=(boolean){ true, false }, width=(int)16, depth=(int)16, rate=(int)[ 1, 2147483647 ], channels=(int)[ 1, 2147483647 ]; audio/x-raw-int, signed=(boolean){ true, false }, width=(int)8, depth=(int)8, rate=(int)[ 1, 2147483647 ], channels=(int)[ 1, 2147483647 ]</caps>
  </padtemplate>
  <interface>GstPropertyProbe</interface>
  <interface>GstMixer</interface>
  <interface>GstImplementsInterface</interface>
 </feature>
 <feature typename="GstElementFactory">
  <name>alsasink</name>
  <rank>256</rank>
  <longname>Audio sink (ALSA)</longname>
  <class>Sink/Audio</class>
  <description>Output to a sound card via ALSA</description>
  <author>Wim Taymans &lt;wim@fluendo.com&gt;</author>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>audio/x-raw-int, endianness=(int){ 1234, 4321 }, signed=(boolean){ true, false }, width=(int)32, depth=(int)32, rate=(int)[ 1, 2147483647 ], channels=(int)[ 1, 2147483647 ]; audio/x-raw-int, endianness=(int){ 1234, 4321 }, signed=(boolean){ true, false }, width=(int)24, depth=(int)24, rate=(int)[ 1, 2147483647 ], channels=(int)[ 1, 2147483647 ]; audio/x-raw-int, endianness=(int){ 1234, 4321 }, signed=(boolean){ true, false }, width=(int)32, depth=(int)24, rate=(int)[ 1, 2147483647 ], channels=(int)[ 1, 2147483647 ]; audio/x-raw-int, endianness=(int){ 1234, 4321 }, signed=(boolean){ true, false }, width=(int)16, depth=(int)16, rate=(int)[ 1, 2147483647 ], channels=(int)[ 1, 2147483647 ]; audio/x-raw-int, signed=(boolean){ true, false }, width=(int)8, depth=(int)8, rate=(int)[ 1, 2147483647 ], channels=(int)[ 1, 2147483647 ]; audio/x-iec958</caps>
  </padtemplate>
  <interface>GstPropertyProbe</interface>
 </feature>
</plugin>
<plugin>
 <name>audiotestsrc</name>
 <description>Creates audio test signals of given frequency and volume</description>
 <filename>/usr/lib/gstreamer-0.10/libgstaudiotestsrc.so</filename>
 <size>28520</size>
 <m32p>1206445013</m32p>
 <version>0.10.18</version>
 <license>LGPL</license>
 <source>gst-plugins-base</source>
 <package>GStreamer Base Plugins (Ubuntu)</package>
 <origin>https://launchpad.net/distros/ubuntu/+source/gst-plugins-base0.10</origin>
 <feature typename="GstElementFactory">
  <name>audiotestsrc</name>
  <longname>Audio test source</longname>
  <class>Source/Audio</class>
  <description>Creates audio test signals of given frequency and volume</description>
  <author>Stefan Kost &lt;ensonic@users.sf.net&gt;</author>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>audio/x-raw-int, endianness=(int)1234, signed=(boolean)true, width=(int)16, depth=(int)16, rate=(int)[ 1, 2147483647 ], channels=(int)1; audio/x-raw-int, endianness=(int)1234, signed=(boolean)true, width=(int)32, depth=(int)32, rate=(int)[ 1, 2147483647 ], channels=(int)1; audio/x-raw-float, endianness=(int)1234, width=(int){ 32, 64 }, rate=(int)[ 1, 2147483647 ], channels=(int)1</caps>
  </padtemplate>
 </feature>
</plugin>
<plugin>
 <name>uridecodebin</name>
 <description>URI Decoder bin</description>
 <filename>/usr/lib/gstreamer-0.10/libgstdecodebin2.so</filename>
 <size>91232</size>
 <m32p>1206445013</m32p>
 <version>0.10.18</version>
 <license>LGPL</license>
 <source>gst-plugins-base</source>
 <package>GStreamer Base Plugins (Ubuntu)</package>
 <origin>https://launchpad.net/distros/ubuntu/+source/gst-plugins-base0.10</origin>
 <feature typename="GstElementFactory">
  <name>decodebin2</name>
  <longname>Decoder Bin</longname>
  <class>Generic/Bin/Decoder</class>
  <description>Autoplug and decode to raw media</description>
  <author>Edward Hervey &lt;edward@fluendo.com&gt;</author>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>ANY</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>src%d</nametemplate>
   <direction>src</direction>
   <presence>sometimes</presence>
   <caps>ANY</caps>
  </padtemplate>
  <interface>GstChildProxy</interface>
 </feature>
 <feature typename="GstElementFactory">
  <name>uridecodebin</name>
  <longname>URI Decoder</longname>
  <class>Generic/Bin/Decoder</class>
  <description>Autoplug and decode an URI to raw media</description>
  <author>Wim Taymans &lt;wim.taymans@gmail.com&gt;</author>
  <padtemplate>
   <nametemplate>src%d</nametemplate>
   <direction>src</direction>
   <presence>sometimes</presence>
   <caps>ANY</caps>
  </padtemplate>
  <interface>GstChildProxy</interface>
 </feature>
</plugin>
<plugin>
 <name>ximagesink</name>
 <description>X11 video output element based on standard Xlib calls</description>
 <filename>/usr/lib/gstreamer-0.10/libgstximagesink.so</filename>
 <size>50520</size>
 <m32p>1206445016</m32p>
 <version>0.10.18</version>
 <license>LGPL</license>
 <source>gst-plugins-base</source>
 <package>GStreamer Base Plugins (Ubuntu)</package>
 <origin>https://launchpad.net/distros/ubuntu/+source/gst-plugins-base0.10</origin>
 <feature typename="GstElementFactory">
  <name>ximagesink</name>
  <rank>128</rank>
  <longname>Video sink</longname>
  <class>Sink/Video</class>
  <description>A standard X based videosink</description>
  <author>Julien Moutte &lt;julien@moutte.net&gt;</author>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>video/x-raw-rgb, framerate=(fraction)[ 0/1, 2147483647/1 ], width=(int)[ 1, 2147483647 ], height=(int)[ 1, 2147483647 ]</caps>
  </padtemplate>
  <interface>GstXOverlay</interface>
  <interface>GstNavigation</interface>
  <interface>GstImplementsInterface</interface>
 </feature>
</plugin>
<plugin>
 <name>dvdlpcmdec</name>
 <description>Decode DVD LPCM frames into standard PCM</description>
 <filename>/usr/lib/gstreamer-0.10/libgstdvdlpcmdec.so</filename>
 <size>19872</size>
 <m32p>1205346065</m32p>
 <version>0.10.7</version>
 <license>LGPL</license>
 <source>gst-plugins-ugly</source>
 <package>GStreamer Ugly Plugins (Ubuntu)</package>
 <origin>https://launchpad.net/distros/ubuntu/+source/gst-plugins-ugly0.10</origin>
 <feature typename="GstElementFactory">
  <name>dvdlpcmdec</name>
  <rank>256</rank>
  <longname>DVD LPCM Audio decoder</longname>
  <class>Codec/Demuxer/Audio</class>
  <description>Decode DVD LPCM frames into standard PCM audio</description>
  <author>Jan Schmidt &lt;jan@noraisin.net&gt;
Michael Smith &lt;msmith@fluendo.com&gt;</author>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>audio/x-private1-lpcm; audio/x-lpcm, width=(int){ 16, 20, 24 }, rate=(int){ 32000, 44100, 48000, 96000 }, channels=(int)[ 1, 8 ], dynamic_range=(int)[ 0, 255 ], emphasis=(boolean){ true, false }, mute=(boolean){ true, false }</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>audio/x-raw-int, width=(int){ 16, 24 }, rate=(int){ 32000, 44100, 48000, 96000 }, channels=(int)[ 1, 8 ], endianness=(int){ 4321 }, depth=(int){ 16, 24 }, signed=(boolean){ true }</caps>
  </padtemplate>
 </feature>
</plugin>
<plugin>
 <name>mpegaudioparse</name>
 <description>MPEG-1 layer 1/2/3 audio stream elements</description>
 <filename>/usr/lib/gstreamer-0.10/libgstmpegaudioparse.so</filename>
 <size>49576</size>
 <m32p>1205346065</m32p>
 <version>0.10.7</version>
 <license>LGPL</license>
 <source>gst-plugins-ugly</source>
 <package>GStreamer Ugly Plugins (Ubuntu)</package>
 <origin>https://launchpad.net/distros/ubuntu/+source/gst-plugins-ugly0.10</origin>
 <feature typename="GstElementFactory">
  <name>xingmux</name>
  <longname>MP3 Xing muxer</longname>
  <class>Formatter/Metadata</class>
  <description>Adds a Xing header to the beginning of a VBR MP3 file</description>
  <author>Christophe Fergeau &lt;teuf@gnome.org&gt;</author>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>audio/mpeg, mpegversion=(int)1, layer=(int)[ 1, 3 ]</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>audio/mpeg, mpegversion=(int)1, layer=(int)[ 1, 3 ]</caps>
  </padtemplate>
 </feature>
 <feature typename="GstElementFactory">
  <name>mp3parse</name>
  <rank>257</rank>
  <longname>MPEG1 Audio Parser</longname>
  <class>Codec/Parser/Audio</class>
  <description>Parses and frames mpeg1 audio streams (levels 1-3), provides seek</description>
  <author>Jan Schmidt &lt;thaytan@mad.scientist.com&gt;
Erik Walthinsen &lt;omega@cse.ogi.edu&gt;</author>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>audio/mpeg, mpegversion=(int)1, parsed=(boolean)false</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>audio/mpeg, mpegversion=(int)1, layer=(int)[ 1, 3 ], rate=(int)[ 8000, 48000 ], channels=(int)[ 1, 2 ], parsed=(boolean)true</caps>
  </padtemplate>
 </feature>
</plugin>
<plugin>
 <name>mad</name>
 <description>id3 tag manipulation and mp3 decoding based on the mad library</description>
 <filename>/usr/lib/gstreamer-0.10/libgstmad.so</filename>
 <size>71328</size>
 <m32p>1205346065</m32p>
 <version>0.10.7</version>
 <license>GPL</license>
 <source>gst-plugins-ugly</source>
 <package>GStreamer Ugly Plugins (Ubuntu)</package>
 <origin>https://launchpad.net/distros/ubuntu/+source/gst-plugins-ugly0.10</origin>
 <feature typename="GstElementFactory">
  <name>mad</name>
  <rank>128</rank>
  <longname>mad mp3 decoder</longname>
  <class>Codec/Decoder/Audio</class>
  <description>Uses mad code to decode mp3 streams</description>
  <author>Wim Taymans &lt;wim@fluendo.com&gt;</author>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>audio/mpeg, mpegversion=(int)1, layer=(int)[ 1, 3 ], rate=(int){ 8000, 11025, 12000, 16000, 22050, 24000, 32000, 44100, 48000 }, channels=(int)[ 1, 2 ]</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>audio/x-raw-int, endianness=(int)1234, signed=(boolean)true, width=(int)32, depth=(int)32, rate=(int){ 8000, 11025, 12000, 16000, 22050, 24000, 32000, 44100, 48000 }, channels=(int)[ 1, 2 ]</caps>
  </padtemplate>
 </feature>
 <feature typename="GstElementFactory">
  <name>id3mux</name>
  <longname>id3 tag muxer</longname>
  <class>Codec/Muxer/Audio</class>
  <description>Add ID3 tagging information</description>
  <author>Benjamin Otte &lt;otte@gnome.org&gt;</author>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>application/x-id3</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>audio/mpeg, mpegversion=(int)1; audio/x-flac</caps>
  </padtemplate>
  <interface>GstTagSetter</interface>
 </feature>
</plugin>
<plugin>
 <name>mpeg2dec</name>
 <description>LibMpeg2 decoder</description>
 <filename>/usr/lib/gstreamer-0.10/libgstmpeg2dec.so</filename>
 <size>40800</size>
 <m32p>1205346065</m32p>
 <version>0.10.7</version>
 <license>GPL</license>
 <source>gst-plugins-ugly</source>
 <package>GStreamer Ugly Plugins (Ubuntu)</package>
 <origin>https://launchpad.net/distros/ubuntu/+source/gst-plugins-ugly0.10</origin>
 <feature typename="GstElementFactory">
  <name>mpeg2dec</name>
  <rank>128</rank>
  <longname>mpeg1 and mpeg2 video decoder</longname>
  <class>Codec/Decoder/Video</class>
  <description>Uses libmpeg2 to decode MPEG video streams</description>
  <author>Wim Taymans &lt;wim.taymans@chello.be&gt;</author>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>video/x-raw-yuv, format=(fourcc){ YV12, I420, Y42B }, width=(int)[ 16, 4096 ], height=(int)[ 16, 4096 ], framerate=(fraction)[ 0/1, 2147483647/1 ]</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>video/mpeg, mpegversion=(int)[ 1, 2 ], systemstream=(boolean)false</caps>
  </padtemplate>
 </feature>
</plugin>
<plugin>
 <name>a52dec</name>
 <description>Decodes ATSC A/52 encoded audio streams</description>
 <filename>/usr/lib/gstreamer-0.10/libgsta52dec.so</filename>
 <size>24912</size>
 <m32p>1205346065</m32p>
 <version>0.10.7</version>
 <license>GPL</license>
 <source>gst-plugins-ugly</source>
 <package>GStreamer Ugly Plugins (Ubuntu)</package>
 <origin>https://launchpad.net/distros/ubuntu/+source/gst-plugins-ugly0.10</origin>
 <feature typename="GstElementFactory">
  <name>a52dec</name>
  <rank>128</rank>
  <longname>ATSC A/52 audio decoder</longname>
  <class>Codec/Decoder/Audio</class>
  <description>Decodes ATSC A/52 encoded audio streams</description>
  <author>David I. Lehn &lt;dlehn@users.sourceforge.net&gt;</author>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>audio/x-ac3; audio/ac3; audio/x-private1-ac3</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>audio/x-raw-float, endianness=(int)1234, width=(int)32, rate=(int)[ 4000, 96000 ], channels=(int)[ 1, 6 ]</caps>
  </padtemplate>
 </feature>
</plugin>
<plugin>
 <name>realmedia</name>
 <description>RealMedia demuxer and depayloader</description>
 <filename>/usr/lib/gstreamer-0.10/libgstrmdemux.so</filename>
 <size>101632</size>
 <m32p>1205346065</m32p>
 <version>0.10.7</version>
 <license>LGPL</license>
 <source>gst-plugins-ugly</source>
 <package>GStreamer Ugly Plugins (Ubuntu)</package>
 <origin>https://launchpad.net/distros/ubuntu/+source/gst-plugins-ugly0.10</origin>
 <feature typename="GstElementFactory">
  <name>rmdemux</name>
  <rank>256</rank>
  <longname>RealMedia Demuxer</longname>
  <class>Codec/Demuxer</class>
  <description>Demultiplex a RealMedia file into audio and video streams</description>
  <author>David Schleef &lt;ds@schleef.org&gt;</author>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>application/vnd.rn-realmedia</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>video_%02d</nametemplate>
   <direction>src</direction>
   <presence>sometimes</presence>
   <caps>ANY</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>audio_%02d</nametemplate>
   <direction>src</direction>
   <presence>sometimes</presence>
   <caps>ANY</caps>
  </padtemplate>
 </feature>
 <feature typename="GstElementFactory">
  <name>rademux</name>
  <rank>128</rank>
  <longname>RealAudio Demuxer</longname>
  <class>Codec/Demuxer</class>
  <description>Demultiplex a RealAudio file</description>
  <author>Tim-Philipp Müller &lt;tim centricular net&gt;</author>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>application/x-pn-realaudio</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>sometimes</presence>
   <caps>ANY</caps>
  </padtemplate>
 </feature>
 <feature typename="GstElementFactory">
  <name>rdtdepay</name>
  <rank>64</rank>
  <longname>RDT packet parser</longname>
  <class>Codec/Depayloader/Network</class>
  <description>Extracts RealMedia from RDT packets</description>
  <author>Lutz Mueller &lt;lutz at topfrose dot de&gt;, Wim Taymans &lt;wim@fluendo.com&gt;</author>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>application/vnd.rn-realmedia</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>application/x-rdt, media=(string)application, clock-rate=(int)[ 1, 2147483647 ], encoding-name=(string)X-REAL-RDT</caps>
  </padtemplate>
 </feature>
 <feature typename="GstElementFactory">
  <name>rdtmanager</name>
  <rank>64</rank>
  <longname>RTP Decoder</longname>
  <class>Codec/Parser/Network</class>
  <description>Accepts raw RTP and RTCP packets and sends them forward</description>
  <author>Wim Taymans &lt;wim@fluendo.com&gt;</author>
  <padtemplate>
   <nametemplate>recv_rtp_sink_%d</nametemplate>
   <direction>sink</direction>
   <presence>request</presence>
   <caps>application/x-rdt</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>recv_rtcp_sink_%d</nametemplate>
   <direction>sink</direction>
   <presence>request</presence>
   <caps>application/x-rtcp</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>recv_rtp_src_%d_%d_%d</nametemplate>
   <direction>src</direction>
   <presence>sometimes</presence>
   <caps>application/x-rdt</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>rtcp_src_%d</nametemplate>
   <direction>src</direction>
   <presence>request</presence>
   <caps>application/x-rtcp</caps>
  </padtemplate>
 </feature>
 <feature typename="GstElementFactory">
  <name>rtspreal</name>
  <rank>64</rank>
  <longname>RealMedia RTSP Extension</longname>
  <class>Network/Extension/Protocol</class>
  <description>Extends RTSP so that it can handle RealMedia setup</description>
  <author>Wim Taymans &lt;wim.taymans@gmail.com&gt;</author>
  <interface>GstRTSPExtension</interface>
 </feature>
</plugin>
<plugin>
 <name>siddec</name>
 <description>Uses libsidplay to decode .sid files</description>
 <filename>/usr/lib/gstreamer-0.10/libgstsid.so</filename>
 <size>24504</size>
 <m32p>1205346065</m32p>
 <version>0.10.7</version>
 <license>GPL</license>
 <source>gst-plugins-ugly</source>
 <package>GStreamer Ugly Plugins (Ubuntu)</package>
 <origin>https://launchpad.net/distros/ubuntu/+source/gst-plugins-ugly0.10</origin>
 <feature typename="GstElementFactory">
  <name>siddec</name>
  <rank>256</rank>
  <longname>Sid decoder</longname>
  <class>Codec/Decoder/Audio</class>
  <description>Use libsidplay to decode SID audio tunes</description>
  <author>Wim Taymans &lt;wim.taymans@gmail.com&gt;</author>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>audio/x-raw-int, endianness=(int)1234, signed=(boolean){ true, false }, width=(int){ 8, 16 }, depth=(int){ 8, 16 }, rate=(int)[ 8000, 48000 ], channels=(int)[ 1, 2 ]</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>audio/x-sid</caps>
  </padtemplate>
 </feature>
</plugin>
<plugin>
 <name>mpegstream</name>
 <description>MPEG system stream parser</description>
 <filename>/usr/lib/gstreamer-0.10/libgstmpegstream.so</filename>
 <size>70960</size>
 <m32p>1205346065</m32p>
 <version>0.10.7</version>
 <license>LGPL</license>
 <source>gst-plugins-ugly</source>
 <package>GStreamer Ugly Plugins (Ubuntu)</package>
 <origin>https://launchpad.net/distros/ubuntu/+source/gst-plugins-ugly0.10</origin>
 <feature typename="GstElementFactory">
  <name>mpegparse</name>
  <longname>MPEG System Parser</longname>
  <class>Codec/Parser</class>
  <description>Parses MPEG1 and MPEG2 System Streams</description>
  <author>Erik Walthinsen &lt;omega@cse.ogi.edu&gt;
Wim Taymans &lt;wim.taymans@chello.be&gt;</author>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>video/mpeg, mpegversion=(int)[ 1, 2 ], systemstream=(boolean)true</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>video/mpeg, mpegversion=(int)[ 1, 2 ], systemstream=(boolean)true</caps>
  </padtemplate>
 </feature>
 <feature typename="GstElementFactory">
  <name>mpegdemux</name>
  <rank>128</rank>
  <longname>MPEG Demuxer</longname>
  <class>Codec/Demuxer</class>
  <description>Demultiplexes MPEG1 and MPEG2 System Streams</description>
  <author>Erik Walthinsen &lt;omega@cse.ogi.edu&gt;
Wim Taymans &lt;wim.taymans@chello.be&gt;</author>
  <padtemplate>
   <nametemplate>video_%02d</nametemplate>
   <direction>src</direction>
   <presence>sometimes</presence>
   <caps>video/mpeg, mpegversion=(int){ 1, 2 }, systemstream=(boolean)false</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>audio_%02d</nametemplate>
   <direction>src</direction>
   <presence>sometimes</presence>
   <caps>audio/mpeg, mpegversion=(int)1</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>private_%d</nametemplate>
   <direction>src</direction>
   <presence>sometimes</presence>
   <caps>ANY</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>video/mpeg, mpegversion=(int){ 1, 2 }, systemstream=(boolean)true</caps>
  </padtemplate>
 </feature>
 <feature typename="GstElementFactory">
  <name>dvddemux</name>
  <rank>129</rank>
  <longname>DVD Demuxer</longname>
  <class>Codec/Demuxer</class>
  <description>Demultiplexes DVD (VOB) MPEG2 streams</description>
  <author>Martin Soto &lt;martinsoto@users.sourceforge.net&gt;</author>
  <padtemplate>
   <nametemplate>video_%02d</nametemplate>
   <direction>src</direction>
   <presence>sometimes</presence>
   <caps>video/mpeg, mpegversion=(int){ 1, 2 }, systemstream=(boolean)false</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>audio_%02d</nametemplate>
   <direction>src</direction>
   <presence>sometimes</presence>
   <caps>audio/mpeg, mpegversion=(int)1</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>private_%d</nametemplate>
   <direction>src</direction>
   <presence>sometimes</presence>
   <caps>ANY</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>video/mpeg, mpegversion=(int)2, systemstream=(boolean)true</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>dvd_audio_%02d</nametemplate>
   <direction>src</direction>
   <presence>sometimes</presence>
   <caps>audio/mpeg, mpegversion=(int)1; audio/x-lpcm, width=(int){ 16, 20, 24 }, rate=(int){ 48000, 96000 }, channels=(int)[ 1, 8 ], dynamic_range=(int)[ 0, 255 ], emphasis=(boolean){ false, true }, mute=(boolean){ false, true }; audio/x-ac3; audio/x-dts</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>current_video</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>video/mpeg, mpegversion=(int){ 1, 2 }, systemstream=(boolean)false</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>current_audio</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>audio/mpeg, mpegversion=(int)1; audio/x-lpcm, width=(int){ 16, 20, 24 }, rate=(int){ 48000, 96000 }, channels=(int)[ 1, 8 ], dynamic_range=(int)[ 0, 255 ], emphasis=(boolean){ false, true }, mute=(boolean){ false, true }; audio/x-ac3; audio/x-dts</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>subpicture_%d</nametemplate>
   <direction>src</direction>
   <presence>sometimes</presence>
   <caps>video/x-dvd-subpicture</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>current_subpicture</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>video/x-dvd-subpicture</caps>
  </padtemplate>
 </feature>
</plugin>
<plugin>
 <name>dvdsub</name>
 <description>DVD subtitle parser and decoder</description>
 <filename>/usr/lib/gstreamer-0.10/libgstdvdsub.so</filename>
 <size>28144</size>
 <m32p>1205346065</m32p>
 <version>0.10.7</version>
 <license>LGPL</license>
 <source>gst-plugins-ugly</source>
 <package>GStreamer Ugly Plugins (Ubuntu)</package>
 <origin>https://launchpad.net/distros/ubuntu/+source/gst-plugins-ugly0.10</origin>
 <feature typename="GstElementFactory">
  <name>dvdsubdec</name>
  <longname>DVD subtitle decoder</longname>
  <class>Codec/Decoder/Video</class>
  <description>Decodes DVD subtitles into AYUV video frames</description>
  <author>Wim Taymans &lt;wim.taymans@gmail.com&gt;, Jan Schmidt &lt;thaytan@mad.scientist.com&gt;</author>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>video/x-raw-yuv, format=(fourcc)AYUV, width=(int)720, height=(int)576, framerate=(fraction)0/1</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>video/x-dvd-subpicture</caps>
  </padtemplate>
 </feature>
 <feature typename="GstElementFactory">
  <name>dvdsubparse</name>
  <longname>DVD subtitle parser</longname>
  <class>Codec/Parser/Subtitle</class>
  <description>Parses and packetizes DVD subtitle streams</description>
  <author>Mark Nauwelaerts &lt;mnauw@users.sourceforge.net&gt;</author>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>video/x-dvd-subpicture, parsed=(boolean)true</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>video/x-dvd-subpicture</caps>
  </padtemplate>
 </feature>
</plugin>
<plugin>
 <name>iec958</name>
 <description>Convert raw AC3 into IEC958 (S/PDIF) frames</description>
 <filename>/usr/lib/gstreamer-0.10/libgstiec958.so</filename>
 <size>16304</size>
 <m32p>1205346065</m32p>
 <version>0.10.7</version>
 <license>LGPL</license>
 <source>gst-plugins-ugly</source>
 <package>GStreamer Ugly Plugins (Ubuntu)</package>
 <origin>https://launchpad.net/distros/ubuntu/+source/gst-plugins-ugly0.10</origin>
 <feature typename="GstElementFactory">
  <name>ac3iec958</name>
  <longname>AC3 to IEC958 filter</longname>
  <class>Codec/Muxer/Audio</class>
  <description>Pads AC3 frames into IEC958 frames suitable for a raw S/PDIF interface</description>
  <author>Martin Soto &lt;martinsoto@users.sourceforge.net&gt;</author>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>audio/x-private1-ac3; audio/x-ac3; audio/ac3</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>audio/x-iec958, rate=(int){ 32000, 44100, 48000 }; audio/x-raw-int, endianness=(int)4321, signed=(boolean)true, width=(int)16, depth=(int)16, rate=(int){ 32000, 44100, 48000 }, channels=(int)2</caps>
  </padtemplate>
 </feature>
</plugin>
<plugin>
 <name>dvdread</name>
 <description>Access a DVD with dvdread</description>
 <filename>/usr/lib/gstreamer-0.10/libgstdvdread.so</filename>
 <size>40496</size>
 <m32p>1205346065</m32p>
 <version>0.10.7</version>
 <license>GPL</license>
 <source>gst-plugins-ugly</source>
 <package>GStreamer Ugly Plugins (Ubuntu)</package>
 <origin>https://launchpad.net/distros/ubuntu/+source/gst-plugins-ugly0.10</origin>
 <feature typename="GstElementFactory">
  <name>dvdreadsrc</name>
  <rank>128</rank>
  <longname>DVD Source</longname>
  <class>Source/File/DVD</class>
  <description>Access a DVD title/chapter/angle using libdvdread</description>
  <author>Erik Walthinsen &lt;omega@cse.ogi.edu&gt;</author>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>video/mpeg, mpegversion=(int)2, systemstream=(boolean)true</caps>
  </padtemplate>
  <interface>GstURIHandler</interface>
  <uri_type>source</uri_type>
  <uri_protocol>dvd</uri_protocol>
 </feature>
</plugin>
<plugin>
 <name>asf</name>
 <description>Demuxes and muxes audio and video in Microsofts ASF format</description>
 <filename>/usr/lib/gstreamer-0.10/libgstasf.so</filename>
 <size>103736</size>
 <m32p>1205346065</m32p>
 <version>0.10.7</version>
 <license>LGPL</license>
 <source>gst-plugins-ugly</source>
 <package>GStreamer Ugly Plugins (Ubuntu)</package>
 <origin>https://launchpad.net/distros/ubuntu/+source/gst-plugins-ugly0.10</origin>
 <feature typename="GstElementFactory">
  <name>asfdemux</name>
  <rank>128</rank>
  <longname>ASF Demuxer</longname>
  <class>Codec/Demuxer</class>
  <description>Demultiplexes ASF Streams</description>
  <author>Owen Fraser-Green &lt;owen@discobabe.net&gt;</author>
  <padtemplate>
   <nametemplate>audio_%02d</nametemplate>
   <direction>src</direction>
   <presence>sometimes</presence>
   <caps>ANY</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>video_%02d</nametemplate>
   <direction>src</direction>
   <presence>sometimes</presence>
   <caps>ANY</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>video/x-ms-asf</caps>
  </padtemplate>
 </feature>
 <feature typename="GstElementFactory">
  <name>rtspwms</name>
  <rank>128</rank>
  <longname>WMS RTSP Extension</longname>
  <class>Network/Extension/Protocol</class>
  <description>Extends RTSP so that it can handle WMS setup</description>
  <author>Wim Taymans &lt;wim.taymans@gmail.com&gt;</author>
  <interface>GstRTSPExtension</interface>
 </feature>
</plugin>
<plugin>
 <name>xvid</name>
 <description>XviD plugin library</description>
 <filename>/usr/lib/gstreamer-0.10/libgstxvid.so</filename>
 <size>50168</size>
 <m32p>1203939860</m32p>
 <version>0.10.6</version>
 <license>GPL</license>
 <source>gst-plugins-bad</source>
 <package>GStreamer Bad Multiverse Plugins (Ubuntu)</package>
 <origin>https://launchpad.net/distros/ubuntu/+source/gst-plugins-bad-multiverse0.10</origin>
 <feature typename="GstElementFactory">
  <name>xviddec</name>
  <longname>XviD video decoder</longname>
  <class>Codec/Decoder/Video</class>
  <description>XviD decoder based on xvidcore</description>
  <author>Ronald Bultje &lt;rbultje@ronald.bitfreak.net&gt;</author>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>video/x-xvid, width=(int)[ 0, 2147483647 ], height=(int)[ 0, 2147483647 ], framerate=(fraction)[ 0/1, 2147483647/1 ]</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>video/x-raw-yuv, format=(fourcc){ I420, YUY2, YV12, YVYU, UYVY }, width=(int)[ 1, 2147483647 ], height=(int)[ 1, 2147483647 ], framerate=(fraction)[ 0/1, 2147483647/1 ]; video/x-raw-rgb, width=(int)[ 0, 2147483647 ], height=(int)[ 0, 2147483647 ], framerate=(fraction)[ 0/1, 2147483647/1 ], depth=(int)24, bpp=(int)32, endianness=(int)4321, red_mask=(int)16711680, green_mask=(int)65280, blue_mask=(int)255; video/x-raw-rgb, width=(int)[ 0, 2147483647 ], height=(int)[ 0, 2147483647 ], framerate=(fraction)[ 0/1, 2147483647/1 ], depth=(int)24, bpp=(int)32, endianness=(int)4321, red_mask=(int)-16777216, green_mask=(int)16711680, blue_mask=(int)65280; video/x-raw-rgb, width=(int)[ 0, 2147483647 ], height=(int)[ 0, 2147483647 ], framerate=(fraction)[ 0/1, 2147483647/1 ], depth=(int)24, bpp=(int)32, endianness=(int)4321, red_mask=(int)65280, green_mask=(int)16711680, blue_mask=(int)-16777216; video/x-raw-rgb, width=(int)[ 0, 2147483647 ], height=(int)[ 0, 2147483647 ], framerate=(fraction)[ 0/1, 2147483647/1 ], depth=(int)24, bpp=(int)32, endianness=(int)4321, red_mask=(int)255, green_mask=(int)65280, blue_mask=(int)16711680; video/x-raw-rgb, width=(int)[ 0, 2147483647 ], height=(int)[ 0, 2147483647 ], framerate=(fraction)[ 0/1, 2147483647/1 ], depth=(int)24, bpp=(int)24, endianness=(int)4321, red_mask=(int)255, green_mask=(int)65280, blue_mask=(int)16711680; video/x-raw-rgb, bpp=(int)16, depth=(int)15, endianness=(int)1234, red_mask=(int)31744, green_mask=(int)992, blue_mask=(int)31, width=(int)[ 1, 2147483647 ], height=(int)[ 1, 2147483647 ], framerate=(fraction)[ 0/1, 2147483647/1 ]; video/x-raw-rgb, bpp=(int)16, depth=(int)16, endianness=(int)1234, red_mask=(int)63488, green_mask=(int)2016, blue_mask=(int)31, width=(int)[ 1, 2147483647 ], height=(int)[ 1, 2147483647 ], framerate=(fraction)[ 0/1, 2147483647/1 ]</caps>
  </padtemplate>
 </feature>
 <feature typename="GstElementFactory">
  <name>xvidenc</name>
  <longname>XviD video encoder</longname>
  <class>Codec/Encoder/Video</class>
  <description>XviD encoder based on xvidcore</description>
  <author>Ronald Bultje &lt;rbultje@ronald.bitfreak.net&gt;</author>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>video/x-raw-yuv, format=(fourcc){ I420, YUY2, YV12, YVYU, UYVY }, width=(int)[ 1, 2147483647 ], height=(int)[ 1, 2147483647 ], framerate=(fraction)[ 0/1, 2147483647/1 ]; video/x-raw-rgb, width=(int)[ 0, 2147483647 ], height=(int)[ 0, 2147483647 ], framerate=(fraction)[ 0/1, 2147483647/1 ], depth=(int)24, bpp=(int)32, endianness=(int)4321, red_mask=(int)16711680, green_mask=(int)65280, blue_mask=(int)255; video/x-raw-rgb, width=(int)[ 0, 2147483647 ], height=(int)[ 0, 2147483647 ], framerate=(fraction)[ 0/1, 2147483647/1 ], depth=(int)24, bpp=(int)32, endianness=(int)4321, red_mask=(int)-16777216, green_mask=(int)16711680, blue_mask=(int)65280; video/x-raw-rgb, width=(int)[ 0, 2147483647 ], height=(int)[ 0, 2147483647 ], framerate=(fraction)[ 0/1, 2147483647/1 ], depth=(int)24, bpp=(int)32, endianness=(int)4321, red_mask=(int)65280, green_mask=(int)16711680, blue_mask=(int)-16777216; video/x-raw-rgb, width=(int)[ 0, 2147483647 ], height=(int)[ 0, 2147483647 ], framerate=(fraction)[ 0/1, 2147483647/1 ], depth=(int)24, bpp=(int)32, endianness=(int)4321, red_mask=(int)255, green_mask=(int)65280, blue_mask=(int)16711680; video/x-raw-rgb, width=(int)[ 0, 2147483647 ], height=(int)[ 0, 2147483647 ], framerate=(fraction)[ 0/1, 2147483647/1 ], depth=(int)24, bpp=(int)24, endianness=(int)4321, red_mask=(int)255, green_mask=(int)65280, blue_mask=(int)16711680; video/x-raw-rgb, bpp=(int)16, depth=(int)15, endianness=(int)1234, red_mask=(int)31744, green_mask=(int)992, blue_mask=(int)31, width=(int)[ 1, 2147483647 ], height=(int)[ 1, 2147483647 ], framerate=(fraction)[ 0/1, 2147483647/1 ]; video/x-raw-rgb, bpp=(int)16, depth=(int)16, endianness=(int)1234, red_mask=(int)63488, green_mask=(int)2016, blue_mask=(int)31, width=(int)[ 1, 2147483647 ], height=(int)[ 1, 2147483647 ], framerate=(fraction)[ 0/1, 2147483647/1 ]</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>video/x-xvid, width=(int)[ 0, 2147483647 ], height=(int)[ 0, 2147483647 ], framerate=(fraction)[ 0/1, 2147483647/1 ]</caps>
  </padtemplate>
 </feature>
</plugin>
<plugin>
 <name>vmnc</name>
 <description>VMnc video plugin library</description>
 <filename>/usr/lib/gstreamer-0.10/libgstvmnc.so</filename>
 <size>23904</size>
 <m32p>1205244457</m32p>
 <version>0.10.6</version>
 <license>LGPL</license>
 <source>gst-plugins-bad</source>
 <package>GStreamer Bad Plugins (Ubuntu)</package>
 <origin>https://launchpad.net/distros/ubuntu/+source/gst-plugins-bad0.10</origin>
 <feature typename="GstElementFactory">
  <name>vmncdec</name>
  <rank>256</rank>
  <longname>VMnc video decoder</longname>
  <class>Codec/Decoder/Video</class>
  <description>Decode VMnc to raw (RGB) video</description>
  <author>Michael Smith &lt;msmith@xiph.org&gt;</author>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>video/x-raw-rgb</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>video/x-vmnc, version=(int)1, framerate=(fraction)[ 0/1, 2147483647/1 ], width=(int)[ 0, 2147483647 ], height=(int)[ 0, 2147483647 ]</caps>
  </padtemplate>
 </feature>
</plugin>
<plugin>
 <name>h264parse</name>
 <description>Element parsing raw h264 streams</description>
 <filename>/usr/lib/gstreamer-0.10/libgsth264parse.so</filename>
 <size>21568</size>
 <m32p>1205244456</m32p>
 <version>0.10.6</version>
 <license>LGPL</license>
 <source>gst-plugins-bad</source>
 <package>GStreamer Bad Plugins (Ubuntu)</package>
 <origin>https://launchpad.net/distros/ubuntu/+source/gst-plugins-bad0.10</origin>
 <feature typename="GstElementFactory">
  <name>h264parse</name>
  <longname>H264Parse</longname>
  <class>Codec/Parser</class>
  <description>Parses raw h264 stream</description>
  <author>Michal Benes &lt;michal.benes@itonis.tv&gt;,Wim Taymans &lt;wim.taymans@gmail.com</author>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>video/x-h264</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>video/x-h264</caps>
  </padtemplate>
 </feature>
</plugin>
<plugin>
 <name>jack</name>
 <description>Jack elements</description>
 <filename>/usr/lib/gstreamer-0.10/libgstjack.so</filename>
 <size>32416</size>
 <m32p>1205244456</m32p>
 <version>0.10.6</version>
 <license>LGPL</license>
 <source>gst-plugins-bad</source>
 <package>Gstreamer</package>
 <origin>http://gstreamer.freedesktop.org</origin>
 <feature typename="GstElementFactory">
  <name>jackaudiosink</name>
  <rank>256</rank>
  <longname>Audio Sink (Jack)</longname>
  <class>Sink/Audio</class>
  <description>Output to Jack</description>
  <author>Wim Taymans &lt;wim@fluendo.com&gt;</author>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>audio/x-raw-float, endianness=(int){ 1234 }, width=(int)32, rate=(int)[ 1, 2147483647 ], channels=(int)[ 1, 2147483647 ]</caps>
  </padtemplate>
 </feature>
</plugin>
<plugin>
 <name>faad</name>
 <description>Free AAC Decoder (FAAD)</description>
 <filename>/usr/lib/gstreamer-0.10/libgstfaad.so</filename>
 <size>32608</size>
 <m32p>1205244456</m32p>
 <version>0.10.6</version>
 <license>GPL</license>
 <source>gst-plugins-bad</source>
 <package>GStreamer Bad Plugins (Ubuntu)</package>
 <origin>https://launchpad.net/distros/ubuntu/+source/gst-plugins-bad0.10</origin>
 <feature typename="GstElementFactory">
  <name>faad</name>
  <rank>256</rank>
  <longname>AAC audio decoder</longname>
  <class>Codec/Decoder/Audio</class>
  <description>Free MPEG-2/4 AAC decoder</description>
  <author>Ronald Bultje &lt;rbultje@ronald.bitfreak.net&gt;</author>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>audio/x-raw-int, endianness=(int)1234, signed=(boolean)true, width=(int)16, depth=(int)16, rate=(int)[ 8000, 96000 ], channels=(int)[ 1, 8 ]</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>audio/mpeg, mpegversion=(int){ 2, 4 }</caps>
  </padtemplate>
 </feature>
</plugin>
<plugin>
 <name>rawparse</name>
 <description>Parses byte streams into raw frames</description>
 <filename>/usr/lib/gstreamer-0.10/libgstrawparse.so</filename>
 <size>41208</size>
 <m32p>1205244457</m32p>
 <version>0.10.6</version>
 <license>LGPL</license>
 <source>gst-plugins-bad</source>
 <package>GStreamer Bad Plugins (Ubuntu)</package>
 <origin>https://launchpad.net/distros/ubuntu/+source/gst-plugins-bad0.10</origin>
 <feature typename="GstElementFactory">
  <name>audioparse</name>
  <longname>Audio Parse</longname>
  <class>Filter/Audio</class>
  <description>Converts stream into audio frames</description>
  <author>Sebastian Dröge &lt;slomo@circular-chaos.org&gt;</author>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>ANY</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>audio/x-raw-int, depth=(int)[ 1, 32 ], width=(int){ 8, 16, 24, 32 }, endianness=(int){ 1234, 4321 }, signed=(boolean){ true, false }, rate=(int)[ 1, 2147483647 ], channels=(int)[ 1, 2147483647 ]; audio/x-raw-float, width=(int){ 32, 64 }, endianness=(int){ 1234, 4321 }, rate=(int)[ 1, 2147483647 ], channels=(int)[ 1, 2147483647 ]</caps>
  </padtemplate>
 </feature>
 <feature typename="GstElementFactory">
  <name>videoparse</name>
  <longname>Video Parse</longname>
  <class>Filter/Video</class>
  <description>Converts stream into video frames</description>
  <author>David Schleef &lt;ds@schleef.org&gt;, Sebastian Dröge &lt;slomo@circular-chaos.org&gt;</author>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>ANY</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>video/x-raw-yuv, format=(fourcc){ I420, YV12, YUY2, UYVY }, width=(int)[ 1, 2147483647 ], height=(int)[ 1, 2147483647 ], framerate=(fraction)[ 0/1, 2147483647/1 ]; video/x-raw-rgb; video/x-raw-gray</caps>
  </padtemplate>
 </feature>
</plugin>
<plugin>
 <name>freeze</name>
 <description>Stream freezer</description>
 <filename>/usr/lib/gstreamer-0.10/libgstfreeze.so</filename>
 <size>14176</size>
 <m32p>1205244456</m32p>
 <version>0.10.6</version>
 <license>LGPL</license>
 <source>gst-plugins-bad</source>
 <package>GStreamer Bad Plugins (Ubuntu)</package>
 <origin>https://launchpad.net/distros/ubuntu/+source/gst-plugins-bad0.10</origin>
 <feature typename="GstElementFactory">
  <name>freeze</name>
  <longname>Stream freezer</longname>
  <class>Generic</class>
  <description>Makes a stream from buffers of data</description>
  <author>Gergely Nagy &lt;gergely.nagy@neteyes.hu&gt;, Renato Filho &lt;renato.filho@indt.org.br&gt;</author>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>ANY</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>ANY</caps>
  </padtemplate>
 </feature>
</plugin>
<plugin>
 <name>dfbvideosink</name>
 <description>DirectFB video output plugin</description>
 <filename>/usr/lib/gstreamer-0.10/libgstdfbvideosink.so</filename>
 <size>49064</size>
 <m32p>1205244456</m32p>
 <version>0.10.6</version>
 <license>LGPL</license>
 <source>gst-plugins-bad</source>
 <package>GStreamer Bad Plugins (Ubuntu)</package>
 <origin>https://launchpad.net/distros/ubuntu/+source/gst-plugins-bad0.10</origin>
 <feature typename="GstElementFactory">
  <name>dfbvideosink</name>
  <rank>64</rank>
  <longname>DirectFB video sink</longname>
  <class>Sink/Video</class>
  <description>A DirectFB based videosink</description>
  <author>Julien Moutte &lt;julien@moutte.net&gt;</author>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>video/x-raw-rgb, framerate=(fraction)[ 0/1, 2147483647/1 ], width=(int)[ 1, 2147483647 ], height=(int)[ 1, 2147483647 ]; video/x-raw-yuv, framerate=(fraction)[ 0/1, 2147483647/1 ], width=(int)[ 1, 2147483647 ], height=(int)[ 1, 2147483647 ]</caps>
  </padtemplate>
  <interface>GstImplementsInterface</interface>
  <interface>GstNavigation</interface>
  <interface>GstColorBalance</interface>
 </feature>
</plugin>
<plugin>
 <name>filter</name>
 <description>IIR audio filter element</description>
 <filename>/usr/lib/gstreamer-0.10/libgstfilter.so</filename>
 <size>12576</size>
 <m32p>1205244456</m32p>
 <version>0.10.6</version>
 <license>LGPL</license>
 <source>gst-plugins-bad</source>
 <package>GStreamer Bad Plugins (Ubuntu)</package>
 <origin>https://launchpad.net/distros/ubuntu/+source/gst-plugins-bad0.10</origin>
 <feature typename="GstElementFactory">
  <name>iir</name>
  <longname>Infinite Impulse Response (IIR) filter</longname>
  <class>Filter/Effect/Audio</class>
  <description>IIR filter based on vorbis code</description>
  <author>Monty &lt;monty@xiph.org&gt;, Thomas &lt;thomas@apestaart.org&gt;, Dreamlab Technologies Ltd. &lt;mathis.hofer@dreamlab.net&gt;</author>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>audio/x-raw-float, rate=(int)[ 1, 2147483647 ], channels=(int)[ 1, 2147483647 ], endianness=(int)1234, width=(int)32</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>audio/x-raw-float, rate=(int)[ 1, 2147483647 ], channels=(int)[ 1, 2147483647 ], endianness=(int)1234, width=(int)32</caps>
  </padtemplate>
 </feature>
</plugin>
<plugin>
 <name>musepack</name>
 <description>Musepack decoder</description>
 <filename>/usr/lib/gstreamer-0.10/libgstmusepack.so</filename>
 <size>25920</size>
 <m32p>1205244457</m32p>
 <version>0.10.6</version>
 <license>LGPL</license>
 <source>gst-plugins-bad</source>
 <package>GStreamer Bad Plugins (Ubuntu)</package>
 <origin>https://launchpad.net/distros/ubuntu/+source/gst-plugins-bad0.10</origin>
 <feature typename="GstElementFactory">
  <name>musepackdec</name>
  <rank>256</rank>
  <longname>Musepack decoder</longname>
  <class>Codec/Decoder/Audio</class>
  <description>Musepack decoder</description>
  <author>Ronald Bultje &lt;rbultje@ronald.bitfreak.net&gt;</author>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>audio/x-raw-float, width=(int)32, endianness=(int)1234, rate=(int)[ 8000, 96000 ], channels=(int)[ 1, 2 ]</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>audio/x-musepack</caps>
  </padtemplate>
 </feature>
</plugin>
<plugin>
 <name>mpegtsparse</name>
 <description>MPEG-2 transport stream parser</description>
 <filename>/usr/lib/gstreamer-0.10/libgstmpegtsparse.so</filename>
 <size>53448</size>
 <m32p>1205244457</m32p>
 <version>0.10.6</version>
 <license>LGPL</license>
 <source>gst-plugins-bad</source>
 <package>GStreamer Bad Plugins (Ubuntu)</package>
 <origin>https://launchpad.net/distros/ubuntu/+source/gst-plugins-bad0.10</origin>
 <feature typename="GstElementFactory">
  <name>mpegtsparse</name>
  <longname>MPEG transport stream parser</longname>
  <class>Codec/Parser</class>
  <description>Parses MPEG2 transport streams</description>
  <author>Alessandro Decina &lt;alessandro@nnva.org&gt;</author>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>video/mpegts, systemstream=(boolean)true</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>src%d</nametemplate>
   <direction>src</direction>
   <presence>request</presence>
   <caps>video/mpegts, systemstream=(boolean)true</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>program_%d</nametemplate>
   <direction>src</direction>
   <presence>sometimes</presence>
   <caps>video/mpegts, systemstream=(boolean)true</caps>
  </padtemplate>
 </feature>
</plugin>
<plugin>
 <name>alsaspdif</name>
 <description>Alsa plugin for S/PDIF output</description>
 <filename>/usr/lib/gstreamer-0.10/libgstalsaspdif.so</filename>
 <size>24472</size>
 <m32p>1205244456</m32p>
 <version>0.10.6</version>
 <license>unknown</license>
 <source>gst-plugins-bad</source>
 <package>gst-plugins-bad</package>
 <origin>http://www.fluendo.com</origin>
 <feature typename="GstElementFactory">
  <name>alsaspdifsink</name>
  <longname>S/PDIF ALSA audiosink</longname>
  <class>Sink/Audio</class>
  <description>Feeds audio to S/PDIF interfaces through the ALSA sound driver</description>
  <author>Martin Soto &lt;martinsoto@users.sourceforge.net&gt;
Michael Smith &lt;msmith@fluendo.com&gt;</author>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>audio/x-iec958</caps>
  </padtemplate>
 </feature>
</plugin>
<plugin>
 <name>metadata</name>
 <description>Metadata (EXIF, IPTC and XMP) image (JPEG, TIFF) demuxer and muxer</description>
 <filename>/usr/lib/gstreamer-0.10/libgstmetadata.so</filename>
 <size>71280</size>
 <m32p>1205244456</m32p>
 <version>0.10.6</version>
 <license>LGPL</license>
 <source>gst-plugins-bad</source>
 <package>GStreamer Bad Plugins (Ubuntu)</package>
 <origin>https://launchpad.net/distros/ubuntu/+source/gst-plugins-bad0.10</origin>
 <feature typename="GstElementFactory">
  <name>metadatamux</name>
  <longname>Metadata muxer</longname>
  <class>Muxer/Extracter/Metadata</class>
  <description>Write metadata (EXIF, IPTC and XMP) into a image stream</description>
  <author>Edgard Lima &lt;edgard.lima@indt.org.br&gt;</author>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>image/jpeg; image/png</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>image/jpeg, tags-extracted=(boolean)true; image/png, tags-extracted=(boolean)true</caps>
  </padtemplate>
  <interface>GstTagSetter</interface>
 </feature>
 <feature typename="GstElementFactory">
  <name>metadatademux</name>
  <longname>Metadata demuxer</longname>
  <class>Demuxer/Extracter/Metadata</class>
  <description>Send metadata tags (EXIF, IPTC and XMP) and remove metadata chunks from stream</description>
  <author>Edgard Lima &lt;edgard.lima@indt.org.br&gt;</author>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>image/jpeg, tags-extracted=(boolean)true; image/png, tags-extracted=(boolean)true</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>image/jpeg, tags-extracted=(boolean)false; image/png, tags-extracted=(boolean)false</caps>
  </padtemplate>
 </feature>
</plugin>
<plugin>
 <name>musicbrainz</name>
 <description>A TRM signature producer based on libmusicbrainz</description>
 <filename>/usr/lib/gstreamer-0.10/libgsttrm.so</filename>
 <size>15800</size>
 <m32p>1205244457</m32p>
 <version>0.10.6</version>
 <license>LGPL</license>
 <source>gst-plugins-bad</source>
 <package>GStreamer Bad Plugins (Ubuntu)</package>
 <origin>https://launchpad.net/distros/ubuntu/+source/gst-plugins-bad0.10</origin>
 <feature typename="GstElementFactory">
  <name>trm</name>
  <longname>MusicBrainz TRM generator</longname>
  <class>Filter/Analyzer/Audio</class>
  <description>Compute MusicBrainz TRM Id using libmusicbrainz</description>
  <author>Jeremy Simon &lt;jsimon13@yahoo.fr&gt;</author>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>audio/x-raw-int, endianness=(int)1234, signed=(boolean)true, width=(int){ 8, 16 }, depth=(int){ 8, 16 }, rate=(int)[ 8000, 96000 ], channels=(int)[ 1, 2 ]</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>audio/x-raw-int, endianness=(int)1234, signed=(boolean)true, width=(int){ 8, 16 }, depth=(int){ 8, 16 }, rate=(int)[ 8000, 96000 ], channels=(int)[ 1, 2 ]</caps>
  </padtemplate>
 </feature>
</plugin>
<plugin>
 <name>soundtouch</name>
 <description>Audio Pitch Controller &amp; BPM Detection</description>
 <filename>/usr/lib/gstreamer-0.10/libgstsoundtouch.so</filename>
 <size>32688</size>
 <m32p>1205244457</m32p>
 <version>0.10.6</version>
 <license>LGPL</license>
 <source>gst-plugins-bad</source>
 <package>GStreamer Bad Plugins (Ubuntu)</package>
 <origin>https://launchpad.net/distros/ubuntu/+source/gst-plugins-bad0.10</origin>
 <feature typename="GstElementFactory">
  <name>bpmdetect</name>
  <longname>BPM Detector</longname>
  <class>Filter/Analyzer/Audio</class>
  <description>Detect the BPM of an audio stream</description>
  <author>Sebastian Dröge &lt;slomo@circular-chaos.org&gt;</author>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>audio/x-raw-float, width=(int)32, endianness=(int)1234, rate=(int)[ 8000, 2147483647 ], channels=(int)[ 1, 2 ]</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>audio/x-raw-float, width=(int)32, endianness=(int)1234, rate=(int)[ 8000, 2147483647 ], channels=(int)[ 1, 2 ]</caps>
  </padtemplate>
 </feature>
 <feature typename="GstElementFactory">
  <name>pitch</name>
  <longname>Pitch controller</longname>
  <class>Filter/Converter/Audio</class>
  <description>Control the pitch of an audio stream</description>
  <author>Wouter Paesen &lt;wouter@blue-gate.be&gt;</author>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>audio/x-raw-float, rate=(int)[ 8000, 2147483647 ], channels=(int)[ 1, 2 ], endianness=(int)1234, width=(int)32</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>audio/x-raw-float, rate=(int)[ 8000, 2147483647 ], channels=(int)[ 1, 2 ], endianness=(int)1234, width=(int)32</caps>
  </padtemplate>
 </feature>
</plugin>
<plugin>
 <name>mpeg4videoparse</name>
 <description>MPEG-4 video parser</description>
 <filename>/usr/lib/gstreamer-0.10/libgstmpeg4videoparse.so</filename>
 <size>13296</size>
 <m32p>1205244456</m32p>
 <version>0.10.6</version>
 <license>LGPL</license>
 <source>gst-plugins-bad</source>
 <package>GStreamer Bad Plugins (Ubuntu)</package>
 <origin>https://launchpad.net/distros/ubuntu/+source/gst-plugins-bad0.10</origin>
 <feature typename="GstElementFactory">
  <name>mpeg4videoparse</name>
  <rank>128</rank>
  <longname>MPEG 4 video elementary stream parser</longname>
  <class>Codec/Parser/Video</class>
  <description>Parses MPEG-4 Part 2 elementary video streams</description>
  <author>Julien Moutte &lt;julien@fluendo.com&gt;</author>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>video/mpeg, mpegversion=(int)4, parsed=(boolean)true, systemstream=(boolean)false</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>video/mpeg, mpegversion=(int)4, parsed=(boolean)false, systemstream=(boolean)false</caps>
  </padtemplate>
 </feature>
</plugin>
<plugin>
 <name>mve</name>
 <description>Interplay MVE movie format manipulation</description>
 <filename>/usr/lib/gstreamer-0.10/libgstmve.so</filename>
 <size>103840</size>
 <m32p>1205244457</m32p>
 <version>0.10.6</version>
 <license>LGPL</license>
 <source>gst-plugins-bad</source>
 <package>GStreamer Bad Plugins (Ubuntu)</package>
 <origin>https://launchpad.net/distros/ubuntu/+source/gst-plugins-bad0.10</origin>
 <feature typename="GstElementFactory">
  <name>mvemux</name>
  <longname>MVE Multiplexer</longname>
  <class>Codec/Muxer</class>
  <description>Muxes audio and video into an MVE stream</description>
  <author>Jens Granseuer &lt;jensgr@gmx.net&gt;</author>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>video/x-mve</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>audio</nametemplate>
   <direction>sink</direction>
   <presence>request</presence>
   <caps>audio/x-raw-int, width=(int)8, rate=(int)[ 1, 2147483647 ], channels=(int)[ 1, 2 ], depth=(int)8, signed=(boolean)false; audio/x-raw-int, width=(int)16, rate=(int)[ 1, 2147483647 ], channels=(int)[ 1, 2 ], depth=(int)16, signed=(boolean)true, endianness=(int)1234</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>video</nametemplate>
   <direction>sink</direction>
   <presence>request</presence>
   <caps>video/x-raw-rgb, width=(int)[ 24, 1600 ], height=(int)[ 24, 1200 ], framerate=(fraction)[ 1/1, 2147483647/1 ], bpp=(int)16, depth=(int)15, endianness=(int)1234, red_mask=(int)31744, green_mask=(int)992, blue_mask=(int)31; video/x-raw-rgb, bpp=(int)8, depth=(int)8, width=(int)[ 24, 1600 ], height=(int)[ 24, 1200 ], framerate=(fraction)[ 1/1, 2147483647/1 ], endianness=(int)1234</caps>
  </padtemplate>
 </feature>
 <feature typename="GstElementFactory">
  <name>mvedemux</name>
  <rank>256</rank>
  <longname>MVE Demuxer</longname>
  <class>Codec/Demuxer</class>
  <description>Demultiplex an Interplay movie (MVE) stream into audio and video</description>
  <author>Jens Granseuer &lt;jensgr@gmx.net&gt;</author>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>video/x-mve</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>video</nametemplate>
   <direction>src</direction>
   <presence>sometimes</presence>
   <caps>video/x-raw-rgb, width=(int)[ 1, 2147483647 ], height=(int)[ 1, 2147483647 ], framerate=(fraction)[ 0/1, 2147483647/1 ], bpp=(int)16, depth=(int)15, endianness=(int)1234, red_mask=(int)31744, green_mask=(int)992, blue_mask=(int)31; video/x-raw-rgb, width=(int)[ 1, 2147483647 ], height=(int)[ 1, 2147483647 ], framerate=(fraction)[ 0/1, 2147483647/1 ], bpp=(int)8, depth=(int)8, endianness=(int)1234</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>audio</nametemplate>
   <direction>src</direction>
   <presence>sometimes</presence>
   <caps>audio/x-raw-int, width=(int)8, rate=(int)[ 1, 2147483647 ], channels=(int)[ 1, 2 ], depth=(int)8, signed=(boolean)false; audio/x-raw-int, width=(int)16, rate=(int)[ 1, 2147483647 ], channels=(int)[ 1, 2 ], depth=(int)16, signed=(boolean)true, endianness=(int){ 1234, 4321 }</caps>
  </padtemplate>
 </feature>
</plugin>
<plugin>
 <name>gstinterlace</name>
 <description>Deinterlace video</description>
 <filename>/usr/lib/gstreamer-0.10/libgstdeinterlace.so</filename>
 <size>15688</size>
 <m32p>1205244456</m32p>
 <version>0.10.6</version>
 <license>LGPL</license>
 <source>gst-plugins-bad</source>
 <package>GStreamer Bad Plugins (Ubuntu)</package>
 <origin>https://launchpad.net/distros/ubuntu/+source/gst-plugins-bad0.10</origin>
 <feature typename="GstElementFactory">
  <name>deinterlace</name>
  <longname>Deinterlace</longname>
  <class>Filter/Effect/Video</class>
  <description>Deinterlace video</description>
  <author>Wim Taymans &lt;wim@fluendo.com&gt;</author>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>video/x-raw-yuv, format=(fourcc){ I420, Y42B }, width=(int)[ 1, 2147483647 ], height=(int)[ 1, 2147483647 ], framerate=(fraction)[ 0/1, 2147483647/1 ]</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>video/x-raw-yuv, format=(fourcc){ I420, Y42B }, width=(int)[ 1, 2147483647 ], height=(int)[ 1, 2147483647 ], framerate=(fraction)[ 0/1, 2147483647/1 ]</caps>
  </padtemplate>
 </feature>
</plugin>
<plugin>
 <name>flumpegdemux</name>
 <description>MPEG demuxers</description>
 <filename>/usr/lib/gstreamer-0.10/libgstflumpegdemux.so</filename>
 <size>95352</size>
 <m32p>1203024240</m32p>
 <version>0.10.15</version>
 <license>unknown</license>
 <source>gst-fluendo-mpegdemux</source>
 <package>flumpegdemux</package>
 <origin>http://www.fluendo.com/</origin>
 <feature typename="GstElementFactory">
  <name>flutsdemux</name>
  <rank>256</rank>
  <longname>MPEG Transport stream demuxer</longname>
  <class>Codec/Demuxer</class>
  <description>Demultiplexes MPEG2 Transport Streams</description>
  <author>Wim Taymans &lt;wim@fluendo.com&gt;</author>
  <padtemplate>
   <nametemplate>video_%04x</nametemplate>
   <direction>src</direction>
   <presence>sometimes</presence>
   <caps>video/mpeg, mpegversion=(int){ 1, 2, 4 }, systemstream=(boolean)false; video/x-h264; video/x-dirac</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>audio_%04x</nametemplate>
   <direction>src</direction>
   <presence>sometimes</presence>
   <caps>audio/mpeg, mpegversion=(int){ 1, 4 }; audio/x-lpcm, width=(int){ 16, 20, 24 }, rate=(int){ 48000, 96000 }, channels=(int)[ 1, 8 ], dynamic_range=(int)[ 0, 255 ], emphasis=(boolean){ false, true }, mute=(boolean){ false, true }; audio/x-ac3; audio/x-dts</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>private_%04x</nametemplate>
   <direction>src</direction>
   <presence>sometimes</presence>
   <caps>ANY</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>video/mpegts</caps>
  </padtemplate>
 </feature>
 <feature typename="GstElementFactory">
  <name>flupsdemux</name>
  <rank>256</rank>
  <longname>MPEG Program Demuxer</longname>
  <class>Codec/Demuxer</class>
  <description>Demultiplexes MPEG Program Streams</description>
  <author>Wim Taymans &lt;wim@fluendo.com&gt;</author>
  <padtemplate>
   <nametemplate>video_%02x</nametemplate>
   <direction>src</direction>
   <presence>sometimes</presence>
   <caps>video/mpeg, mpegversion=(int){ 1, 2, 4 }, systemstream=(boolean)false; video/x-h264</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>audio_%02x</nametemplate>
   <direction>src</direction>
   <presence>sometimes</presence>
   <caps>audio/mpeg, mpegversion=(int)1; audio/x-private1-lpcm; audio/x-private1-ac3; audio/x-private1-dts; audio/ac3</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>private_%d</nametemplate>
   <direction>src</direction>
   <presence>sometimes</presence>
   <caps>ANY</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>video/mpeg, mpegversion=(int){ 1, 2 }, systemstream=(boolean)true</caps>
  </padtemplate>
 </feature>
</plugin>
<plugin>
 <name>videosignal</name>
 <description>Various video signal analysers</description>
 <filename>/usr/lib/gstreamer-0.10/libgstvideosignal.so</filename>
 <size>21096</size>
 <m32p>1205244457</m32p>
 <version>0.10.6</version>
 <license>LGPL</license>
 <source>gst-plugins-bad</source>
 <package>GStreamer Bad Plugins (Ubuntu)</package>
 <origin>https://launchpad.net/distros/ubuntu/+source/gst-plugins-bad0.10</origin>
 <feature typename="GstElementFactory">
  <name>videomark</name>
  <longname>Video marker</longname>
  <class>Filter/Effect/Video</class>
  <description>Marks a video signal with a pattern</description>
  <author>Wim Taymans &lt;wim@fluendo.com&gt;</author>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>video/x-raw-yuv, format=(fourcc){ I420, YV12 }, width=(int)[ 1, 2147483647 ], height=(int)[ 1, 2147483647 ], framerate=(fraction)[ 0/1, 2147483647/1 ]</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>video/x-raw-yuv, format=(fourcc){ I420, YV12 }, width=(int)[ 1, 2147483647 ], height=(int)[ 1, 2147483647 ], framerate=(fraction)[ 0/1, 2147483647/1 ]</caps>
  </padtemplate>
 </feature>
 <feature typename="GstElementFactory">
  <name>videodetect</name>
  <longname>Video detecter</longname>
  <class>Filter/Effect/Video</class>
  <description>Detect patterns in a video signal</description>
  <author>Wim Taymans &lt;wim@fluendo.com&gt;</author>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>video/x-raw-yuv, format=(fourcc){ I420, YV12 }, width=(int)[ 1, 2147483647 ], height=(int)[ 1, 2147483647 ], framerate=(fraction)[ 0/1, 2147483647/1 ]</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>video/x-raw-yuv, format=(fourcc){ I420, YV12 }, width=(int)[ 1, 2147483647 ], height=(int)[ 1, 2147483647 ], framerate=(fraction)[ 0/1, 2147483647/1 ]</caps>
  </padtemplate>
 </feature>
 <feature typename="GstElementFactory">
  <name>videoanalyse</name>
  <longname>Video analyser</longname>
  <class>Filter/Effect/Video</class>
  <description>Analyse video signal</description>
  <author>Wim Taymans &lt;wim@fluendo.com&gt;</author>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>video/x-raw-yuv, format=(fourcc){ I420, YV12 }, width=(int)[ 1, 2147483647 ], height=(int)[ 1, 2147483647 ], framerate=(fraction)[ 0/1, 2147483647/1 ]</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>video/x-raw-yuv, format=(fourcc){ I420, YV12 }, width=(int)[ 1, 2147483647 ], height=(int)[ 1, 2147483647 ], framerate=(fraction)[ 0/1, 2147483647/1 ]</caps>
  </padtemplate>
 </feature>
</plugin>
<plugin>
 <name>mms</name>
 <description>Microsoft Multi Media Server streaming protocol support</description>
 <filename>/usr/lib/gstreamer-0.10/libgstmms.so</filename>
 <size>16480</size>
 <m32p>1205244456</m32p>
 <version>0.10.6</version>
 <license>LGPL</license>
 <source>gst-plugins-bad</source>
 <package>GStreamer</package>
 <origin>http://gstreamer.net/</origin>
 <feature typename="GstElementFactory">
  <name>mmssrc</name>
  <longname>MMS streaming source</longname>
  <class>Source/Network</class>
  <description>Receive data streamed via MSFT Multi Media Server protocol</description>
  <author>Maciej Katafiasz &lt;mathrick@users.sourceforge.net&gt;</author>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>video/x-ms-asf</caps>
  </padtemplate>
  <interface>GstURIHandler</interface>
  <uri_type>source</uri_type>
  <uri_protocol>mms</uri_protocol>
  <uri_protocol>mmsh</uri_protocol>
  <uri_protocol>mmst</uri_protocol>
  <uri_protocol>mmsu</uri_protocol>
 </feature>
</plugin>
<plugin>
 <name>flvdemux</name>
 <description>Element demuxing FLV stream</description>
 <filename>/usr/lib/gstreamer-0.10/libgstflvdemux.so</filename>
 <size>49832</size>
 <m32p>1205244456</m32p>
 <version>0.10.6</version>
 <license>LGPL</license>
 <source>gst-plugins-bad</source>
 <package>GStreamer Bad Plugins (Ubuntu)</package>
 <origin>https://launchpad.net/distros/ubuntu/+source/gst-plugins-bad0.10</origin>
 <feature typename="GstElementFactory">
  <name>flvdemux</name>
  <rank>256</rank>
  <longname>FLV Demuxer</longname>
  <class>Codec/Demuxer</class>
  <description>Demux FLV feeds into digital streams</description>
  <author>Julien Moutte &lt;julien@moutte.net&gt;</author>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>video/x-flv</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>audio</nametemplate>
   <direction>src</direction>
   <presence>sometimes</presence>
   <caps>ANY</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>video</nametemplate>
   <direction>src</direction>
   <presence>sometimes</presence>
   <caps>ANY</caps>
  </padtemplate>
 </feature>
</plugin>
<plugin>
 <name>nuvdemux</name>
 <description>Demuxes and muxes audio and video</description>
 <filename>/usr/lib/gstreamer-0.10/libgstnuvdemux.so</filename>
 <size>20928</size>
 <m32p>1205244457</m32p>
 <version>0.10.6</version>
 <license>LGPL</license>
 <source>gst-plugins-bad</source>
 <package>NuvDemux</package>
 <origin></origin>
 <feature typename="GstElementFactory">
  <name>nuvdemux</name>
  <rank>128</rank>
  <longname>Nuv demuxer</longname>
  <class>Codec/Demuxer</class>
  <description>Demultiplex a mythtv .nuv file into audio and video</description>
  <author>Renato Araujo Oliveira Filho &lt;renato.filho@indt.org.br&gt;,Rosfran Borges &lt;rosfran.borges@indt.org.br&gt;</author>
  <padtemplate>
   <nametemplate>audio_src</nametemplate>
   <direction>src</direction>
   <presence>sometimes</presence>
   <caps>ANY</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>video_src</nametemplate>
   <direction>src</direction>
   <presence>sometimes</presence>
   <caps>ANY</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>video/x-nuv</caps>
  </padtemplate>
 </feature>
</plugin>
<plugin>
 <name>stereo</name>
 <description>Muck with the stereo signal, enhance it&apos;s &apos;stereo-ness&apos;</description>
 <filename>/usr/lib/gstreamer-0.10/libgststereo.so</filename>
 <size>9944</size>
 <m32p>1205244457</m32p>
 <version>0.10.6</version>
 <license>LGPL</license>
 <source>gst-plugins-bad</source>
 <package>GStreamer Bad Plugins (Ubuntu)</package>
 <origin>https://launchpad.net/distros/ubuntu/+source/gst-plugins-bad0.10</origin>
 <feature typename="GstElementFactory">
  <name>stereo</name>
  <longname>Stereo effect</longname>
  <class>Filter/Effect/Audio</class>
  <description>Muck with the stereo signal to enhance its &apos;stereo-ness&apos;</description>
  <author>Erik Walthinsen &lt;omega@cse.ogi.edu&gt;</author>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>audio/x-raw-int, depth=(int)16, width=(int)16, endianness=(int)1234, rate=(int)[ 1, 2147483647 ], channels=(int)2, signed=(boolean)true</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>audio/x-raw-int, depth=(int)16, width=(int)16, endianness=(int)1234, rate=(int)[ 1, 2147483647 ], channels=(int)2, signed=(boolean)true</caps>
  </padtemplate>
 </feature>
</plugin>
<plugin>
 <name>mpegvideoparse</name>
 <description>MPEG-1 and MPEG-2 video parser</description>
 <filename>/usr/lib/gstreamer-0.10/libgstmpegvideoparse.so</filename>
 <size>24088</size>
 <m32p>1205244457</m32p>
 <version>0.10.6</version>
 <license>LGPL</license>
 <source>gst-plugins-bad</source>
 <package>GStreamer Bad Plugins (Ubuntu)</package>
 <origin>https://launchpad.net/distros/ubuntu/+source/gst-plugins-bad0.10</origin>
 <feature typename="GstElementFactory">
  <name>mpegvideoparse</name>
  <rank>127</rank>
  <longname>MPEG video elementary stream parser</longname>
  <class>Codec/Parser/Video</class>
  <description>Parses and frames MPEG-1 and MPEG-2 elementary video streams</description>
  <author>Wim Taymans &lt;wim.taymans@chello.be&gt;
Jan Schmidt &lt;thaytan@mad.scientist.com&gt;</author>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>video/mpeg, mpegversion=(int)[ 1, 2 ], parsed=(boolean)true, systemstream=(boolean)false, width=(int)[ 16, 4096 ], height=(int)[ 16, 4096 ], pixel-aspect-ratio=(fraction)[ 0/1, 2147483647/1 ], framerate=(fraction)[ 0/1, 2147483647/1 ]</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>video/mpeg, mpegversion=(int)[ 1, 2 ], parsed=(boolean)false, systemstream=(boolean)false</caps>
  </padtemplate>
 </feature>
</plugin>
<plugin>
 <name>interleave</name>
 <description>Audio interleaver/deinterleaver</description>
 <filename>/usr/lib/gstreamer-0.10/libgstinterleave.so</filename>
 <size>24320</size>
 <m32p>1205244456</m32p>
 <version>0.10.6</version>
 <license>LGPL</license>
 <source>gst-plugins-bad</source>
 <package>GStreamer Bad Plugins (Ubuntu)</package>
 <origin>https://launchpad.net/distros/ubuntu/+source/gst-plugins-bad0.10</origin>
 <feature typename="GstElementFactory">
  <name>deinterleave</name>
  <longname>Audio deinterleaver</longname>
  <class>Filter/Converter/Audio</class>
  <description>Splits one interleaved multichannel audio stream into many mono audio streams</description>
  <author>Andy Wingo &lt;wingo at pobox.com&gt;, Iain &lt;iain@prettypeople.org&gt;</author>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>audio/x-raw-float, rate=(int)[ 1, 2147483647 ], channels=(int)[ 1, 2147483647 ], endianness=(int)1234, width=(int)32</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>src%d</nametemplate>
   <direction>src</direction>
   <presence>sometimes</presence>
   <caps>audio/x-raw-float, rate=(int)[ 1, 2147483647 ], channels=(int)1, endianness=(int)1234, width=(int)32</caps>
  </padtemplate>
 </feature>
 <feature typename="GstElementFactory">
  <name>interleave</name>
  <longname>Audio interleaver</longname>
  <class>Filter/Converter/Audio</class>
  <description>Folds many mono channels into one interleaved audio stream</description>
  <author>Andy Wingo &lt;wingo at pobox.com&gt;</author>
  <padtemplate>
   <nametemplate>sink%d</nametemplate>
   <direction>sink</direction>
   <presence>request</presence>
   <caps>audio/x-raw-float, rate=(int)[ 1, 2147483647 ], channels=(int)1, endianness=(int)1234, width=(int)32</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>audio/x-raw-float, rate=(int)[ 1, 2147483647 ], channels=(int)[ 1, 2147483647 ], endianness=(int)1234, width=(int)32</caps>
  </padtemplate>
 </feature>
</plugin>
<plugin>
 <name>lame</name>
 <description>Encode MP3s with LAME</description>
 <filename>/usr/lib/gstreamer-0.10/libgstlame.so</filename>
 <size>46032</size>
 <m32p>1203939456</m32p>
 <version>0.10.7</version>
 <license>LGPL</license>
 <source>gst-plugins-ugly</source>
 <package>GStreamer Ugly Multiverse Plugins (Ubuntu)</package>
 <origin>https://launchpad.net/distros/ubuntu/+source/gst-plugins-ugly-multiverse0.10</origin>
 <feature typename="GstElementFactory">
  <name>lame</name>
  <longname>L.A.M.E. mp3 encoder</longname>
  <class>Codec/Encoder/Audio</class>
  <description>High-quality free MP3 encoder</description>
  <author>Erik Walthinsen &lt;omega@cse.ogi.edu&gt;, Wim Taymans &lt;wim@fluendo.com&gt;</author>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>audio/mpeg, mpegversion=(int)1, layer=(int)3, rate=(int){ 8000, 11025, 12000, 16000, 22050, 24000, 32000, 44100, 48000 }, channels=(int)[ 1, 2 ]</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>audio/x-raw-int, endianness=(int)1234, signed=(boolean)true, width=(int)16, depth=(int)16, rate=(int){ 8000, 11025, 12000, 16000, 22050, 24000, 32000, 44100, 48000 }, channels=(int)[ 1, 2 ]</caps>
  </padtemplate>
  <interface>GstTagSetter</interface>
 </feature>
</plugin>
<plugin>
 <name>mpeg2enc</name>
 <description>High-quality MPEG-1/2 video encoder</description>
 <filename>/usr/lib/gstreamer-0.10/libgstmpeg2enc.so</filename>
 <size>50688</size>
 <m32p>1203939860</m32p>
 <version>0.10.6</version>
 <license>GPL</license>
 <source>gst-plugins-bad</source>
 <package>GStreamer Bad Multiverse Plugins (Ubuntu)</package>
 <origin>https://launchpad.net/distros/ubuntu/+source/gst-plugins-bad-multiverse0.10</origin>
 <feature typename="GstElementFactory">
  <name>mpeg2enc</name>
  <longname>mpeg2enc video encoder</longname>
  <class>Codec/Encoder/Video</class>
  <description>High-quality MPEG-1/2 video encoder</description>
  <author>Andrew Stevens &lt;andrew.stevens@nexgo.de&gt;
Ronald Bultje &lt;rbultje@ronald.bitfreak.net&gt;</author>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>video/mpeg, systemstream=(boolean)false, mpegversion=(int){ 1, 2 }, width=(int)[ 16, 4096 ], height=(int)[ 16, 4096 ], framerate=(fraction){ 24000/1001, 24/1, 25/1, 30000/1001, 30/1, 50/1, 60000/1001 }</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>video/x-raw-yuv, format=(fourcc){ I420 }, width=(int)[ 16, 4096 ], height=(int)[ 16, 4096 ], framerate=(fraction){ 24000/1001, 24/1, 25/1, 30000/1001, 30/1, 50/1, 60000/1001 }</caps>
  </padtemplate>
 </feature>
</plugin>
<plugin>
 <name>modplug</name>
 <description>.MOD audio decoding</description>
 <filename>/usr/lib/gstreamer-0.10/libgstmodplug.so</filename>
 <size>233560</size>
 <m32p>1205244456</m32p>
 <version>0.10.6</version>
 <license>LGPL</license>
 <source>gst-plugins-bad</source>
 <package>GStreamer Bad Plugins (Ubuntu)</package>
 <origin>https://launchpad.net/distros/ubuntu/+source/gst-plugins-bad0.10</origin>
 <feature typename="GstElementFactory">
  <name>modplug</name>
  <rank>256</rank>
  <longname>ModPlug</longname>
  <class>Codec/Decoder/Audio</class>
  <description>Module decoder based on modplug engine</description>
  <author>Jeremy SIMON &lt;jsimon13@yahoo.fr&gt;</author>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>audio/x-mod; audio/x-xm; audio/x-it; audio/x-s3m; audio/x-stm</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>audio/x-raw-int, endianness=(int)1234, signed=(boolean)true, width=(int)16, depth=(int)16, rate=(int){ 8000, 11025, 22050, 44100 }, channels=(int)2; audio/x-raw-int, endianness=(int)1234, signed=(boolean)false, width=(int)8, depth=(int)8, rate=(int){ 8000, 11025, 22050, 44100 }, channels=(int)[ 1, 2 ]</caps>
  </padtemplate>
 </feature>
</plugin>
<plugin>
 <name>festival</name>
 <description>Synthesizes plain text into audio</description>
 <filename>/usr/lib/gstreamer-0.10/libgstfestival.so</filename>
 <size>15776</size>
 <m32p>1205244456</m32p>
 <version>0.10.6</version>
 <license>LGPL</license>
 <source>gst-plugins-bad</source>
 <package>GStreamer Bad Plugins (Ubuntu)</package>
 <origin>https://launchpad.net/distros/ubuntu/+source/gst-plugins-bad0.10</origin>
 <feature typename="GstElementFactory">
  <name>festival</name>
  <longname>Festival Text-to-Speech synthesizer</longname>
  <class>Filter/Effect/Audio</class>
  <description>Synthesizes plain text into audio</description>
  <author>Wim Taymans &lt;wim.taymans@chello.be&gt;</author>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>text/plain</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>audio/x-wav</caps>
  </padtemplate>
 </feature>
</plugin>
<plugin>
 <name>bayer</name>
 <description>Elements to convert Bayer images</description>
 <filename>/usr/lib/gstreamer-0.10/libgstbayer.so</filename>
 <size>11704</size>
 <m32p>1205244456</m32p>
 <version>0.10.6</version>
 <license>LGPL</license>
 <source>gst-plugins-bad</source>
 <package>GStreamer Bad Plugins (Ubuntu)</package>
 <origin>https://launchpad.net/distros/ubuntu/+source/gst-plugins-bad0.10</origin>
 <feature typename="GstElementFactory">
  <name>bayer2rgb</name>
  <longname>RAW Camera sensor decoder</longname>
  <class>Filter/Effect</class>
  <description>FIXME example filter</description>
  <author>FIXME &lt;fixme@fixme.com&gt;</author>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>video/x-raw-rgb, bpp=(int)32, depth=(int)32, endianness=(int)4321, red_mask=(int)16711680, green_mask=(int)65280, blue_mask=(int)255, alpha_mask=(int)-16777216, width=(int)[ 1, 2147483647 ], height=(int)[ 1, 2147483647 ], framerate=(fraction)[ 0/1, 2147483647/1 ]</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>video/x-raw-bayer, width=(int)[ 1, 2147483647 ], height=(int)[ 1, 2147483647 ]</caps>
  </padtemplate>
 </feature>
</plugin>
<plugin>
 <name>rfbsrc</name>
 <description>Connects to a VNC server and decodes RFB stream</description>
 <filename>/usr/lib/gstreamer-0.10/libgstrfbsrc.so</filename>
 <size>40424</size>
 <m32p>1205244457</m32p>
 <version>0.10.6</version>
 <license>LGPL</license>
 <source>gst-plugins-bad</source>
 <package>GStreamer Bad Plugins (Ubuntu)</package>
 <origin>https://launchpad.net/distros/ubuntu/+source/gst-plugins-bad0.10</origin>
 <feature typename="GstElementFactory">
  <name>rfbsrc</name>
  <longname>Rfb source</longname>
  <class>Source/Video</class>
  <description>Creates a rfb video stream</description>
  <author>David A. Schleef &lt;ds@schleef.org&gt;, Andre Moreira Magalhaes &lt;andre.magalhaes@indt.org.br&gt;, Thijs Vermeir &lt;thijsvermeir@gmail.com&gt;</author>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>video/x-raw-rgb, bpp=(int)[ 1, 255 ], depth=(int)[ 1, 255 ], endianness=(int)[ 1234, 4321 ], red_mask=(int)65280, green_mask=(int)16711680, blue_mask=(int)-16777216, width=(int)[ 16, 4096 ], height=(int)[ 16, 4096 ], framerate=(fraction)0/1</caps>
  </padtemplate>
 </feature>
</plugin>
<plugin>
 <name>gnonlin</name>
 <description>Standard elements for non-linear multimedia editing</description>
 <filename>/usr/lib/gstreamer-0.10/libgnl.so</filename>
 <size>123784</size>
 <m32p>1186756470</m32p>
 <version>0.10.9</version>
 <license>LGPL</license>
 <source>gnonlin</source>
 <package>GNonLin source release</package>
 <origin>Unknown package origin</origin>
 <feature typename="GstElementFactory">
  <name>gnlfilesource</name>
  <longname>GNonLin File Source</longname>
  <class>Filter/Editor</class>
  <description>High-level File Source element</description>
  <author>Edward Hervey &lt;edward@fluendo.com&gt;</author>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>sometimes</presence>
   <caps>ANY</caps>
  </padtemplate>
  <interface>GstChildProxy</interface>
 </feature>
 <feature typename="GstElementFactory">
  <name>gnloperation</name>
  <longname>GNonLin Operation</longname>
  <class>Filter/Editor</class>
  <description>Encapsulates filters/effects for use with GNL Objects</description>
  <author>Wim Taymans &lt;wim.taymans@chello.be&gt;, Edward Hervey &lt;bilboed@bilboed.com&gt;</author>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>sometimes</presence>
   <caps>ANY</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>sink%d</nametemplate>
   <direction>sink</direction>
   <presence>request</presence>
   <caps>ANY</caps>
  </padtemplate>
  <interface>GstChildProxy</interface>
 </feature>
 <feature typename="GstElementFactory">
  <name>gnlcomposition</name>
  <longname>GNonLin Composition</longname>
  <class>Filter/Editor</class>
  <description>Combines GNL objects</description>
  <author>Wim Taymans &lt;wim.taymans@chello.be&gt;, Edward Hervey &lt;bilboed@bilboed.com&gt;</author>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>sometimes</presence>
   <caps>ANY</caps>
  </padtemplate>
  <interface>GstChildProxy</interface>
 </feature>
 <feature typename="GstElementFactory">
  <name>gnlsource</name>
  <longname>GNonLin Source</longname>
  <class>Filter/Editor</class>
  <description>Manages source elements</description>
  <author>Wim Taymans &lt;wim.taymans@chello.be&gt;, Edward Hervey &lt;edward@fluendo.com&gt;</author>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>sometimes</presence>
   <caps>ANY</caps>
  </padtemplate>
  <interface>GstChildProxy</interface>
 </feature>
</plugin>
<plugin>
 <name>mythtv</name>
 <description>lib MythTV src</description>
 <filename>/usr/lib/gstreamer-0.10/libgstmythtvsrc.so</filename>
 <size>28320</size>
 <m32p>1205244456</m32p>
 <version>0.10.6</version>
 <license>LGPL</license>
 <source>gst-plugins-bad</source>
 <package>GStreamer Bad Plugins (Ubuntu)</package>
 <origin>https://launchpad.net/distros/ubuntu/+source/gst-plugins-bad0.10</origin>
 <feature typename="GstElementFactory">
  <name>mythtvsrc</name>
  <longname>MythTV client source</longname>
  <class>Source/Network</class>
  <description>Control and receive data as a client over the network via raw socket connections using the MythTV protocol</description>
  <author>Rosfran Borges &lt;rosfran.borges@indt.org.br&gt;,Renato Filho &lt;renato.filho@indt.org.br&gt;</author>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>ANY</caps>
  </padtemplate>
  <interface>GstURIHandler</interface>
  <uri_type>source</uri_type>
  <uri_protocol>myth</uri_protocol>
  <uri_protocol>myths</uri_protocol>
 </feature>
</plugin>
<plugin>
 <name>speexresample</name>
 <description>Resamples audio</description>
 <filename>/usr/lib/gstreamer-0.10/libgstspeexresample.so</filename>
 <size>47928</size>
 <m32p>1205244457</m32p>
 <version>0.10.6</version>
 <license>LGPL</license>
 <source>gst-plugins-bad</source>
 <package>GStreamer Bad Plugins (Ubuntu)</package>
 <origin>https://launchpad.net/distros/ubuntu/+source/gst-plugins-bad0.10</origin>
 <feature typename="GstElementFactory">
  <name>speexresample</name>
  <longname>Audio resampler</longname>
  <class>Filter/Converter/Audio</class>
  <description>Resamples audio</description>
  <author>Sebastian Dröge &lt;slomo@circular-chaos.org&gt;</author>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>audio/x-raw-float, rate=(int)[ 1, 2147483647 ], channels=(int)[ 1, 2147483647 ], endianness=(int)1234, width=(int)32; audio/x-raw-int, rate=(int)[ 1, 2147483647 ], channels=(int)[ 1, 2147483647 ], endianness=(int)1234, width=(int)16, depth=(int)16, signed=(boolean)true</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>audio/x-raw-float, rate=(int)[ 1, 2147483647 ], channels=(int)[ 1, 2147483647 ], endianness=(int)1234, width=(int)32; audio/x-raw-int, rate=(int)[ 1, 2147483647 ], channels=(int)[ 1, 2147483647 ], endianness=(int)1234, width=(int)16, depth=(int)16, signed=(boolean)true</caps>
  </padtemplate>
 </feature>
</plugin>
<plugin>
 <name>gsm</name>
 <description>GSM encoder/decoder</description>
 <filename>/usr/lib/gstreamer-0.10/libgstgsm.so</filename>
 <size>16192</size>
 <m32p>1205244456</m32p>
 <version>0.10.6</version>
 <license>LGPL</license>
 <source>gst-plugins-bad</source>
 <package>Gstreamer</package>
 <origin>http://gstreamer.freedesktop.org</origin>
 <feature typename="GstElementFactory">
  <name>gsmdec</name>
  <rank>256</rank>
  <longname>GSM audio decoder</longname>
  <class>Codec/Decoder/Audio</class>
  <description>Decodes GSM encoded audio</description>
  <author>Philippe Khalaf &lt;burger@speedy.org&gt;</author>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>audio/x-gsm, rate=(int)8000, channels=(int)1; audio/ms-gsm, rate=(int)8000, channels=(int)1</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>audio/x-raw-int, endianness=(int)1234, signed=(boolean)true, width=(int)16, depth=(int)16, rate=(int)8000, channels=(int)1</caps>
  </padtemplate>
 </feature>
 <feature typename="GstElementFactory">
  <name>gsmenc</name>
  <longname>GSM audio encoder</longname>
  <class>Codec/Encoder/Audio</class>
  <description>Encodes GSM audio</description>
  <author>Philippe Khalaf &lt;burger@speedy.org&gt;</author>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>audio/x-raw-int, endianness=(int)1234, signed=(boolean)true, width=(int)16, depth=(int)16, rate=(int)8000, channels=(int)1</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>audio/x-gsm, rate=(int)8000, channels=(int)1</caps>
  </padtemplate>
 </feature>
</plugin>
<plugin>
 <name>fbdevsink</name>
 <description>linux framebuffer video sink</description>
 <filename>/usr/lib/gstreamer-0.10/libgstfbdevsink.so</filename>
 <size>15584</size>
 <m32p>1205244456</m32p>
 <version>0.10.6</version>
 <license>LGPL</license>
 <source>gst-plugins-bad</source>
 <package>GStreamer Bad Plugins (Ubuntu)</package>
 <origin>https://launchpad.net/distros/ubuntu/+source/gst-plugins-bad0.10</origin>
 <feature typename="GstElementFactory">
  <name>fbdevsink</name>
  <longname>fbdev video sink</longname>
  <class>Sink/Video</class>
  <description>A linux framebuffer videosink</description>
  <author>Sean D&apos;Epagnier &lt;sean@depagnier.com&gt;</author>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>video/x-raw-rgb, bpp=(int)16, depth=(int)15, endianness=(int)1234, red_mask=(int)31744, green_mask=(int)992, blue_mask=(int)31, width=(int)[ 1, 2147483647 ], height=(int)[ 1, 2147483647 ], framerate=(fraction)[ 0/1, 2147483647/1 ]; video/x-raw-rgb, bpp=(int)16, depth=(int)16, endianness=(int)1234, red_mask=(int)63488, green_mask=(int)2016, blue_mask=(int)31, width=(int)[ 1, 2147483647 ], height=(int)[ 1, 2147483647 ], framerate=(fraction)[ 0/1, 2147483647/1 ]; video/x-raw-rgb, bpp=(int)24, depth=(int)24, endianness=(int)4321, red_mask=(int)255, green_mask=(int)65280, blue_mask=(int)16711680, width=(int)[ 1, 2147483647 ], height=(int)[ 1, 2147483647 ], framerate=(fraction)[ 0/1, 2147483647/1 ]; video/x-raw-rgb, bpp=(int)32, depth=(int)24, endianness=(int)4321, red_mask=(int)65280, green_mask=(int)16711680, blue_mask=(int)-16777216, width=(int)[ 1, 2147483647 ], height=(int)[ 1, 2147483647 ], framerate=(fraction)[ 0/1, 2147483647/1 ]; video/x-raw-rgb, bpp=(int)32, depth=(int)24, endianness=(int)4321, red_mask=(int)255, green_mask=(int)65280, blue_mask=(int)16711680, width=(int)[ 1, 2147483647 ], height=(int)[ 1, 2147483647 ], framerate=(fraction)[ 0/1, 2147483647/1 ]; video/x-raw-rgb, bpp=(int)24, depth=(int)24, endianness=(int)4321, red_mask=(int)16711680, green_mask=(int)65280, blue_mask=(int)255, width=(int)[ 1, 2147483647 ], height=(int)[ 1, 2147483647 ], framerate=(fraction)[ 0/1, 2147483647/1 ]; video/x-raw-rgb, bpp=(int)32, depth=(int)24, endianness=(int)4321, red_mask=(int)-16777216, green_mask=(int)16711680, blue_mask=(int)65280, width=(int)[ 1, 2147483647 ], height=(int)[ 1, 2147483647 ], framerate=(fraction)[ 0/1, 2147483647/1 ]; video/x-raw-rgb, bpp=(int)32, depth=(int)24, endianness=(int)4321, red_mask=(int)16711680, green_mask=(int)65280, blue_mask=(int)255, width=(int)[ 1, 2147483647 ], height=(int)[ 1, 2147483647 ], framerate=(fraction)[ 0/1, 2147483647/1 ]</caps>
  </padtemplate>
 </feature>
</plugin>
<plugin>
 <name>dvb</name>
 <description>DVB elements</description>
 <filename>/usr/lib/gstreamer-0.10/libgstdvb.so</filename>
 <size>80400</size>
 <m32p>1205244456</m32p>
 <version>0.10.6</version>
 <license>LGPL</license>
 <source>gst-plugins-bad</source>
 <package>GStreamer Bad Plugins (Ubuntu)</package>
 <origin>https://launchpad.net/distros/ubuntu/+source/gst-plugins-bad0.10</origin>
 <feature typename="GstElementFactory">
  <name>dvbbasebin</name>
  <longname>DVB bin</longname>
  <class>Source/Bin/Video</class>
  <description>Access descramble and split DVB streams</description>
  <author>Alessandro Decina &lt;alessandro@nnva.org&gt;</author>
  <padtemplate>
   <nametemplate>program_%d</nametemplate>
   <direction>src</direction>
   <presence>sometimes</presence>
   <caps>video/mpegts, systemstream=(boolean)true</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>src%d</nametemplate>
   <direction>src</direction>
   <presence>request</presence>
   <caps>video/mpegts, systemstream=(boolean)true</caps>
  </padtemplate>
  <interface>GstChildProxy</interface>
  <interface>GstURIHandler</interface>
  <uri_type>source</uri_type>
  <uri_protocol>dvb</uri_protocol>
 </feature>
 <feature typename="GstElementFactory">
  <name>dvbsrc</name>
  <longname>DVB Source</longname>
  <class>Source/Video</class>
  <description>Digital Video Broadcast Source</description>
  <author>P2P-VCR, C-Lab, University of Paderborn
Zaheer Abbas Merali &lt;zaheerabbas at merali dot org&gt;</author>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>video/mpegts, mpegversion=(int)2, systemstream=(boolean)true</caps>
  </padtemplate>
 </feature>
</plugin>
<plugin>
 <name>faac</name>
 <description>Free AAC Encoder (FAAC)</description>
 <filename>/usr/lib/gstreamer-0.10/libgstfaac.so</filename>
 <size>20952</size>
 <m32p>1203939860</m32p>
 <version>0.10.6</version>
 <license>LGPL</license>
 <source>gst-plugins-bad</source>
 <package>GStreamer Bad Multiverse Plugins (Ubuntu)</package>
 <origin>https://launchpad.net/distros/ubuntu/+source/gst-plugins-bad-multiverse0.10</origin>
 <feature typename="GstElementFactory">
  <name>faac</name>
  <longname>AAC audio encoder</longname>
  <class>Codec/Encoder/Audio</class>
  <description>Free MPEG-2/4 AAC encoder</description>
  <author>Ronald Bultje &lt;rbultje@ronald.bitfreak.net&gt;</author>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>audio/mpeg, mpegversion=(int){ 4, 2 }, channels=(int)[ 1, 6 ], rate=(int)[ 8000, 96000 ]</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>audio/x-raw-int, endianness=(int)1234, signed=(boolean)true, width=(int)16, depth=(int)16, rate=(int)[ 8000, 96000 ], channels=(int)[ 1, 6 ]</caps>
  </padtemplate>
 </feature>
</plugin>
<plugin>
 <name>wildmidi</name>
 <description>Wildmidi Plugin</description>
 <filename>/usr/lib/gstreamer-0.10/libgstwildmidi.so</filename>
 <size>28480</size>
 <m32p>1205244457</m32p>
 <version>0.10.6</version>
 <license>GPL</license>
 <source>gst-plugins-bad</source>
 <package>GStreamer</package>
 <origin>http://gstreamer.net/</origin>
 <feature typename="GstElementFactory">
  <name>wildmidi</name>
  <rank>128</rank>
  <longname>WildMidi</longname>
  <class>Codec/Decoder/Audio</class>
  <description>Midi Synthesizer Element</description>
  <author>Wouter Paesen &lt;wouter@blue-gate.be&gt;</author>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>audio/x-raw-int, rate=(int)44100, channels=(int)2, endianness=(int)1234, width=(int)16, depth=(int)16, signed=(boolean)true</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>audio/midi</caps>
  </padtemplate>
 </feature>
 <feature typename="GstTypeFindFactory">
  <name>audio/midi</name>
  <rank>128</rank>
  <caps>audio/midi</caps>
  <extension>mid</extension>
  <extension>midi</extension>
 </feature>
</plugin>
<plugin>
 <name>gstrtpmanager</name>
 <description>RTP session management plugin library</description>
 <filename>/usr/lib/gstreamer-0.10/libgstrtpmanager.so</filename>
 <size>168288</size>
 <m32p>1205244457</m32p>
 <version>0.10.6</version>
 <license>LGPL</license>
 <source>gst-plugins-bad</source>
 <package>GStreamer Bad Plugins (Ubuntu)</package>
 <origin>https://launchpad.net/distros/ubuntu/+source/gst-plugins-bad0.10</origin>
 <feature typename="GstElementFactory">
  <name>gstrtpssrcdemux</name>
  <longname>RTP SSRC Demux</longname>
  <class>Demux/Network/RTP</class>
  <description>Splits RTP streams based on the SSRC</description>
  <author>Wim Taymans &lt;wim.taymans@gmail.com&gt;</author>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>application/x-rtp</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>rtcp_sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>application/x-rtcp</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>src_%d</nametemplate>
   <direction>src</direction>
   <presence>sometimes</presence>
   <caps>application/x-rtp</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>rtcp_src_%d</nametemplate>
   <direction>src</direction>
   <presence>sometimes</presence>
   <caps>application/x-rtcp</caps>
  </padtemplate>
 </feature>
 <feature typename="GstElementFactory">
  <name>gstrtpsession</name>
  <longname>RTP Session</longname>
  <class>Filter/Network/RTP</class>
  <description>Implement an RTP session</description>
  <author>Wim Taymans &lt;wim.taymans@gmail.com&gt;</author>
  <padtemplate>
   <nametemplate>recv_rtp_sink</nametemplate>
   <direction>sink</direction>
   <presence>request</presence>
   <caps>application/x-rtp</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>recv_rtcp_sink</nametemplate>
   <direction>sink</direction>
   <presence>request</presence>
   <caps>application/x-rtcp</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>send_rtp_sink</nametemplate>
   <direction>sink</direction>
   <presence>request</presence>
   <caps>application/x-rtp</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>recv_rtp_src</nametemplate>
   <direction>src</direction>
   <presence>sometimes</presence>
   <caps>application/x-rtp</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>sync_src</nametemplate>
   <direction>src</direction>
   <presence>sometimes</presence>
   <caps>application/x-rtcp</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>send_rtp_src</nametemplate>
   <direction>src</direction>
   <presence>sometimes</presence>
   <caps>application/x-rtp</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>send_rtcp_src</nametemplate>
   <direction>src</direction>
   <presence>request</presence>
   <caps>application/x-rtcp</caps>
  </padtemplate>
 </feature>
 <feature typename="GstElementFactory">
  <name>gstrtpptdemux</name>
  <longname>RTP Demux</longname>
  <class>Demux/Network/RTP</class>
  <description>Parses codec streams transmitted in the same RTP session</description>
  <author>Kai Vehmanen &lt;kai.vehmanen@nokia.com&gt;</author>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>application/x-rtp</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>src_%d</nametemplate>
   <direction>src</direction>
   <presence>sometimes</presence>
   <caps>application/x-rtp, payload=(int)[ 0, 255 ]</caps>
  </padtemplate>
 </feature>
 <feature typename="GstElementFactory">
  <name>gstrtpjitterbuffer</name>
  <longname>RTP packet jitter-buffer</longname>
  <class>Filter/Network/RTP</class>
  <description>A buffer that deals with network jitter and other transmission faults</description>
  <author>Philippe Kalaf &lt;philippe.kalaf@collabora.co.uk&gt;, Wim Taymans &lt;wim.taymans@gmail.com&gt;</author>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>application/x-rtp</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>application/x-rtp, clock-rate=(int)[ 1, 2147483647 ]</caps>
  </padtemplate>
 </feature>
 <feature typename="GstElementFactory">
  <name>gstrtpclient</name>
  <longname>RTP Client</longname>
  <class>Filter/Network/RTP</class>
  <description>Implement an RTP client</description>
  <author>Wim Taymans &lt;wim.taymans@gmail.com&gt;</author>
  <padtemplate>
   <nametemplate>rtp_sink_%d</nametemplate>
   <direction>sink</direction>
   <presence>request</presence>
   <caps>application/x-rtp</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>sync_sink_%d</nametemplate>
   <direction>sink</direction>
   <presence>request</presence>
   <caps>application/x-rtcp</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>rtp_src_%d_%d</nametemplate>
   <direction>src</direction>
   <presence>sometimes</presence>
   <caps>application/x-rtp</caps>
  </padtemplate>
  <interface>GstChildProxy</interface>
 </feature>
 <feature typename="GstElementFactory">
  <name>gstrtpbin</name>
  <longname>RTP Bin</longname>
  <class>Filter/Network/RTP</class>
  <description>Implement an RTP bin</description>
  <author>Wim Taymans &lt;wim.taymans@gmail.com&gt;</author>
  <padtemplate>
   <nametemplate>recv_rtp_sink_%d</nametemplate>
   <direction>sink</direction>
   <presence>request</presence>
   <caps>application/x-rtp</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>recv_rtcp_sink_%d</nametemplate>
   <direction>sink</direction>
   <presence>request</presence>
   <caps>application/x-rtcp</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>send_rtp_sink_%d</nametemplate>
   <direction>sink</direction>
   <presence>request</presence>
   <caps>application/x-rtp</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>recv_rtp_src_%d_%d_%d</nametemplate>
   <direction>src</direction>
   <presence>sometimes</presence>
   <caps>application/x-rtp</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>send_rtcp_src_%d</nametemplate>
   <direction>src</direction>
   <presence>request</presence>
   <caps>application/x-rtcp</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>send_rtp_src_%d</nametemplate>
   <direction>src</direction>
   <presence>sometimes</presence>
   <caps>application/x-rtp</caps>
  </padtemplate>
  <interface>GstChildProxy</interface>
 </feature>
</plugin>
<plugin>
 <name>selector</name>
 <description>input/output stream selector elements</description>
 <filename>/usr/lib/gstreamer-0.10/libgstselector.so</filename>
 <size>32896</size>
 <m32p>1205244457</m32p>
 <version>0.10.6</version>
 <license>LGPL</license>
 <source>gst-plugins-bad</source>
 <package>GStreamer Bad Plugins (Ubuntu)</package>
 <origin>https://launchpad.net/distros/ubuntu/+source/gst-plugins-bad0.10</origin>
 <feature typename="GstElementFactory">
  <name>output-selector</name>
  <longname>Output selector</longname>
  <class>Generic</class>
  <description>1-to-N output stream selectoring</description>
  <author>Stefan Kost &lt;stefan.kost@nokia.com&gt;</author>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>ANY</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>src%d</nametemplate>
   <direction>src</direction>
   <presence>request</presence>
   <caps>ANY</caps>
  </padtemplate>
 </feature>
 <feature typename="GstElementFactory">
  <name>input-selector</name>
  <longname>Input selector</longname>
  <class>Generic</class>
  <description>N-to-1 input stream selectoring</description>
  <author>Julien Moutte &lt;julien@moutte.net&gt;
Ronald S. Bultje &lt;rbultje@ronald.bitfreak.net&gt;
Jan Schmidt &lt;thaytan@mad.scientist.com&gt;
Wim Taymans &lt;wim.taymans@gmail.com&gt;</author>
  <padtemplate>
   <nametemplate>sink%d</nametemplate>
   <direction>sink</direction>
   <presence>request</presence>
   <caps>ANY</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>ANY</caps>
  </padtemplate>
 </feature>
</plugin>
<plugin>
 <name>x264</name>
 <description>libx264-based H264 plugins</description>
 <filename>/usr/lib/gstreamer-0.10/libgstx264.so</filename>
 <size>28656</size>
 <m32p>1203939860</m32p>
 <version>0.10.6</version>
 <license>GPL</license>
 <source>gst-plugins-bad</source>
 <package>GStreamer Bad Multiverse Plugins (Ubuntu)</package>
 <origin>https://launchpad.net/distros/ubuntu/+source/gst-plugins-bad-multiverse0.10</origin>
 <feature typename="GstElementFactory">
  <name>x264enc</name>
  <longname>x264enc</longname>
  <class>Codec/Encoder/Video</class>
  <description>H264 Encoder</description>
  <author>Josef Zlomek &lt;josef.zlomek@itonis.tv&gt;</author>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>video/x-h264</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>video/x-raw-yuv, format=(fourcc)I420, framerate=(fraction)[ 0/1, 2147483647/1 ], width=(int)[ 16, 2147483647 ], height=(int)[ 16, 2147483647 ]</caps>
  </padtemplate>
 </feature>
</plugin>
<plugin>
 <name>speed</name>
 <description>Set speed/pitch on audio/raw streams (resampler)</description>
 <filename>/usr/lib/gstreamer-0.10/libgstspeed.so</filename>
 <size>18080</size>
 <m32p>1205244457</m32p>
 <version>0.10.6</version>
 <license>LGPL</license>
 <source>gst-plugins-bad</source>
 <package>GStreamer Bad Plugins (Ubuntu)</package>
 <origin>https://launchpad.net/distros/ubuntu/+source/gst-plugins-bad0.10</origin>
 <feature typename="GstElementFactory">
  <name>speed</name>
  <longname>Speed</longname>
  <class>Filter/Effect/Audio</class>
  <description>Set speed/pitch on audio/raw streams (resampler)</description>
  <author>Andy Wingo &lt;apwingo@eos.ncsu.edu&gt;, Tim-Philipp Müller &lt;tim@centricular.net&gt;</author>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>audio/x-raw-float, rate=(int)[ 1, 2147483647 ], channels=(int)[ 1, 2147483647 ], endianness=(int)1234, width=(int)32; audio/x-raw-int, rate=(int)[ 1, 2147483647 ], channels=(int)[ 1, 2147483647 ], endianness=(int)1234, width=(int)16, depth=(int)16, signed=(boolean)true</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>audio/x-raw-float, rate=(int)[ 1, 2147483647 ], channels=(int)[ 1, 2147483647 ], endianness=(int)1234, width=(int)32; audio/x-raw-int, rate=(int)[ 1, 2147483647 ], channels=(int)[ 1, 2147483647 ], endianness=(int)1234, width=(int)16, depth=(int)16, signed=(boolean)true</caps>
  </padtemplate>
 </feature>
</plugin>
<plugin>
 <name>ladspa</name>
 <description>All LADSPA plugins</description>
 <filename>/usr/lib/gstreamer-0.10/libgstladspa.so</filename>
 <size>36264</size>
 <m32p>1205244456</m32p>
 <version>0.10.6</version>
 <license>LGPL</license>
 <source>gst-plugins-bad</source>
 <package>GStreamer Bad Plugins (Ubuntu)</package>
 <origin>https://launchpad.net/distros/ubuntu/+source/gst-plugins-bad0.10</origin>
</plugin>
<plugin>
 <name>neon</name>
 <description>lib neon http client src</description>
 <filename>/usr/lib/gstreamer-0.10/libgstneonhttpsrc.so</filename>
 <size>24040</size>
 <m32p>1205244457</m32p>
 <version>0.10.6</version>
 <license>LGPL</license>
 <source>gst-plugins-bad</source>
 <package>GStreamer</package>
 <origin>http://gstreamer.net/</origin>
 <feature typename="GstElementFactory">
  <name>neonhttpsrc</name>
  <longname>HTTP client source</longname>
  <class>Source/Network</class>
  <description>Receive data as a client over the network via HTTP using NEON</description>
  <author>Edgard Lima &lt;edgard.lima@indt.org.br&gt;, Rosfran Borges &lt;rosfran.borges@indt.org.br&gt;, Andre Moreira Magalhaes &lt;andre.magalhaes@indt.org.br&gt;</author>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>ANY</caps>
  </padtemplate>
  <interface>GstURIHandler</interface>
  <uri_type>source</uri_type>
  <uri_protocol>http</uri_protocol>
  <uri_protocol>https</uri_protocol>
 </feature>
</plugin>
<plugin>
 <name>soup</name>
 <description>libsoup HTTP client src</description>
 <filename>/usr/lib/gstreamer-0.10/libgstsouphttpsrc.so</filename>
 <size>28744</size>
 <m32p>1205244457</m32p>
 <version>0.10.6</version>
 <license>LGPL</license>
 <source>gst-plugins-bad</source>
 <package>GStreamer Bad Plugins (Ubuntu)</package>
 <origin>https://launchpad.net/distros/ubuntu/+source/gst-plugins-bad0.10</origin>
 <feature typename="GstElementFactory">
  <name>souphttpsrc</name>
  <rank>64</rank>
  <longname>HTTP client source</longname>
  <class>Source/Network</class>
  <description>Receive data as a client over the network via HTTP using SOUP</description>
  <author>Wouter Cloetens &lt;wouter@mind.be&gt;</author>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>ANY</caps>
  </padtemplate>
  <interface>GstURIHandler</interface>
  <uri_type>source</uri_type>
  <uri_protocol>http</uri_protocol>
  <uri_protocol>https</uri_protocol>
  <uri_protocol>dav</uri_protocol>
  <uri_protocol>davs</uri_protocol>
 </feature>
</plugin>
<plugin>
 <name>vcdsrc</name>
 <description>Asynchronous read from VCD disk</description>
 <filename>/usr/lib/gstreamer-0.10/libgstvcdsrc.so</filename>
 <size>15584</size>
 <m32p>1205244457</m32p>
 <version>0.10.6</version>
 <license>LGPL</license>
 <source>gst-plugins-bad</source>
 <package>GStreamer Bad Plugins (Ubuntu)</package>
 <origin>https://launchpad.net/distros/ubuntu/+source/gst-plugins-bad0.10</origin>
 <feature typename="GstElementFactory">
  <name>vcdsrc</name>
  <longname>VCD Source</longname>
  <class>Source/File</class>
  <description>Asynchronous read from VCD disk</description>
  <author>Erik Walthinsen &lt;omega@cse.ogi.edu&gt;</author>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>ANY</caps>
  </padtemplate>
  <interface>GstURIHandler</interface>
  <uri_type>source</uri_type>
  <uri_protocol>vcd</uri_protocol>
 </feature>
</plugin>
<plugin>
 <name>cdxaparse</name>
 <description>Parse a .dat file (VCD) into raw mpeg1</description>
 <filename>/usr/lib/gstreamer-0.10/libgstcdxaparse.so</filename>
 <size>17952</size>
 <m32p>1205244456</m32p>
 <version>0.10.6</version>
 <license>LGPL</license>
 <source>gst-plugins-bad</source>
 <package>GStreamer Bad Plugins (Ubuntu)</package>
 <origin>https://launchpad.net/distros/ubuntu/+source/gst-plugins-bad0.10</origin>
 <feature typename="GstElementFactory">
  <name>cdxaparse</name>
  <rank>256</rank>
  <longname>(S)VCD parser</longname>
  <class>Codec/Parser</class>
  <description>Parse a .dat file from (S)VCD into raw MPEG-1</description>
  <author>Wim Taymans &lt;wim.taymans@tvd.be&gt;</author>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>video/x-cdxa</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>video/mpeg, systemstream=(boolean)true</caps>
  </padtemplate>
 </feature>
</plugin>
<plugin>
 <name>schro</name>
 <description>Schro plugins</description>
 <filename>/usr/lib/gstreamer-0.10/libgstschro.so</filename>
 <size>66624</size>
 <m32p>1206107528</m32p>
 <version>1.0.1</version>
 <license>LGPL</license>
 <source>schroedinger</source>
 <package>schroedinger</package>
 <origin>unknown</origin>
 <feature typename="GstElementFactory">
  <name>framestore</name>
  <longname>FIXME</longname>
  <class>Filter/Effect</class>
  <description>FIXME example filter</description>
  <author>FIXME &lt;fixme@fixme.com&gt;</author>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>video/x-raw-yuv, format=(fourcc)I420, width=(int)[ 1, 2147483647 ], height=(int)[ 1, 2147483647 ], framerate=(fraction)[ 0/1, 2147483647/1 ]</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>video/x-raw-yuv, format=(fourcc)I420, width=(int)[ 1, 2147483647 ], height=(int)[ 1, 2147483647 ], framerate=(fraction)[ 0/1, 2147483647/1 ]</caps>
  </padtemplate>
 </feature>
 <feature typename="GstElementFactory">
  <name>schroparse</name>
  <longname>Dirac Parser</longname>
  <class>Codec/Parser/Video</class>
  <description>Parse Dirac streams</description>
  <author>David Schleef &lt;ds@schleef.org&gt;</author>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>video/x-dirac</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>video/x-dirac</caps>
  </padtemplate>
 </feature>
 <feature typename="GstElementFactory">
  <name>schrodec</name>
  <rank>256</rank>
  <longname>Dirac Decoder</longname>
  <class>Codec/Decoder/Video</class>
  <description>Decode Dirac streams</description>
  <author>David Schleef &lt;ds@schleef.org&gt;</author>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>video/x-raw-yuv, format=(fourcc){ I420, YUY2, AYUV }, width=(int)[ 1, 2147483647 ], height=(int)[ 1, 2147483647 ], framerate=(fraction)[ 0/1, 2147483647/1 ]</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>video/x-dirac</caps>
  </padtemplate>
 </feature>
 <feature typename="GstElementFactory">
  <name>schroenc</name>
  <rank>256</rank>
  <longname>Dirac Encoder</longname>
  <class>Codec/Encoder/Video</class>
  <description>Encode raw YUV video into Dirac stream</description>
  <author>David Schleef &lt;ds@schleef.org&gt;</author>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>video/x-dirac</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>video/x-raw-yuv, format=(fourcc){ I420, YV12, YUY2, UYVY, AYUV }, width=(int)[ 1, 2147483647 ], height=(int)[ 1, 2147483647 ], framerate=(fraction)[ 0/1, 2147483647/1 ]</caps>
  </padtemplate>
 </feature>
 <feature typename="GstElementFactory">
  <name>schrodownsample</name>
  <longname>Video Filter Template</longname>
  <class>Filter/Effect/Video</class>
  <description>Template for a video filter</description>
  <author>David Schleef &lt;ds@schleef.org&gt;</author>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>video/x-raw-yuv, format=(fourcc){ I420, YV12, YUY2, UYVY, AYUV }, width=(int)[ 1, 2147483647 ], height=(int)[ 1, 2147483647 ], framerate=(fraction)[ 0/1, 2147483647/1 ]</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>video/x-raw-yuv, format=(fourcc){ I420, YV12, YUY2, UYVY, AYUV }, width=(int)[ 1, 2147483647 ], height=(int)[ 1, 2147483647 ], framerate=(fraction)[ 0/1, 2147483647/1 ]</caps>
  </padtemplate>
 </feature>
 <feature typename="GstElementFactory">
  <name>schrofilter</name>
  <longname>Video Filter Template</longname>
  <class>Filter/Effect/Video</class>
  <description>Template for a video filter</description>
  <author>David Schleef &lt;ds@schleef.org&gt;</author>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>video/x-raw-yuv, format=(fourcc)I420, width=(int)[ 1, 2147483647 ], height=(int)[ 1, 2147483647 ], framerate=(fraction)[ 0/1, 2147483647/1 ]</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>video/x-raw-yuv, format=(fourcc)I420, width=(int)[ 1, 2147483647 ], height=(int)[ 1, 2147483647 ], framerate=(fraction)[ 0/1, 2147483647/1 ]</caps>
  </padtemplate>
 </feature>
 <feature typename="GstElementFactory">
  <name>schrotoy</name>
  <longname>Video Filter Template</longname>
  <class>Filter/Effect/Video</class>
  <description>Template for a video filter</description>
  <author>David Schleef &lt;ds@schleef.org&gt;</author>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>video/x-raw-yuv, format=(fourcc)I420, width=(int)[ 1, 2147483647 ], height=(int)[ 1, 2147483647 ], framerate=(fraction)[ 0/1, 2147483647/1 ]</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>video/x-raw-yuv, format=(fourcc)I420, width=(int)[ 1, 2147483647 ], height=(int)[ 1, 2147483647 ], framerate=(fraction)[ 0/1, 2147483647/1 ]</caps>
  </padtemplate>
 </feature>
</plugin>
<plugin>
 <name>y4menc</name>
 <description>Encodes a YUV frame into the yuv4mpeg format (mjpegtools)</description>
 <filename>/usr/lib/gstreamer-0.10/libgsty4menc.so</filename>
 <size>12960</size>
 <m32p>1205244457</m32p>
 <version>0.10.6</version>
 <license>LGPL</license>
 <source>gst-plugins-bad</source>
 <package>GStreamer Bad Plugins (Ubuntu)</package>
 <origin>https://launchpad.net/distros/ubuntu/+source/gst-plugins-bad0.10</origin>
 <feature typename="GstElementFactory">
  <name>y4menc</name>
  <longname>YUV4MPEG video encoder</longname>
  <class>Codec/Encoder/Video</class>
  <description>Encodes a YUV frame into the yuv4mpeg format (mjpegtools)</description>
  <author>Wim Taymans &lt;wim.taymans@chello.be&gt;</author>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>application/x-yuv4mpeg, y4mversion=(int)2</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>video/x-raw-yuv, format=(fourcc){ IYUV, I420 }, width=(int)[ 1, 2147483647 ], height=(int)[ 1, 2147483647 ], framerate=(fraction)[ 0/1, 2147483647/1 ]</caps>
  </padtemplate>
 </feature>
</plugin>
<plugin>
 <name>replaygain</name>
 <description>ReplayGain volume normalization</description>
 <filename>/usr/lib/gstreamer-0.10/libgstreplaygain.so</filename>
 <size>41208</size>
 <m32p>1205244457</m32p>
 <version>0.10.6</version>
 <license>LGPL</license>
 <source>gst-plugins-bad</source>
 <package>GStreamer Bad Plugins (Ubuntu)</package>
 <origin>https://launchpad.net/distros/ubuntu/+source/gst-plugins-bad0.10</origin>
 <feature typename="GstElementFactory">
  <name>rgvolume</name>
  <longname>ReplayGain volume</longname>
  <class>Filter/Effect/Audio</class>
  <description>Apply ReplayGain volume adjustment</description>
  <author>René Stadler &lt;mail@renestadler.de&gt;</author>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>audio/x-raw-float, rate=(int)[ 1, 2147483647 ], channels=(int)[ 1, 2147483647 ], endianness=(int)1234, width=(int)32; audio/x-raw-int, channels=(int)[ 1, 2147483647 ], rate=(int)[ 1, 2147483647 ], endianness=(int)1234, width=(int)16, depth=(int)16, signed=(boolean)true</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>audio/x-raw-float, rate=(int)[ 1, 2147483647 ], channels=(int)[ 1, 2147483647 ], endianness=(int)1234, width=(int)32; audio/x-raw-int, channels=(int)[ 1, 2147483647 ], rate=(int)[ 1, 2147483647 ], endianness=(int)1234, width=(int)16, depth=(int)16, signed=(boolean)true</caps>
  </padtemplate>
  <interface>GstChildProxy</interface>
 </feature>
 <feature typename="GstElementFactory">
  <name>rglimiter</name>
  <longname>ReplayGain limiter</longname>
  <class>Filter/Effect/Audio</class>
  <description>Apply signal compression to raw audio data</description>
  <author>René Stadler &lt;mail@renestadler.de&gt;</author>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>audio/x-raw-float, width=(int)32, channels=(int)[ 1, 2147483647 ], rate=(int)[ 1, 2147483647 ], endianness=(int)1234</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>audio/x-raw-float, width=(int)32, channels=(int)[ 1, 2147483647 ], rate=(int)[ 1, 2147483647 ], endianness=(int)1234</caps>
  </padtemplate>
 </feature>
 <feature typename="GstElementFactory">
  <name>rganalysis</name>
  <longname>ReplayGain analysis</longname>
  <class>Filter/Analyzer/Audio</class>
  <description>Perform the ReplayGain analysis</description>
  <author>René Stadler &lt;mail@renestadler.de&gt;</author>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>audio/x-raw-float, width=(int)32, endianness=(int)1234, channels=(int){ 1, 2 }, rate=(int){ 8000, 11025, 12000, 16000, 22050, 24000, 32000, 44100, 48000 }; audio/x-raw-int, width=(int)16, depth=(int)[ 1, 16 ], signed=(boolean)true, endianness=(int)1234, channels=(int){ 1, 2 }, rate=(int){ 8000, 11025, 12000, 16000, 22050, 24000, 32000, 44100, 48000 }</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>audio/x-raw-float, width=(int)32, endianness=(int)1234, channels=(int){ 1, 2 }, rate=(int){ 8000, 11025, 12000, 16000, 22050, 24000, 32000, 44100, 48000 }; audio/x-raw-int, width=(int)16, depth=(int)[ 1, 16 ], signed=(boolean)true, endianness=(int)1234, channels=(int){ 1, 2 }, rate=(int){ 8000, 11025, 12000, 16000, 22050, 24000, 32000, 44100, 48000 }</caps>
  </padtemplate>
 </feature>
</plugin>
<plugin>
 <name>sdp</name>
 <description>configure streaming sessions using SDP</description>
 <filename>/usr/lib/gstreamer-0.10/libgstsdpelem.so</filename>
 <size>32640</size>
 <m32p>1205244457</m32p>
 <version>0.10.6</version>
 <license>LGPL</license>
 <source>gst-plugins-bad</source>
 <package>GStreamer Bad Plugins (Ubuntu)</package>
 <origin>https://launchpad.net/distros/ubuntu/+source/gst-plugins-bad0.10</origin>
 <feature typename="GstElementFactory">
  <name>sdpdemux</name>
  <rank>128</rank>
  <longname>SDP session setup</longname>
  <class>Codec/Demuxer/Network/RTP</class>
  <description>Receive data over the network via SDP</description>
  <author>Wim Taymans &lt;wim.taymans@gmail.com&gt;</author>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>application/sdp</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>stream%d</nametemplate>
   <direction>src</direction>
   <presence>sometimes</presence>
   <caps>application/x-rtp</caps>
  </padtemplate>
  <interface>GstChildProxy</interface>
 </feature>
</plugin>
<plugin>
 <name>dvdspu</name>
 <description>DVD Sub-picture Overlay element</description>
 <filename>/usr/lib/gstreamer-0.10/libgstdvdspu.so</filename>
 <size>38272</size>
 <m32p>1205244456</m32p>
 <version>0.10.6</version>
 <license>LGPL</license>
 <source>gst-plugins-bad</source>
 <package>GStreamer Bad Plugins (Ubuntu)</package>
 <origin>https://launchpad.net/distros/ubuntu/+source/gst-plugins-bad0.10</origin>
 <feature typename="GstElementFactory">
  <name>dvdspu</name>
  <longname>Fluendo DVD Player Sub-picture Overlay</longname>
  <class>Mixer/Video/Overlay/DVD</class>
  <description>Parses the DVD Sub-Picture command stream and renders the SPU overlay onto the video as it passes through</description>
  <author>Jan Schmidt &lt;jan@fluendo.com&gt;</author>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>video/x-raw-yuv, format=(fourcc){ I420 }, width=(int)[ 16, 4096 ], height=(int)[ 16, 4096 ]</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>video</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>video/x-raw-yuv, format=(fourcc){ I420 }, width=(int)[ 16, 4096 ], height=(int)[ 16, 4096 ]</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>subpicture</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>video/x-dvd-subpicture</caps>
  </padtemplate>
 </feature>
</plugin>
<plugin>
 <name>nsfdec</name>
 <description>Uses nosefart to decode .nsf files</description>
 <filename>/usr/lib/gstreamer-0.10/libgstnsf.so</filename>
 <size>74480</size>
 <m32p>1205244457</m32p>
 <version>0.10.6</version>
 <license>GPL</license>
 <source>gst-plugins-bad</source>
 <package>GStreamer Bad Plugins (Ubuntu)</package>
 <origin>https://launchpad.net/distros/ubuntu/+source/gst-plugins-bad0.10</origin>
 <feature typename="GstElementFactory">
  <name>nsfdec</name>
  <rank>256</rank>
  <longname>Nsf decoder</longname>
  <class>Codec/Decoder/Audio</class>
  <description>Using nosefart to decode NSF audio tunes</description>
  <author>Johan Dahlin &lt;johan@gnome.org&gt;</author>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>audio/x-raw-int, endianness=(int)1234, signed=(boolean)true, width=(int){ 8, 16 }, depth=(int){ 8, 16 }, rate=(int)[ 8000, 48000 ], channels=(int)[ 1, 2 ]</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>audio/x-nsf</caps>
  </padtemplate>
 </feature>
</plugin>
<plugin>
 <name>tta</name>
 <description>TTA lossless audio format handling</description>
 <filename>/usr/lib/gstreamer-0.10/libgsttta.so</filename>
 <size>25952</size>
 <m32p>1205244457</m32p>
 <version>0.10.6</version>
 <license>LGPL</license>
 <source>gst-plugins-bad</source>
 <package>gst-tta</package>
 <origin>http://www.true-audio.com</origin>
 <feature typename="GstElementFactory">
  <name>ttadec</name>
  <rank>256</rank>
  <longname>TTA audio decoder</longname>
  <class>Codec/Decoder/Audio</class>
  <description>Decode TTA audio data</description>
  <author>Arwed v. Merkatz &lt;v.merkatz@gmx.net&gt;</author>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>audio/x-raw-int, width=(int){ 8, 16, 24 }, depth=(int){ 8, 16, 24 }, channels=(int){ 1, 2 }, rate=(int)[ 8000, 96000 ], endianness=(int)1234, signed=(boolean)true</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>audio/x-tta, width=(int){ 8, 16, 24 }, channels=(int){ 1, 2 }, rate=(int)[ 8000, 96000 ]</caps>
  </padtemplate>
 </feature>
 <feature typename="GstElementFactory">
  <name>ttaparse</name>
  <rank>256</rank>
  <longname>TTA file parser</longname>
  <class>Codec/Demuxer/Audio</class>
  <description>Parses TTA files</description>
  <author>Arwed v. Merkatz &lt;v.merkatz@gmx.net&gt;</author>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>audio/x-tta, width=(int){ 8, 16, 24 }, channels=(int){ 1, 2 }, rate=(int)[ 8000, 96000 ]</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>audio/x-ttafile</caps>
  </padtemplate>
 </feature>
</plugin>
<plugin>
 <name>cdaudio</name>
 <description>Play CD audio through the CD Drive</description>
 <filename>/usr/lib/gstreamer-0.10/libgstcdaudio.so</filename>
 <size>16688</size>
 <m32p>1205244456</m32p>
 <version>0.10.6</version>
 <license>LGPL</license>
 <source>gst-plugins-bad</source>
 <package>GStreamer Bad Plugins (Ubuntu)</package>
 <origin>https://launchpad.net/distros/ubuntu/+source/gst-plugins-bad0.10</origin>
 <feature typename="GstElementFactory">
  <name>cdaudio</name>
  <longname>CD player</longname>
  <class>Generic/Bin</class>
  <description>Play CD audio through the CD Drive</description>
  <author>Wim Taymans &lt;wim@fluendo.com&gt;</author>
  <interface>GstURIHandler</interface>
  <uri_type>source</uri_type>
  <uri_protocol>cd</uri_protocol>
 </feature>
</plugin>
<plugin>
 <name>bz2</name>
 <description>Compress or decompress streams</description>
 <filename>/usr/lib/gstreamer-0.10/libgstbz2.so</filename>
 <size>20480</size>
 <m32p>1205244456</m32p>
 <version>0.10.6</version>
 <license>LGPL</license>
 <source>gst-plugins-bad</source>
 <package>GStreamer Bad Plugins (Ubuntu)</package>
 <origin>https://launchpad.net/distros/ubuntu/+source/gst-plugins-bad0.10</origin>
 <feature typename="GstElementFactory">
  <name>bz2dec</name>
  <longname>BZ2 decoder</longname>
  <class>Codec/Decoder</class>
  <description>Decodes compressed streams</description>
  <author>Lutz Mueller &lt;lutz@users.sourceforge.net&gt;</author>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>application/x-bzip</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>ANY</caps>
  </padtemplate>
 </feature>
 <feature typename="GstElementFactory">
  <name>bz2enc</name>
  <longname>BZ2 encoder</longname>
  <class>Codec/Encoder</class>
  <description>Compresses streams</description>
  <author>Lutz Mueller &lt;lutz@users.sourceforge.net&gt;</author>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>ANY</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>application/x-bzip</caps>
  </padtemplate>
 </feature>
</plugin>
<plugin>
 <name>sndfile</name>
 <description>use libsndfile to read and write audio from and to files</description>
 <filename>/usr/lib/gstreamer-0.10/libgstsndfile.so</filename>
 <size>29664</size>
 <m32p>1205244457</m32p>
 <version>0.10.6</version>
 <license>LGPL</license>
 <source>gst-plugins-bad</source>
 <package>GStreamer Bad Plugins (Ubuntu)</package>
 <origin>https://launchpad.net/distros/ubuntu/+source/gst-plugins-bad0.10</origin>
 <feature typename="GstElementFactory">
  <name>sfsrc</name>
  <longname>Sndfile source</longname>
  <class>Source/Audio</class>
  <description>Read audio streams from disk using libsndfile</description>
  <author>Andy Wingo &lt;wingo at pobox dot com&gt;</author>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>audio/x-raw-float, rate=(int)[ 1, 2147483647 ], channels=(int)[ 1, 2147483647 ], endianness=(int)1234, width=(int)32; audio/x-raw-int, rate=(int)[ 1, 2147483647 ], channels=(int)[ 1, 2147483647 ], endianness=(int)1234, width=(int){ 16, 32 }, depth=(int){ 16, 32 }, signed=(boolean)true</caps>
  </padtemplate>
 </feature>
 <feature typename="GstElementFactory">
  <name>sfsink</name>
  <longname>Sndfile sink</longname>
  <class>Sink/Audio</class>
  <description>Write audio streams to disk using libsndfile</description>
  <author>Andy Wingo &lt;wingo at pobox dot com&gt;</author>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>audio/x-raw-float, rate=(int)[ 1, 2147483647 ], channels=(int)[ 1, 2147483647 ], endianness=(int)1234, width=(int)32; audio/x-raw-int, rate=(int)[ 1, 2147483647 ], channels=(int)[ 1, 2147483647 ], endianness=(int)1234, width=(int){ 16, 32 }, depth=(int){ 16, 32 }, signed=(boolean)true</caps>
  </padtemplate>
 </feature>
</plugin>
<plugin>
 <name>dtsdec</name>
 <description>Decodes DTS audio streams</description>
 <filename>/usr/lib/gstreamer-0.10/libgstdtsdec.so</filename>
 <size>164368</size>
 <m32p>1205244456</m32p>
 <version>0.10.6</version>
 <license>GPL</license>
 <source>gst-plugins-bad</source>
 <package>GStreamer Bad Plugins (Ubuntu)</package>
 <origin>https://launchpad.net/distros/ubuntu/+source/gst-plugins-bad0.10</origin>
 <feature typename="GstElementFactory">
  <name>dtsdec</name>
  <rank>256</rank>
  <longname>DTS audio decoder</longname>
  <class>Codec/Decoder/Audio</class>
  <description>Decodes DTS audio streams</description>
  <author>Ronald Bultje &lt;rbultje@ronald.bitfreak.net&gt;</author>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>audio/x-dts; audio/x-private1-dts</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>audio/x-raw-float, endianness=(int)1234, width=(int)32, rate=(int)[ 4000, 96000 ], channels=(int)[ 1, 6 ]</caps>
  </padtemplate>
 </feature>
</plugin>
<plugin>
 <name>bluetooth</name>
 <description>Bluetooth plugin library</description>
 <filename>/usr/lib/gstreamer-0.10/libgstbluetooth.so</filename>
 <size>89472</size>
 <m32p>1208763371</m32p>
 <version>3.26</version>
 <license>LGPL</license>
 <source>bluez-utils</source>
 <package>BlueZ</package>
 <origin>http://www.bluez.org/</origin>
 <feature typename="GstTypeFindFactory">
  <name>sbc</name>
  <rank>256</rank>
  <caps>audio/x-sbc</caps>
  <extension>sbc</extension>
 </feature>
 <feature typename="GstElementFactory">
  <name>sbcenc</name>
  <longname>Bluetooth SBC encoder</longname>
  <class>Codec/Encoder/Audio</class>
  <description>Encode a SBC audio stream</description>
  <author>Marcel Holtmann &lt;marcel@holtmann.org&gt;</author>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>audio/x-raw-int, rate=(int){ 16000, 32000, 44100, 48000 }, channels=(int)[ 1, 2 ], endianness=(int)1234, signed=(boolean)true, width=(int)16, depth=(int)16</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>audio/x-sbc, rate=(int){ 16000, 32000, 44100, 48000 }, channels=(int)[ 1, 2 ], mode=(string){ mono, dual, stereo, joint }, blocks=(int){ 4, 8, 12, 16 }, subbands=(int){ 4, 8 }, allocation=(string){ snr, loudness }, bitpool=(int)[ 2, 64 ]</caps>
  </padtemplate>
 </feature>
 <feature typename="GstElementFactory">
  <name>sbcdec</name>
  <rank>256</rank>
  <longname>Bluetooth SBC decoder</longname>
  <class>Codec/Decoder/Audio</class>
  <description>Decode a SBC audio stream</description>
  <author>Marcel Holtmann &lt;marcel@holtmann.org&gt;</author>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>audio/x-sbc</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>audio/x-raw-int, rate=(int){ 16000, 32000, 44100, 48000 }, channels=(int)[ 1, 2 ], endianness=(int)1234, signed=(boolean)true, width=(int)16, depth=(int)16</caps>
  </padtemplate>
 </feature>
 <feature typename="GstElementFactory">
  <name>sbcparse</name>
  <longname>Bluetooth SBC parser</longname>
  <class>Codec/Parser/Audio</class>
  <description>Parse a SBC audio stream</description>
  <author>Marcel Holtmann &lt;marcel@holtmann.org&gt;</author>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>audio/x-sbc, parsed=(boolean)false</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>audio/x-sbc, rate=(int){ 16000, 32000, 44100, 48000 }, channels=(int)[ 1, 2 ], mode=(string){ mono, dual, stereo, joint }, blocks=(int){ 4, 8, 12, 16 }, subbands=(int){ 4, 8 }, allocation=(string){ snr, loudness }, bitpool=(int)[ 2, 64 ], parsed=(boolean)true</caps>
  </padtemplate>
 </feature>
 <feature typename="GstElementFactory">
  <name>avdtpsink</name>
  <longname>Bluetooth AVDTP sink</longname>
  <class>Sink/Audio</class>
  <description>Plays audio to an A2DP device</description>
  <author>Marcel Holtmann &lt;marcel@holtmann.org&gt;</author>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>application/x-rtp, media=(string)audio, payload=(int)[ 96, 127 ], clock-rate=(int){ 16000, 32000, 44100, 48000 }, encoding-name=(string)SBC; application/x-rtp, media=(string)audio, payload=(int)14, clock-rate=(int)90000; application/x-rtp, media=(string)audio, payload=(int)[ 96, 127 ], clock-rate=(int)90000, encoding-name=(string)MPA</caps>
  </padtemplate>
 </feature>
 <feature typename="GstElementFactory">
  <name>a2dpsink</name>
  <rank>64</rank>
  <longname>Bluetooth A2DP sink</longname>
  <class>Sink/Audio</class>
  <description>Plays audio to an A2DP device</description>
  <author>Marcel Holtmann &lt;marcel@holtmann.org&gt;</author>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>audio/x-sbc, rate=(int){ 16000, 32000, 44100, 48000 }, channels=(int)[ 1, 2 ], mode=(string){ mono, dual, stereo, joint }, blocks=(int){ 4, 8, 12, 16 }, subbands=(int){ 4, 8 }, allocation=(string){ snr, loudness }, bitpool=(int)[ 2, 64 ]; audio/mpeg</caps>
  </padtemplate>
  <interface>GstChildProxy</interface>
 </feature>
 <feature typename="GstElementFactory">
  <name>rtpsbcpay</name>
  <longname>RTP packet payloader</longname>
  <class>Codec/Payloader/Network</class>
  <description>Payload SBC audio as RTP packets</description>
  <author>Thiago Sousa Santos &lt;thiagoss@lcc.ufcg.edu.br&gt;</author>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>audio/x-sbc, rate=(int){ 16000, 32000, 44100, 48000 }, channels=(int)[ 1, 2 ], mode=(string){ mono, dual, stereo, joint }, blocks=(int){ 4, 8, 12, 16 }, subbands=(int){ 4, 8 }, allocation=(string){ snr, loudness }, bitpool=(int)[ 2, 64 ]</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>application/x-rtp, media=(string)audio, payload=(int)[ 96, 127 ], clock-rate=(int){ 16000, 32000, 44100, 48000 }, encoding-name=(string)SBC</caps>
  </padtemplate>
 </feature>
</plugin>
<plugin>
 <name>postproc</name>
 <description>postprocessing elements (system install)</description>
 <filename>/usr/lib/gstreamer-0.10/libgstpostproc.so</filename>
 <size>21696</size>
 <m32p>1207247981</m32p>
 <version>0.10.3</version>
 <license>GPL</license>
 <source>gst-ffmpeg</source>
 <package>FFMpeg</package>
 <origin>http://ffmpeg.sourceforge.net/</origin>
 <feature typename="GstElementFactory">
  <name>postproc_default</name>
  <rank>256</rank>
  <longname>LibPostProc default filter</longname>
  <class>Filter/Video</class>
  <description>LibPostProc default filters</description>
  <author>Edward Hervey &lt;edward@fluendo.com&gt;, Mark Nauwelaerts (manauw@skynet.be)</author>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>video/x-raw-yuv, format=(fourcc){ IYUV, I420, YV12 }, width=(int)[ 1, 2147483647 ], height=(int)[ 1, 2147483647 ], framerate=(fraction)[ 0/1, 2147483647/1 ]</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>video/x-raw-yuv, format=(fourcc){ IYUV, I420, YV12 }, width=(int)[ 1, 2147483647 ], height=(int)[ 1, 2147483647 ], framerate=(fraction)[ 0/1, 2147483647/1 ]</caps>
  </padtemplate>
 </feature>
 <feature typename="GstElementFactory">
  <name>postproc_forcequant</name>
  <rank>256</rank>
  <longname>LibPostProc forcequant filter</longname>
  <class>Filter/Video</class>
  <description>LibPostProc force quantizer</description>
  <author>Edward Hervey &lt;edward@fluendo.com&gt;, Mark Nauwelaerts (manauw@skynet.be)</author>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>video/x-raw-yuv, format=(fourcc){ IYUV, I420, YV12 }, width=(int)[ 1, 2147483647 ], height=(int)[ 1, 2147483647 ], framerate=(fraction)[ 0/1, 2147483647/1 ]</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>video/x-raw-yuv, format=(fourcc){ IYUV, I420, YV12 }, width=(int)[ 1, 2147483647 ], height=(int)[ 1, 2147483647 ], framerate=(fraction)[ 0/1, 2147483647/1 ]</caps>
  </padtemplate>
 </feature>
 <feature typename="GstElementFactory">
  <name>postproc_tmpnoise</name>
  <rank>256</rank>
  <longname>LibPostProc tmpnoise filter</longname>
  <class>Filter/Video</class>
  <description>LibPostProc temporal noise reducer</description>
  <author>Edward Hervey &lt;edward@fluendo.com&gt;, Mark Nauwelaerts (manauw@skynet.be)</author>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>video/x-raw-yuv, format=(fourcc){ IYUV, I420, YV12 }, width=(int)[ 1, 2147483647 ], height=(int)[ 1, 2147483647 ], framerate=(fraction)[ 0/1, 2147483647/1 ]</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>video/x-raw-yuv, format=(fourcc){ IYUV, I420, YV12 }, width=(int)[ 1, 2147483647 ], height=(int)[ 1, 2147483647 ], framerate=(fraction)[ 0/1, 2147483647/1 ]</caps>
  </padtemplate>
 </feature>
 <feature typename="GstElementFactory">
  <name>postproc_lowpass5</name>
  <rank>256</rank>
  <longname>LibPostProc lowpass5 filter</longname>
  <class>Filter/Video</class>
  <description>LibPostProc FIR lowpass deinterlacer</description>
  <author>Edward Hervey &lt;edward@fluendo.com&gt;, Mark Nauwelaerts (manauw@skynet.be)</author>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>video/x-raw-yuv, format=(fourcc){ IYUV, I420, YV12 }, width=(int)[ 1, 2147483647 ], height=(int)[ 1, 2147483647 ], framerate=(fraction)[ 0/1, 2147483647/1 ]</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>video/x-raw-yuv, format=(fourcc){ IYUV, I420, YV12 }, width=(int)[ 1, 2147483647 ], height=(int)[ 1, 2147483647 ], framerate=(fraction)[ 0/1, 2147483647/1 ]</caps>
  </padtemplate>
 </feature>
 <feature typename="GstElementFactory">
  <name>postproc_ffmpegdeint</name>
  <rank>256</rank>
  <longname>LibPostProc ffmpegdeint filter</longname>
  <class>Filter/Video</class>
  <description>LibPostProc ffmpeg deinterlacer</description>
  <author>Edward Hervey &lt;edward@fluendo.com&gt;, Mark Nauwelaerts (manauw@skynet.be)</author>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>video/x-raw-yuv, format=(fourcc){ IYUV, I420, YV12 }, width=(int)[ 1, 2147483647 ], height=(int)[ 1, 2147483647 ], framerate=(fraction)[ 0/1, 2147483647/1 ]</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>video/x-raw-yuv, format=(fourcc){ IYUV, I420, YV12 }, width=(int)[ 1, 2147483647 ], height=(int)[ 1, 2147483647 ], framerate=(fraction)[ 0/1, 2147483647/1 ]</caps>
  </padtemplate>
 </feature>
 <feature typename="GstElementFactory">
  <name>postproc_mediandeint</name>
  <rank>256</rank>
  <longname>LibPostProc mediandeint filter</longname>
  <class>Filter/Video</class>
  <description>LibPostProc median deinterlacer</description>
  <author>Edward Hervey &lt;edward@fluendo.com&gt;, Mark Nauwelaerts (manauw@skynet.be)</author>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>video/x-raw-yuv, format=(fourcc){ IYUV, I420, YV12 }, width=(int)[ 1, 2147483647 ], height=(int)[ 1, 2147483647 ], framerate=(fraction)[ 0/1, 2147483647/1 ]</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>video/x-raw-yuv, format=(fourcc){ IYUV, I420, YV12 }, width=(int)[ 1, 2147483647 ], height=(int)[ 1, 2147483647 ], framerate=(fraction)[ 0/1, 2147483647/1 ]</caps>
  </padtemplate>
 </feature>
 <feature typename="GstElementFactory">
  <name>postproc_cubicipoldeint</name>
  <rank>256</rank>
  <longname>LibPostProc cubicipoldeint filter</longname>
  <class>Filter/Video</class>
  <description>LibPostProc cubic interpolation deinterlacer</description>
  <author>Edward Hervey &lt;edward@fluendo.com&gt;, Mark Nauwelaerts (manauw@skynet.be)</author>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>video/x-raw-yuv, format=(fourcc){ IYUV, I420, YV12 }, width=(int)[ 1, 2147483647 ], height=(int)[ 1, 2147483647 ], framerate=(fraction)[ 0/1, 2147483647/1 ]</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>video/x-raw-yuv, format=(fourcc){ IYUV, I420, YV12 }, width=(int)[ 1, 2147483647 ], height=(int)[ 1, 2147483647 ], framerate=(fraction)[ 0/1, 2147483647/1 ]</caps>
  </padtemplate>
 </feature>
 <feature typename="GstElementFactory">
  <name>postproc_linipoldeint</name>
  <rank>256</rank>
  <longname>LibPostProc linipoldeint filter</longname>
  <class>Filter/Video</class>
  <description>LibPostProc linear interpolation deinterlacer</description>
  <author>Edward Hervey &lt;edward@fluendo.com&gt;, Mark Nauwelaerts (manauw@skynet.be)</author>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>video/x-raw-yuv, format=(fourcc){ IYUV, I420, YV12 }, width=(int)[ 1, 2147483647 ], height=(int)[ 1, 2147483647 ], framerate=(fraction)[ 0/1, 2147483647/1 ]</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>video/x-raw-yuv, format=(fourcc){ IYUV, I420, YV12 }, width=(int)[ 1, 2147483647 ], height=(int)[ 1, 2147483647 ], framerate=(fraction)[ 0/1, 2147483647/1 ]</caps>
  </padtemplate>
 </feature>
 <feature typename="GstElementFactory">
  <name>postproc_linblenddeint</name>
  <rank>256</rank>
  <longname>LibPostProc linblenddeint filter</longname>
  <class>Filter/Video</class>
  <description>LibPostProc linear blend interpolater</description>
  <author>Edward Hervey &lt;edward@fluendo.com&gt;, Mark Nauwelaerts (manauw@skynet.be)</author>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>video/x-raw-yuv, format=(fourcc){ IYUV, I420, YV12 }, width=(int)[ 1, 2147483647 ], height=(int)[ 1, 2147483647 ], framerate=(fraction)[ 0/1, 2147483647/1 ]</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>video/x-raw-yuv, format=(fourcc){ IYUV, I420, YV12 }, width=(int)[ 1, 2147483647 ], height=(int)[ 1, 2147483647 ], framerate=(fraction)[ 0/1, 2147483647/1 ]</caps>
  </padtemplate>
 </feature>
 <feature typename="GstElementFactory">
  <name>postproc_autolevels</name>
  <rank>256</rank>
  <longname>LibPostProc autolevels filter</longname>
  <class>Filter/Video</class>
  <description>LibPostProc automatic brightness/contrast filter</description>
  <author>Edward Hervey &lt;edward@fluendo.com&gt;, Mark Nauwelaerts (manauw@skynet.be)</author>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>video/x-raw-yuv, format=(fourcc){ IYUV, I420, YV12 }, width=(int)[ 1, 2147483647 ], height=(int)[ 1, 2147483647 ], framerate=(fraction)[ 0/1, 2147483647/1 ]</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>video/x-raw-yuv, format=(fourcc){ IYUV, I420, YV12 }, width=(int)[ 1, 2147483647 ], height=(int)[ 1, 2147483647 ], framerate=(fraction)[ 0/1, 2147483647/1 ]</caps>
  </padtemplate>
 </feature>
 <feature typename="GstElementFactory">
  <name>postproc_dering</name>
  <rank>256</rank>
  <longname>LibPostProc dering filter</longname>
  <class>Filter/Video</class>
  <description>LibPostProc deringing filter</description>
  <author>Edward Hervey &lt;edward@fluendo.com&gt;, Mark Nauwelaerts (manauw@skynet.be)</author>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>video/x-raw-yuv, format=(fourcc){ IYUV, I420, YV12 }, width=(int)[ 1, 2147483647 ], height=(int)[ 1, 2147483647 ], framerate=(fraction)[ 0/1, 2147483647/1 ]</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>video/x-raw-yuv, format=(fourcc){ IYUV, I420, YV12 }, width=(int)[ 1, 2147483647 ], height=(int)[ 1, 2147483647 ], framerate=(fraction)[ 0/1, 2147483647/1 ]</caps>
  </padtemplate>
 </feature>
 <feature typename="GstElementFactory">
  <name>postproc_avdeblock</name>
  <rank>256</rank>
  <longname>LibPostProc avdeblock filter</longname>
  <class>Filter/Video</class>
  <description>LibPostProc another vertical deblocking filter</description>
  <author>Edward Hervey &lt;edward@fluendo.com&gt;, Mark Nauwelaerts (manauw@skynet.be)</author>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>video/x-raw-yuv, format=(fourcc){ IYUV, I420, YV12 }, width=(int)[ 1, 2147483647 ], height=(int)[ 1, 2147483647 ], framerate=(fraction)[ 0/1, 2147483647/1 ]</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>video/x-raw-yuv, format=(fourcc){ IYUV, I420, YV12 }, width=(int)[ 1, 2147483647 ], height=(int)[ 1, 2147483647 ], framerate=(fraction)[ 0/1, 2147483647/1 ]</caps>
  </padtemplate>
 </feature>
 <feature typename="GstElementFactory">
  <name>postproc_ahdeblock</name>
  <rank>256</rank>
  <longname>LibPostProc ahdeblock filter</longname>
  <class>Filter/Video</class>
  <description>LibPostProc another horizontal deblocking filter</description>
  <author>Edward Hervey &lt;edward@fluendo.com&gt;, Mark Nauwelaerts (manauw@skynet.be)</author>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>video/x-raw-yuv, format=(fourcc){ IYUV, I420, YV12 }, width=(int)[ 1, 2147483647 ], height=(int)[ 1, 2147483647 ], framerate=(fraction)[ 0/1, 2147483647/1 ]</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>video/x-raw-yuv, format=(fourcc){ IYUV, I420, YV12 }, width=(int)[ 1, 2147483647 ], height=(int)[ 1, 2147483647 ], framerate=(fraction)[ 0/1, 2147483647/1 ]</caps>
  </padtemplate>
 </feature>
 <feature typename="GstElementFactory">
  <name>postproc_x1vdeblock</name>
  <rank>256</rank>
  <longname>LibPostProc x1vdeblock filter</longname>
  <class>Filter/Video</class>
  <description>LibPostProc experimental vertical deblocking filter 1</description>
  <author>Edward Hervey &lt;edward@fluendo.com&gt;, Mark Nauwelaerts (manauw@skynet.be)</author>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>video/x-raw-yuv, format=(fourcc){ IYUV, I420, YV12 }, width=(int)[ 1, 2147483647 ], height=(int)[ 1, 2147483647 ], framerate=(fraction)[ 0/1, 2147483647/1 ]</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>video/x-raw-yuv, format=(fourcc){ IYUV, I420, YV12 }, width=(int)[ 1, 2147483647 ], height=(int)[ 1, 2147483647 ], framerate=(fraction)[ 0/1, 2147483647/1 ]</caps>
  </padtemplate>
 </feature>
 <feature typename="GstElementFactory">
  <name>postproc_x1hdeblock</name>
  <rank>256</rank>
  <longname>LibPostProc x1hdeblock filter</longname>
  <class>Filter/Video</class>
  <description>LibPostProc experimental horizontal deblocking filter 1</description>
  <author>Edward Hervey &lt;edward@fluendo.com&gt;, Mark Nauwelaerts (manauw@skynet.be)</author>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>video/x-raw-yuv, format=(fourcc){ IYUV, I420, YV12 }, width=(int)[ 1, 2147483647 ], height=(int)[ 1, 2147483647 ], framerate=(fraction)[ 0/1, 2147483647/1 ]</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>video/x-raw-yuv, format=(fourcc){ IYUV, I420, YV12 }, width=(int)[ 1, 2147483647 ], height=(int)[ 1, 2147483647 ], framerate=(fraction)[ 0/1, 2147483647/1 ]</caps>
  </padtemplate>
 </feature>
 <feature typename="GstElementFactory">
  <name>postproc_vdeblock</name>
  <rank>256</rank>
  <longname>LibPostProc vdeblock filter</longname>
  <class>Filter/Video</class>
  <description>LibPostProc vertical deblocking filter</description>
  <author>Edward Hervey &lt;edward@fluendo.com&gt;, Mark Nauwelaerts (manauw@skynet.be)</author>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>video/x-raw-yuv, format=(fourcc){ IYUV, I420, YV12 }, width=(int)[ 1, 2147483647 ], height=(int)[ 1, 2147483647 ], framerate=(fraction)[ 0/1, 2147483647/1 ]</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>video/x-raw-yuv, format=(fourcc){ IYUV, I420, YV12 }, width=(int)[ 1, 2147483647 ], height=(int)[ 1, 2147483647 ], framerate=(fraction)[ 0/1, 2147483647/1 ]</caps>
  </padtemplate>
 </feature>
 <feature typename="GstElementFactory">
  <name>postproc_hdeblock</name>
  <rank>256</rank>
  <longname>LibPostProc hdeblock filter</longname>
  <class>Filter/Video</class>
  <description>LibPostProc horizontal deblocking filter</description>
  <author>Edward Hervey &lt;edward@fluendo.com&gt;, Mark Nauwelaerts (manauw@skynet.be)</author>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>video/x-raw-yuv, format=(fourcc){ IYUV, I420, YV12 }, width=(int)[ 1, 2147483647 ], height=(int)[ 1, 2147483647 ], framerate=(fraction)[ 0/1, 2147483647/1 ]</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>video/x-raw-yuv, format=(fourcc){ IYUV, I420, YV12 }, width=(int)[ 1, 2147483647 ], height=(int)[ 1, 2147483647 ], framerate=(fraction)[ 0/1, 2147483647/1 ]</caps>
  </padtemplate>
 </feature>
</plugin>
<plugin>
 <name>ffmpeg</name>
 <description>All FFMPEG codecs (system install)</description>
 <filename>/usr/lib/gstreamer-0.10/libgstffmpeg.so</filename>
 <size>184784</size>
 <m32p>1207247981</m32p>
 <version>0.10.3</version>
 <license>LGPL</license>
 <source>gst-ffmpeg</source>
 <package>FFMpeg</package>
 <origin>http://ffmpeg.sourceforge.net/</origin>
 <feature typename="GstElementFactory">
  <name>ffvideoscale</name>
  <longname>FFMPEG Scale element</longname>
  <class>Filter/Converter/Video</class>
  <description>Converts video from one resolution to another</description>
  <author>Luca Ognibene &lt;luogni@tin.it&gt;</author>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>video/x-raw-yuv, format=(fourcc)I420, width=(int)[ 1, 2147483647 ], height=(int)[ 1, 2147483647 ], framerate=(fraction)[ 0/1, 2147483647/1 ]</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>video/x-raw-yuv, format=(fourcc)I420, width=(int)[ 1, 2147483647 ], height=(int)[ 1, 2147483647 ], framerate=(fraction)[ 0/1, 2147483647/1 ]</caps>
  </padtemplate>
 </feature>
 <feature typename="GstElementFactory">
  <name>ffdeinterlace</name>
  <longname>FFMPEG Deinterlace element</longname>
  <class>Filter/Converter/Video</class>
  <description>Deinterlace video</description>
  <author>Luca Ognibene &lt;luogni@tin.it&gt;</author>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>video/x-raw-yuv, format=(fourcc)I420, width=(int)[ 1, 2147483647 ], height=(int)[ 1, 2147483647 ], framerate=(fraction)[ 0/1, 2147483647/1 ]</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>video/x-raw-yuv, format=(fourcc)I420, width=(int)[ 1, 2147483647 ], height=(int)[ 1, 2147483647 ], framerate=(fraction)[ 0/1, 2147483647/1 ]</caps>
  </padtemplate>
 </feature>
 <feature typename="GstElementFactory">
  <name>ffmux_3gp</name>
  <longname>FFMPEG 3gp Muxer</longname>
  <class>Codec/Muxer</class>
  <description>FFMPEG 3gp Muxer</description>
  <author>Wim Taymans &lt;wim.taymans@chello.be&gt;, Ronald Bultje &lt;rbultje@ronald.bitfreak.net&gt;</author>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>application/x-3gp</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>audio_%d</nametemplate>
   <direction>sink</direction>
   <presence>request</presence>
   <caps>audio/AMR, rate=(int)[ 8000, 96000 ], channels=(int)[ 1, 2 ]; audio/AMR-WB, rate=(int)[ 8000, 96000 ], channels=(int)[ 1, 2 ]; audio/mpeg, rate=(int)[ 8000, 96000 ], channels=(int)[ 1, 2 ], mpegversion=(int)4</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>video_%d</nametemplate>
   <direction>sink</direction>
   <presence>request</presence>
   <caps>video/mpeg, width=(int)[ 16, 4096 ], height=(int)[ 16, 4096 ], framerate=(fraction)[ 0/1, 2147483647/1 ], mpegversion=(int)4, systemstream=(boolean)false; video/x-divx, width=(int)[ 16, 4096 ], height=(int)[ 16, 4096 ], framerate=(fraction)[ 0/1, 2147483647/1 ], divxversion=(int)5; video/x-h263, width=(int)352, height=(int)288, framerate=(fraction)[ 0/1, 2147483647/1 ], variant=(string)itu, h263version=(string)h263; video/x-h263, width=(int)704, height=(int)576, framerate=(fraction)[ 0/1, 2147483647/1 ], variant=(string)itu, h263version=(string)h263; video/x-h263, width=(int)176, height=(int)144, framerate=(fraction)[ 0/1, 2147483647/1 ], variant=(string)itu, h263version=(string)h263; video/x-h263, width=(int)1408, height=(int)1152, framerate=(fraction)[ 0/1, 2147483647/1 ], variant=(string)itu, h263version=(string)h263; video/x-h263, width=(int)128, height=(int)96, framerate=(fraction)[ 0/1, 2147483647/1 ], variant=(string)itu, h263version=(string)h263; video/x-h264, width=(int)[ 16, 4096 ], height=(int)[ 16, 4096 ], framerate=(fraction)[ 0/1, 2147483647/1 ]</caps>
  </padtemplate>
  <interface>GstTagSetter</interface>
 </feature>
 <feature typename="GstElementFactory">
  <name>ffmux_3g2</name>
  <longname>FFMPEG 3g2 Muxer</longname>
  <class>Codec/Muxer</class>
  <description>FFMPEG 3g2 Muxer</description>
  <author>Wim Taymans &lt;wim.taymans@chello.be&gt;, Ronald Bultje &lt;rbultje@ronald.bitfreak.net&gt;</author>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>application/x-gst_ff-3g2</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>audio_%d</nametemplate>
   <direction>sink</direction>
   <presence>request</presence>
   <caps>audio/AMR, rate=(int)[ 8000, 96000 ], channels=(int)[ 1, 2 ]; audio/AMR-WB, rate=(int)[ 8000, 96000 ], channels=(int)[ 1, 2 ]; audio/mpeg, rate=(int)[ 8000, 96000 ], channels=(int)[ 1, 2 ], mpegversion=(int)4</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>video_%d</nametemplate>
   <direction>sink</direction>
   <presence>request</presence>
   <caps>video/mpeg, width=(int)[ 16, 4096 ], height=(int)[ 16, 4096 ], framerate=(fraction)[ 0/1, 2147483647/1 ], mpegversion=(int)4, systemstream=(boolean)false; video/x-divx, width=(int)[ 16, 4096 ], height=(int)[ 16, 4096 ], framerate=(fraction)[ 0/1, 2147483647/1 ], divxversion=(int)5; video/x-h263, width=(int)352, height=(int)288, framerate=(fraction)[ 0/1, 2147483647/1 ], variant=(string)itu, h263version=(string)h263; video/x-h263, width=(int)704, height=(int)576, framerate=(fraction)[ 0/1, 2147483647/1 ], variant=(string)itu, h263version=(string)h263; video/x-h263, width=(int)176, height=(int)144, framerate=(fraction)[ 0/1, 2147483647/1 ], variant=(string)itu, h263version=(string)h263; video/x-h263, width=(int)1408, height=(int)1152, framerate=(fraction)[ 0/1, 2147483647/1 ], variant=(string)itu, h263version=(string)h263; video/x-h263, width=(int)128, height=(int)96, framerate=(fraction)[ 0/1, 2147483647/1 ], variant=(string)itu, h263version=(string)h263; video/x-h264, width=(int)[ 16, 4096 ], height=(int)[ 16, 4096 ], framerate=(fraction)[ 0/1, 2147483647/1 ]</caps>
  </padtemplate>
  <interface>GstTagSetter</interface>
 </feature>
 <feature typename="GstElementFactory">
  <name>ffmux_mpegts</name>
  <longname>FFMPEG mpegts Muxer</longname>
  <class>Codec/Muxer</class>
  <description>FFMPEG mpegts Muxer</description>
  <author>Wim Taymans &lt;wim.taymans@chello.be&gt;, Ronald Bultje &lt;rbultje@ronald.bitfreak.net&gt;</author>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>video/mpegts, systemstream=(boolean)true</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>audio_%d</nametemplate>
   <direction>sink</direction>
   <presence>request</presence>
   <caps>audio/mpeg, rate=(int)[ 8000, 96000 ], channels=(int)[ 1, 2 ], mpegversion=(int)1, layer=(int)2; audio/mpeg, rate=(int)[ 8000, 96000 ], channels=(int)[ 1, 2 ], mpegversion=(int)1, layer=(int)3; audio/x-ac3, rate=(int)[ 8000, 96000 ], channels=(int)[ 1, 2 ]; audio/x-dts, rate=(int)[ 8000, 96000 ], channels=(int)[ 1, 2 ]; audio/mpeg, rate=(int)[ 8000, 96000 ], channels=(int)[ 1, 2 ], mpegversion=(int)4</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>video_%d</nametemplate>
   <direction>sink</direction>
   <presence>request</presence>
   <caps>video/mpeg, width=(int)[ 16, 4096 ], height=(int)[ 16, 4096 ], framerate=(fraction)[ 0/1, 2147483647/1 ], mpegversion=(int)1, systemstream=(boolean)false; video/mpeg, width=(int)[ 16, 4096 ], height=(int)[ 16, 4096 ], framerate=(fraction)[ 0/1, 2147483647/1 ], mpegversion=(int)2, systemstream=(boolean)false; video/x-h264, width=(int)[ 16, 4096 ], height=(int)[ 16, 4096 ], framerate=(fraction)[ 0/1, 2147483647/1 ]</caps>
  </padtemplate>
  <interface>GstTagSetter</interface>
 </feature>
 <feature typename="GstElementFactory">
  <name>ffmux_vob</name>
  <longname>FFMPEG vob Muxer</longname>
  <class>Codec/Muxer</class>
  <description>FFMPEG vob Muxer</description>
  <author>Wim Taymans &lt;wim.taymans@chello.be&gt;, Ronald Bultje &lt;rbultje@ronald.bitfreak.net&gt;</author>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>application/x-gst_ff-vob</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>audio_%d</nametemplate>
   <direction>sink</direction>
   <presence>request</presence>
   <caps>audio/mpeg, rate=(int)[ 8000, 96000 ], channels=(int)[ 1, 2 ], mpegversion=(int)1, layer=(int)2; audio/x-ac3, rate=(int)[ 8000, 96000 ], channels=(int)[ 1, 2 ]; audio/x-dts, rate=(int)[ 8000, 96000 ], channels=(int)[ 1, 2 ]</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>video_%d</nametemplate>
   <direction>sink</direction>
   <presence>request</presence>
   <caps>video/mpeg, width=(int)[ 16, 4096 ], height=(int)[ 16, 4096 ], framerate=(fraction)[ 0/1, 2147483647/1 ], mpegversion=(int)2, systemstream=(boolean)false</caps>
  </padtemplate>
  <interface>GstTagSetter</interface>
 </feature>
 <feature typename="GstElementFactory">
  <name>ffmux_mpeg</name>
  <longname>FFMPEG mpeg Muxer</longname>
  <class>Codec/Muxer</class>
  <description>FFMPEG mpeg Muxer</description>
  <author>Wim Taymans &lt;wim.taymans@chello.be&gt;, Ronald Bultje &lt;rbultje@ronald.bitfreak.net&gt;</author>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>video/mpeg, systemstream=(boolean)true</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>audio_%d</nametemplate>
   <direction>sink</direction>
   <presence>request</presence>
   <caps>audio/mpeg, rate=(int)[ 8000, 96000 ], channels=(int)[ 1, 2 ], mpegversion=(int)1, layer=(int)2; audio/mpeg, rate=(int)[ 8000, 96000 ], channels=(int)[ 1, 2 ], mpegversion=(int)1, layer=(int)3</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>video_%d</nametemplate>
   <direction>sink</direction>
   <presence>request</presence>
   <caps>video/mpeg, width=(int)[ 16, 4096 ], height=(int)[ 16, 4096 ], framerate=(fraction)[ 0/1, 2147483647/1 ], mpegversion=(int)1, systemstream=(boolean)false; video/mpeg, width=(int)[ 16, 4096 ], height=(int)[ 16, 4096 ], framerate=(fraction)[ 0/1, 2147483647/1 ], mpegversion=(int)2, systemstream=(boolean)false; video/x-h264, width=(int)[ 16, 4096 ], height=(int)[ 16, 4096 ], framerate=(fraction)[ 0/1, 2147483647/1 ]</caps>
  </padtemplate>
  <interface>GstTagSetter</interface>
 </feature>
 <feature typename="GstElementFactory">
  <name>ffmux_mp4</name>
  <longname>FFMPEG mp4 Muxer</longname>
  <class>Codec/Muxer</class>
  <description>FFMPEG mp4 Muxer</description>
  <author>Wim Taymans &lt;wim.taymans@chello.be&gt;, Ronald Bultje &lt;rbultje@ronald.bitfreak.net&gt;</author>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>video/quicktime</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>audio_%d</nametemplate>
   <direction>sink</direction>
   <presence>request</presence>
   <caps>audio/mpeg, rate=(int)[ 8000, 96000 ], channels=(int)[ 1, 2 ], mpegversion=(int)4; audio/mpeg, rate=(int)[ 8000, 96000 ], channels=(int)[ 1, 2 ], mpegversion=(int)1, layer=(int)3; audio/AMR, rate=(int)[ 8000, 96000 ], channels=(int)[ 1, 2 ]; audio/AMR-WB, rate=(int)[ 8000, 96000 ], channels=(int)[ 1, 2 ]</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>video_%d</nametemplate>
   <direction>sink</direction>
   <presence>request</presence>
   <caps>video/mpeg, width=(int)[ 16, 4096 ], height=(int)[ 16, 4096 ], framerate=(fraction)[ 0/1, 2147483647/1 ], mpegversion=(int)4, systemstream=(boolean)false; video/x-divx, width=(int)[ 16, 4096 ], height=(int)[ 16, 4096 ], framerate=(fraction)[ 0/1, 2147483647/1 ], divxversion=(int)5; video/x-h263, width=(int)352, height=(int)288, framerate=(fraction)[ 0/1, 2147483647/1 ], variant=(string)itu, h263version=(string)h263; video/x-h263, width=(int)704, height=(int)576, framerate=(fraction)[ 0/1, 2147483647/1 ], variant=(string)itu, h263version=(string)h263; video/x-h263, width=(int)176, height=(int)144, framerate=(fraction)[ 0/1, 2147483647/1 ], variant=(string)itu, h263version=(string)h263; video/x-h263, width=(int)1408, height=(int)1152, framerate=(fraction)[ 0/1, 2147483647/1 ], variant=(string)itu, h263version=(string)h263; video/x-h263, width=(int)128, height=(int)96, framerate=(fraction)[ 0/1, 2147483647/1 ], variant=(string)itu, h263version=(string)h263; video/x-h264, width=(int)[ 16, 4096 ], height=(int)[ 16, 4096 ], framerate=(fraction)[ 0/1, 2147483647/1 ]; image/jpeg, width=(int)[ 16, 4096 ], height=(int)[ 16, 4096 ], framerate=(fraction)[ 0/1, 2147483647/1 ]</caps>
  </padtemplate>
  <interface>GstTagSetter</interface>
 </feature>
 <feature typename="GstElementFactory">
  <name>ffmux_mov</name>
  <longname>FFMPEG mov Muxer</longname>
  <class>Codec/Muxer</class>
  <description>FFMPEG mov Muxer</description>
  <author>Wim Taymans &lt;wim.taymans@chello.be&gt;, Ronald Bultje &lt;rbultje@ronald.bitfreak.net&gt;</author>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>video/quicktime</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>audio_%d</nametemplate>
   <direction>sink</direction>
   <presence>request</presence>
   <caps>audio/x-mulaw, rate=(int)[ 8000, 96000 ], channels=(int)[ 1, 2 ]; audio/x-alaw, rate=(int)[ 8000, 96000 ], channels=(int)[ 1, 2 ]; audio/x-adpcm, rate=(int)[ 8000, 96000 ], channels=(int)[ 1, 2 ], layout=(string)quicktime; audio/x-mace, rate=(int)[ 8000, 96000 ], channels=(int)[ 1, 2 ], maceversion=(int)3; audio/x-mace, rate=(int)[ 8000, 96000 ], channels=(int)[ 1, 2 ], maceversion=(int)6; audio/mpeg, rate=(int)[ 8000, 96000 ], channels=(int)[ 1, 2 ], mpegversion=(int)4; audio/AMR, rate=(int)[ 8000, 96000 ], channels=(int)[ 1, 2 ]; audio/AMR-WB, rate=(int)[ 8000, 96000 ], channels=(int)[ 1, 2 ]; audio/x-raw-int, rate=(int)[ 8000, 96000 ], channels=(int)[ 1, 2 ], width=(int)16, depth=(int)16, endianness=(int)4321, signed=(boolean)true; audio/x-raw-int, rate=(int)[ 8000, 96000 ], channels=(int)[ 1, 2 ], width=(int)16, depth=(int)16, endianness=(int)1234, signed=(boolean)true; audio/mpeg, rate=(int)[ 8000, 96000 ], channels=(int)[ 1, 2 ], mpegversion=(int)1, layer=(int)3</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>video_%d</nametemplate>
   <direction>sink</direction>
   <presence>request</presence>
   <caps>video/x-svq, width=(int)[ 16, 4096 ], height=(int)[ 16, 4096 ], framerate=(fraction)[ 0/1, 2147483647/1 ], svqversion=(int)1; video/x-svq, width=(int)[ 16, 4096 ], height=(int)[ 16, 4096 ], framerate=(fraction)[ 0/1, 2147483647/1 ], svqversion=(int)3; video/mpeg, width=(int)[ 16, 4096 ], height=(int)[ 16, 4096 ], framerate=(fraction)[ 0/1, 2147483647/1 ], mpegversion=(int)4, systemstream=(boolean)false; video/x-divx, width=(int)[ 16, 4096 ], height=(int)[ 16, 4096 ], framerate=(fraction)[ 0/1, 2147483647/1 ], divxversion=(int)5; video/x-h263, width=(int)352, height=(int)288, framerate=(fraction)[ 0/1, 2147483647/1 ], variant=(string)itu, h263version=(string)h263; video/x-h263, width=(int)704, height=(int)576, framerate=(fraction)[ 0/1, 2147483647/1 ], variant=(string)itu, h263version=(string)h263; video/x-h263, width=(int)176, height=(int)144, framerate=(fraction)[ 0/1, 2147483647/1 ], variant=(string)itu, h263version=(string)h263; video/x-h263, width=(int)1408, height=(int)1152, framerate=(fraction)[ 0/1, 2147483647/1 ], variant=(string)itu, h263version=(string)h263; video/x-h263, width=(int)128, height=(int)96, framerate=(fraction)[ 0/1, 2147483647/1 ], variant=(string)itu, h263version=(string)h263; video/x-h263, width=(int)[ 16, 4096 ], height=(int)[ 16, 4096 ], framerate=(fraction)[ 0/1, 2147483647/1 ], variant=(string)itu, h263version=(string)h263p; video/x-h264, width=(int)[ 16, 4096 ], height=(int)[ 16, 4096 ], framerate=(fraction)[ 0/1, 2147483647/1 ]; video/x-dv, width=(int)[ 16, 4096 ], height=(int)[ 16, 4096 ], framerate=(fraction)[ 0/1, 2147483647/1 ], systemstream=(boolean)false; image/jpeg, width=(int)[ 16, 4096 ], height=(int)[ 16, 4096 ], framerate=(fraction)[ 0/1, 2147483647/1 ]</caps>
  </padtemplate>
  <interface>GstTagSetter</interface>
 </feature>
 <feature typename="GstElementFactory">
  <name>ffmux_mmf</name>
  <longname>FFMPEG mmf Muxer</longname>
  <class>Codec/Muxer</class>
  <description>FFMPEG mmf Muxer</description>
  <author>Wim Taymans &lt;wim.taymans@chello.be&gt;, Ronald Bultje &lt;rbultje@ronald.bitfreak.net&gt;</author>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>application/x-gst_ff-mmf</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>audio_%d</nametemplate>
   <direction>sink</direction>
   <presence>request</presence>
   <caps>audio/x-adpcm, rate=(int)[ 8000, 96000 ], channels=(int)[ 1, 2 ], layout=(string)yamaha</caps>
  </padtemplate>
  <interface>GstTagSetter</interface>
 </feature>
 <feature typename="GstElementFactory">
  <name>ffmux_flv</name>
  <longname>FFMPEG flv Muxer</longname>
  <class>Codec/Muxer</class>
  <description>FFMPEG flv Muxer</description>
  <author>Wim Taymans &lt;wim.taymans@chello.be&gt;, Ronald Bultje &lt;rbultje@ronald.bitfreak.net&gt;</author>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>video/x-flv</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>audio_%d</nametemplate>
   <direction>sink</direction>
   <presence>request</presence>
   <caps>audio/mpeg, rate=(int){ 44100, 22050, 11025 }, channels=(int)[ 1, 2 ], mpegversion=(int)1, layer=(int)3</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>video_%d</nametemplate>
   <direction>sink</direction>
   <presence>request</presence>
   <caps>video/x-flash-video, width=(int)[ 16, 4096 ], height=(int)[ 16, 4096 ], framerate=(fraction)[ 0/1, 2147483647/1 ], flvversion=(int)1</caps>
  </padtemplate>
  <interface>GstTagSetter</interface>
 </feature>
 <feature typename="GstElementFactory">
  <name>ffmux_dv</name>
  <longname>FFMPEG dv Muxer</longname>
  <class>Codec/Muxer</class>
  <description>FFMPEG dv Muxer</description>
  <author>Wim Taymans &lt;wim.taymans@chello.be&gt;, Ronald Bultje &lt;rbultje@ronald.bitfreak.net&gt;</author>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>video/x-dv, systemstream=(boolean)true</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>audio_%d</nametemplate>
   <direction>sink</direction>
   <presence>request</presence>
   <caps>audio/x-raw-int, rate=(int)[ 8000, 96000 ], channels=(int)[ 1, 2 ], width=(int)16, depth=(int)16, endianness=(int)1234, signed=(boolean)true</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>video_%d</nametemplate>
   <direction>sink</direction>
   <presence>request</presence>
   <caps>video/x-dv, width=(int)[ 16, 4096 ], height=(int)[ 16, 4096 ], framerate=(fraction)[ 0/1, 2147483647/1 ], systemstream=(boolean)false</caps>
  </padtemplate>
  <interface>GstTagSetter</interface>
 </feature>
 <feature typename="GstElementFactory">
  <name>ffmux_asf</name>
  <longname>FFMPEG asf Muxer</longname>
  <class>Codec/Muxer</class>
  <description>FFMPEG asf Muxer</description>
  <author>Wim Taymans &lt;wim.taymans@chello.be&gt;, Ronald Bultje &lt;rbultje@ronald.bitfreak.net&gt;</author>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>video/x-ms-asf</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>audio_%d</nametemplate>
   <direction>sink</direction>
   <presence>request</presence>
   <caps>audio/x-wma, rate=(int)[ 8000, 96000 ], channels=(int)[ 1, 2 ], wmaversion=(int)1, block_align=(int)[ 0, 2147483647 ], bitrate=(int)[ 0, 2147483647 ]; audio/x-wma, rate=(int)[ 8000, 96000 ], channels=(int)[ 1, 2 ], wmaversion=(int)2, block_align=(int)[ 0, 2147483647 ], bitrate=(int)[ 0, 2147483647 ]; audio/mpeg, rate=(int)[ 8000, 96000 ], channels=(int)[ 1, 2 ], mpegversion=(int)1, layer=(int)3</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>video_%d</nametemplate>
   <direction>sink</direction>
   <presence>request</presence>
   <caps>video/x-wmv, width=(int)[ 16, 4096 ], height=(int)[ 16, 4096 ], framerate=(fraction)[ 0/1, 2147483647/1 ], wmvversion=(int)1; video/x-wmv, width=(int)[ 16, 4096 ], height=(int)[ 16, 4096 ], framerate=(fraction)[ 0/1, 2147483647/1 ], wmvversion=(int)2; video/x-msmpeg, width=(int)[ 16, 4096 ], height=(int)[ 16, 4096 ], framerate=(fraction)[ 0/1, 2147483647/1 ], msmpegversion=(int)43</caps>
  </padtemplate>
  <interface>GstTagSetter</interface>
 </feature>
 <feature typename="GstElementFactory">
  <name>ffmux_amr</name>
  <longname>FFMPEG amr Muxer</longname>
  <class>Codec/Muxer</class>
  <description>FFMPEG amr Muxer</description>
  <author>Wim Taymans &lt;wim.taymans@chello.be&gt;, Ronald Bultje &lt;rbultje@ronald.bitfreak.net&gt;</author>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>application/x-gst_ff-amr</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>audio_%d</nametemplate>
   <direction>sink</direction>
   <presence>request</presence>
   <caps>audio/AMR, rate=(int)[ 8000, 96000 ], channels=(int)[ 1, 2 ]; audio/AMR-WB, rate=(int)[ 8000, 96000 ], channels=(int)[ 1, 2 ]</caps>
  </padtemplate>
  <interface>GstTagSetter</interface>
 </feature>
 <feature typename="GstTypeFindFactory">
  <name>fftype_yuv4mpegpipe</name>
  <rank>64</rank>
  <caps>application/x-yuv4mpeg, y4mversion=(int)2</caps>
  <extension>y4m</extension>
 </feature>
 <feature typename="GstElementFactory">
  <name>ffdemux_yuv4mpegpipe</name>
  <rank>64</rank>
  <longname>FFMPEG YUV4MPEG pipe format demuxer</longname>
  <class>Codec/Demuxer</class>
  <description>FFMPEG YUV4MPEG pipe format demuxer</description>
  <author>Wim Taymans &lt;wim@fluendo.com&gt;, Ronald Bultje &lt;rbultje@ronald.bitfreak.net&gt;, Edward Hervey &lt;bilboed@bilboed.com&gt;</author>
  <padtemplate>
   <nametemplate>video_%02d</nametemplate>
   <direction>src</direction>
   <presence>sometimes</presence>
   <caps>ANY</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>audio_%02d</nametemplate>
   <direction>src</direction>
   <presence>sometimes</presence>
   <caps>ANY</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>application/x-yuv4mpeg, y4mversion=(int)2</caps>
  </padtemplate>
 </feature>
 <feature typename="GstTypeFindFactory">
  <name>fftype_wsvqa</name>
  <rank>64</rank>
  <caps>application/x-gst_ff-wsvqa</caps>
 </feature>
 <feature typename="GstElementFactory">
  <name>ffdemux_wsvqa</name>
  <rank>64</rank>
  <longname>FFMPEG Westwood Studios VQA format demuxer</longname>
  <class>Codec/Demuxer</class>
  <description>FFMPEG Westwood Studios VQA format demuxer</description>
  <author>Wim Taymans &lt;wim@fluendo.com&gt;, Ronald Bultje &lt;rbultje@ronald.bitfreak.net&gt;, Edward Hervey &lt;bilboed@bilboed.com&gt;</author>
  <padtemplate>
   <nametemplate>video_%02d</nametemplate>
   <direction>src</direction>
   <presence>sometimes</presence>
   <caps>ANY</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>audio_%02d</nametemplate>
   <direction>src</direction>
   <presence>sometimes</presence>
   <caps>ANY</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>application/x-gst_ff-wsvqa</caps>
  </padtemplate>
 </feature>
 <feature typename="GstTypeFindFactory">
  <name>fftype_wsaud</name>
  <rank>64</rank>
  <caps>application/x-gst_ff-wsaud</caps>
 </feature>
 <feature typename="GstElementFactory">
  <name>ffdemux_wsaud</name>
  <rank>64</rank>
  <longname>FFMPEG Westwood Studios audio format demuxer</longname>
  <class>Codec/Demuxer</class>
  <description>FFMPEG Westwood Studios audio format demuxer</description>
  <author>Wim Taymans &lt;wim@fluendo.com&gt;, Ronald Bultje &lt;rbultje@ronald.bitfreak.net&gt;, Edward Hervey &lt;bilboed@bilboed.com&gt;</author>
  <padtemplate>
   <nametemplate>video_%02d</nametemplate>
   <direction>src</direction>
   <presence>sometimes</presence>
   <caps>ANY</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>audio_%02d</nametemplate>
   <direction>src</direction>
   <presence>sometimes</presence>
   <caps>ANY</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>application/x-gst_ff-wsaud</caps>
  </padtemplate>
 </feature>
 <feature typename="GstTypeFindFactory">
  <name>fftype_wc3movie</name>
  <rank>64</rank>
  <caps>application/x-gst_ff-wc3movie</caps>
 </feature>
 <feature typename="GstElementFactory">
  <name>ffdemux_wc3movie</name>
  <rank>64</rank>
  <longname>FFMPEG Wing Commander III movie format demuxer</longname>
  <class>Codec/Demuxer</class>
  <description>FFMPEG Wing Commander III movie format demuxer</description>
  <author>Wim Taymans &lt;wim@fluendo.com&gt;, Ronald Bultje &lt;rbultje@ronald.bitfreak.net&gt;, Edward Hervey &lt;bilboed@bilboed.com&gt;</author>
  <padtemplate>
   <nametemplate>video_%02d</nametemplate>
   <direction>src</direction>
   <presence>sometimes</presence>
   <caps>ANY</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>audio_%02d</nametemplate>
   <direction>src</direction>
   <presence>sometimes</presence>
   <caps>ANY</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>application/x-gst_ff-wc3movie</caps>
  </padtemplate>
 </feature>
 <feature typename="GstElementFactory">
  <name>ffdemux_wav</name>
  <longname>FFMPEG wav format demuxer</longname>
  <class>Codec/Demuxer</class>
  <description>FFMPEG wav format demuxer</description>
  <author>Wim Taymans &lt;wim@fluendo.com&gt;, Ronald Bultje &lt;rbultje@ronald.bitfreak.net&gt;, Edward Hervey &lt;bilboed@bilboed.com&gt;</author>
  <padtemplate>
   <nametemplate>video_%02d</nametemplate>
   <direction>src</direction>
   <presence>sometimes</presence>
   <caps>ANY</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>audio_%02d</nametemplate>
   <direction>src</direction>
   <presence>sometimes</presence>
   <caps>ANY</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>audio/x-wav</caps>
  </padtemplate>
 </feature>
 <feature typename="GstTypeFindFactory">
  <name>fftype_voc</name>
  <rank>64</rank>
  <caps>application/x-gst_ff-voc</caps>
 </feature>
 <feature typename="GstElementFactory">
  <name>ffdemux_voc</name>
  <rank>64</rank>
  <longname>FFMPEG Creative Voice File format demuxer</longname>
  <class>Codec/Demuxer</class>
  <description>FFMPEG Creative Voice File format demuxer</description>
  <author>Wim Taymans &lt;wim@fluendo.com&gt;, Ronald Bultje &lt;rbultje@ronald.bitfreak.net&gt;, Edward Hervey &lt;bilboed@bilboed.com&gt;</author>
  <padtemplate>
   <nametemplate>video_%02d</nametemplate>
   <direction>src</direction>
   <presence>sometimes</presence>
   <caps>ANY</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>audio_%02d</nametemplate>
   <direction>src</direction>
   <presence>sometimes</presence>
   <caps>ANY</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>application/x-gst_ff-voc</caps>
  </padtemplate>
 </feature>
 <feature typename="GstTypeFindFactory">
  <name>fftype_vmd</name>
  <rank>64</rank>
  <caps>application/x-gst_ff-vmd</caps>
 </feature>
 <feature typename="GstElementFactory">
  <name>ffdemux_vmd</name>
  <rank>64</rank>
  <longname>FFMPEG Sierra VMD format demuxer</longname>
  <class>Codec/Demuxer</class>
  <description>FFMPEG Sierra VMD format demuxer</description>
  <author>Wim Taymans &lt;wim@fluendo.com&gt;, Ronald Bultje &lt;rbultje@ronald.bitfreak.net&gt;, Edward Hervey &lt;bilboed@bilboed.com&gt;</author>
  <padtemplate>
   <nametemplate>video_%02d</nametemplate>
   <direction>src</direction>
   <presence>sometimes</presence>
   <caps>ANY</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>audio_%02d</nametemplate>
   <direction>src</direction>
   <presence>sometimes</presence>
   <caps>ANY</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>application/x-gst_ff-vmd</caps>
  </padtemplate>
 </feature>
 <feature typename="GstTypeFindFactory">
  <name>fftype_video4linux</name>
  <caps>application/x-gst_ff-video4linux</caps>
 </feature>
 <feature typename="GstElementFactory">
  <name>ffdemux_video4linux</name>
  <longname>FFMPEG video grab demuxer</longname>
  <class>Codec/Demuxer</class>
  <description>FFMPEG video grab demuxer</description>
  <author>Wim Taymans &lt;wim@fluendo.com&gt;, Ronald Bultje &lt;rbultje@ronald.bitfreak.net&gt;, Edward Hervey &lt;bilboed@bilboed.com&gt;</author>
  <padtemplate>
   <nametemplate>video_%02d</nametemplate>
   <direction>src</direction>
   <presence>sometimes</presence>
   <caps>ANY</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>audio_%02d</nametemplate>
   <direction>src</direction>
   <presence>sometimes</presence>
   <caps>ANY</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>application/x-gst_ff-video4linux</caps>
  </padtemplate>
 </feature>
 <feature typename="GstTypeFindFactory">
  <name>fftype_video4linux2</name>
  <caps>application/x-gst_ff-video4linux2</caps>
 </feature>
 <feature typename="GstElementFactory">
  <name>ffdemux_video4linux2</name>
  <longname>FFMPEG video grab demuxer</longname>
  <class>Codec/Demuxer</class>
  <description>FFMPEG video grab demuxer</description>
  <author>Wim Taymans &lt;wim@fluendo.com&gt;, Ronald Bultje &lt;rbultje@ronald.bitfreak.net&gt;, Edward Hervey &lt;bilboed@bilboed.com&gt;</author>
  <padtemplate>
   <nametemplate>video_%02d</nametemplate>
   <direction>src</direction>
   <presence>sometimes</presence>
   <caps>ANY</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>audio_%02d</nametemplate>
   <direction>src</direction>
   <presence>sometimes</presence>
   <caps>ANY</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>application/x-gst_ff-video4linux2</caps>
  </padtemplate>
 </feature>
 <feature typename="GstElementFactory">
  <name>ffdemux_tta</name>
  <rank>64</rank>
  <longname>FFMPEG true-audio demuxer</longname>
  <class>Codec/Demuxer</class>
  <description>FFMPEG true-audio demuxer</description>
  <author>Wim Taymans &lt;wim@fluendo.com&gt;, Ronald Bultje &lt;rbultje@ronald.bitfreak.net&gt;, Edward Hervey &lt;bilboed@bilboed.com&gt;</author>
  <padtemplate>
   <nametemplate>video_%02d</nametemplate>
   <direction>src</direction>
   <presence>sometimes</presence>
   <caps>ANY</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>audio_%02d</nametemplate>
   <direction>src</direction>
   <presence>sometimes</presence>
   <caps>ANY</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>audio/x-ttafile</caps>
  </padtemplate>
 </feature>
 <feature typename="GstTypeFindFactory">
  <name>fftype_tiertexseq</name>
  <caps>application/x-gst_ff-tiertexseq</caps>
 </feature>
 <feature typename="GstElementFactory">
  <name>ffdemux_tiertexseq</name>
  <longname>FFMPEG Tiertex Limited SEQ format demuxer</longname>
  <class>Codec/Demuxer</class>
  <description>FFMPEG Tiertex Limited SEQ format demuxer</description>
  <author>Wim Taymans &lt;wim@fluendo.com&gt;, Ronald Bultje &lt;rbultje@ronald.bitfreak.net&gt;, Edward Hervey &lt;bilboed@bilboed.com&gt;</author>
  <padtemplate>
   <nametemplate>video_%02d</nametemplate>
   <direction>src</direction>
   <presence>sometimes</presence>
   <caps>ANY</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>audio_%02d</nametemplate>
   <direction>src</direction>
   <presence>sometimes</presence>
   <caps>ANY</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>application/x-gst_ff-tiertexseq</caps>
  </padtemplate>
 </feature>
 <feature typename="GstTypeFindFactory">
  <name>fftype_swf</name>
  <rank>64</rank>
  <caps>application/x-shockwave-flash</caps>
 </feature>
 <feature typename="GstElementFactory">
  <name>ffdemux_swf</name>
  <rank>64</rank>
  <longname>FFMPEG Flash format demuxer</longname>
  <class>Codec/Demuxer</class>
  <description>FFMPEG Flash format demuxer</description>
  <author>Wim Taymans &lt;wim@fluendo.com&gt;, Ronald Bultje &lt;rbultje@ronald.bitfreak.net&gt;, Edward Hervey &lt;bilboed@bilboed.com&gt;</author>
  <padtemplate>
   <nametemplate>video_%02d</nametemplate>
   <direction>src</direction>
   <presence>sometimes</presence>
   <caps>ANY</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>audio_%02d</nametemplate>
   <direction>src</direction>
   <presence>sometimes</presence>
   <caps>ANY</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>application/x-shockwave-flash</caps>
  </padtemplate>
 </feature>
 <feature typename="GstTypeFindFactory">
  <name>fftype_psxstr</name>
  <rank>64</rank>
  <caps>application/x-gst_ff-psxstr</caps>
 </feature>
 <feature typename="GstElementFactory">
  <name>ffdemux_psxstr</name>
  <rank>64</rank>
  <longname>FFMPEG Sony Playstation STR format demuxer</longname>
  <class>Codec/Demuxer</class>
  <description>FFMPEG Sony Playstation STR format demuxer</description>
  <author>Wim Taymans &lt;wim@fluendo.com&gt;, Ronald Bultje &lt;rbultje@ronald.bitfreak.net&gt;, Edward Hervey &lt;bilboed@bilboed.com&gt;</author>
  <padtemplate>
   <nametemplate>video_%02d</nametemplate>
   <direction>src</direction>
   <presence>sometimes</presence>
   <caps>ANY</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>audio_%02d</nametemplate>
   <direction>src</direction>
   <presence>sometimes</presence>
   <caps>ANY</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>application/x-gst_ff-psxstr</caps>
  </padtemplate>
 </feature>
 <feature typename="GstTypeFindFactory">
  <name>fftype_sol</name>
  <rank>64</rank>
  <caps>application/x-gst_ff-sol</caps>
 </feature>
 <feature typename="GstElementFactory">
  <name>ffdemux_sol</name>
  <rank>64</rank>
  <longname>FFMPEG Sierra SOL Format demuxer</longname>
  <class>Codec/Demuxer</class>
  <description>FFMPEG Sierra SOL Format demuxer</description>
  <author>Wim Taymans &lt;wim@fluendo.com&gt;, Ronald Bultje &lt;rbultje@ronald.bitfreak.net&gt;, Edward Hervey &lt;bilboed@bilboed.com&gt;</author>
  <padtemplate>
   <nametemplate>video_%02d</nametemplate>
   <direction>src</direction>
   <presence>sometimes</presence>
   <caps>ANY</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>audio_%02d</nametemplate>
   <direction>src</direction>
   <presence>sometimes</presence>
   <caps>ANY</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>application/x-gst_ff-sol</caps>
  </padtemplate>
 </feature>
 <feature typename="GstTypeFindFactory">
  <name>fftype_smk</name>
  <rank>64</rank>
  <caps>application/x-gst_ff-smk</caps>
 </feature>
 <feature typename="GstElementFactory">
  <name>ffdemux_smk</name>
  <rank>64</rank>
  <longname>FFMPEG Smacker Video demuxer</longname>
  <class>Codec/Demuxer</class>
  <description>FFMPEG Smacker Video demuxer</description>
  <author>Wim Taymans &lt;wim@fluendo.com&gt;, Ronald Bultje &lt;rbultje@ronald.bitfreak.net&gt;, Edward Hervey &lt;bilboed@bilboed.com&gt;</author>
  <padtemplate>
   <nametemplate>video_%02d</nametemplate>
   <direction>src</direction>
   <presence>sometimes</presence>
   <caps>ANY</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>audio_%02d</nametemplate>
   <direction>src</direction>
   <presence>sometimes</presence>
   <caps>ANY</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>application/x-gst_ff-smk</caps>
  </padtemplate>
 </feature>
 <feature typename="GstTypeFindFactory">
  <name>fftype_film_cpk</name>
  <rank>64</rank>
  <caps>application/x-gst_ff-film_cpk</caps>
 </feature>
 <feature typename="GstElementFactory">
  <name>ffdemux_film_cpk</name>
  <rank>64</rank>
  <longname>FFMPEG Sega FILM/CPK format demuxer</longname>
  <class>Codec/Demuxer</class>
  <description>FFMPEG Sega FILM/CPK format demuxer</description>
  <author>Wim Taymans &lt;wim@fluendo.com&gt;, Ronald Bultje &lt;rbultje@ronald.bitfreak.net&gt;, Edward Hervey &lt;bilboed@bilboed.com&gt;</author>
  <padtemplate>
   <nametemplate>video_%02d</nametemplate>
   <direction>src</direction>
   <presence>sometimes</presence>
   <caps>ANY</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>audio_%02d</nametemplate>
   <direction>src</direction>
   <presence>sometimes</presence>
   <caps>ANY</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>application/x-gst_ff-film_cpk</caps>
  </padtemplate>
 </feature>
 <feature typename="GstTypeFindFactory">
  <name>fftype_RoQ</name>
  <rank>64</rank>
  <caps>application/x-gst_ff-RoQ</caps>
 </feature>
 <feature typename="GstElementFactory">
  <name>ffdemux_RoQ</name>
  <rank>64</rank>
  <longname>FFMPEG Id RoQ format demuxer</longname>
  <class>Codec/Demuxer</class>
  <description>FFMPEG Id RoQ format demuxer</description>
  <author>Wim Taymans &lt;wim@fluendo.com&gt;, Ronald Bultje &lt;rbultje@ronald.bitfreak.net&gt;, Edward Hervey &lt;bilboed@bilboed.com&gt;</author>
  <padtemplate>
   <nametemplate>video_%02d</nametemplate>
   <direction>src</direction>
   <presence>sometimes</presence>
   <caps>ANY</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>audio_%02d</nametemplate>
   <direction>src</direction>
   <presence>sometimes</presence>
   <caps>ANY</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>application/x-gst_ff-RoQ</caps>
  </padtemplate>
 </feature>
 <feature typename="GstElementFactory">
  <name>ffdemux_rm</name>
  <longname>FFMPEG rm format demuxer</longname>
  <class>Codec/Demuxer</class>
  <description>FFMPEG rm format demuxer</description>
  <author>Wim Taymans &lt;wim@fluendo.com&gt;, Ronald Bultje &lt;rbultje@ronald.bitfreak.net&gt;, Edward Hervey &lt;bilboed@bilboed.com&gt;</author>
  <padtemplate>
   <nametemplate>video_%02d</nametemplate>
   <direction>src</direction>
   <presence>sometimes</presence>
   <caps>ANY</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>audio_%02d</nametemplate>
   <direction>src</direction>
   <presence>sometimes</presence>
   <caps>ANY</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>application/x-pn-realmedia, systemstream=(boolean)true</caps>
  </padtemplate>
 </feature>
 <feature typename="GstTypeFindFactory">
  <name>fftype_ogg</name>
  <caps>application/ogg</caps>
  <extension>ogg</extension>
 </feature>
 <feature typename="GstElementFactory">
  <name>ffdemux_ogg</name>
  <longname>FFMPEG Ogg demuxer</longname>
  <class>Codec/Demuxer</class>
  <description>FFMPEG Ogg demuxer</description>
  <author>Wim Taymans &lt;wim@fluendo.com&gt;, Ronald Bultje &lt;rbultje@ronald.bitfreak.net&gt;, Edward Hervey &lt;bilboed@bilboed.com&gt;</author>
  <padtemplate>
   <nametemplate>video_%02d</nametemplate>
   <direction>src</direction>
   <presence>sometimes</presence>
   <caps>ANY</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>audio_%02d</nametemplate>
   <direction>src</direction>
   <presence>sometimes</presence>
   <caps>ANY</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>application/ogg</caps>
  </padtemplate>
 </feature>
 <feature typename="GstTypeFindFactory">
  <name>fftype_nuv</name>
  <rank>64</rank>
  <caps>application/x-gst_ff-nuv</caps>
 </feature>
 <feature typename="GstElementFactory">
  <name>ffdemux_nuv</name>
  <rank>64</rank>
  <longname>FFMPEG NuppelVideo format demuxer</longname>
  <class>Codec/Demuxer</class>
  <description>FFMPEG NuppelVideo format demuxer</description>
  <author>Wim Taymans &lt;wim@fluendo.com&gt;, Ronald Bultje &lt;rbultje@ronald.bitfreak.net&gt;, Edward Hervey &lt;bilboed@bilboed.com&gt;</author>
  <padtemplate>
   <nametemplate>video_%02d</nametemplate>
   <direction>src</direction>
   <presence>sometimes</presence>
   <caps>ANY</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>audio_%02d</nametemplate>
   <direction>src</direction>
   <presence>sometimes</presence>
   <caps>ANY</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>application/x-gst_ff-nuv</caps>
  </padtemplate>
 </feature>
 <feature typename="GstTypeFindFactory">
  <name>fftype_nut</name>
  <rank>64</rank>
  <caps>application/x-gst_ff-nut</caps>
  <extension>nut</extension>
 </feature>
 <feature typename="GstElementFactory">
  <name>ffdemux_nut</name>
  <rank>64</rank>
  <longname>FFMPEG nut format demuxer</longname>
  <class>Codec/Demuxer</class>
  <description>FFMPEG nut format demuxer</description>
  <author>Wim Taymans &lt;wim@fluendo.com&gt;, Ronald Bultje &lt;rbultje@ronald.bitfreak.net&gt;, Edward Hervey &lt;bilboed@bilboed.com&gt;</author>
  <padtemplate>
   <nametemplate>video_%02d</nametemplate>
   <direction>src</direction>
   <presence>sometimes</presence>
   <caps>ANY</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>audio_%02d</nametemplate>
   <direction>src</direction>
   <presence>sometimes</presence>
   <caps>ANY</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>application/x-gst_ff-nut</caps>
  </padtemplate>
 </feature>
 <feature typename="GstTypeFindFactory">
  <name>fftype_nsv</name>
  <rank>64</rank>
  <caps>application/x-gst_ff-nsv</caps>
 </feature>
 <feature typename="GstElementFactory">
  <name>ffdemux_nsv</name>
  <rank>64</rank>
  <longname>FFMPEG NullSoft Video format demuxer</longname>
  <class>Codec/Demuxer</class>
  <description>FFMPEG NullSoft Video format demuxer</description>
  <author>Wim Taymans &lt;wim@fluendo.com&gt;, Ronald Bultje &lt;rbultje@ronald.bitfreak.net&gt;, Edward Hervey &lt;bilboed@bilboed.com&gt;</author>
  <padtemplate>
   <nametemplate>video_%02d</nametemplate>
   <direction>src</direction>
   <presence>sometimes</presence>
   <caps>ANY</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>audio_%02d</nametemplate>
   <direction>src</direction>
   <presence>sometimes</presence>
   <caps>ANY</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>application/x-gst_ff-nsv</caps>
  </padtemplate>
 </feature>
 <feature typename="GstTypeFindFactory">
  <name>fftype_mxf</name>
  <rank>64</rank>
  <caps>application/mxf</caps>
 </feature>
 <feature typename="GstElementFactory">
  <name>ffdemux_mxf</name>
  <rank>64</rank>
  <longname>FFMPEG MXF format demuxer</longname>
  <class>Codec/Demuxer</class>
  <description>FFMPEG MXF format demuxer</description>
  <author>Wim Taymans &lt;wim@fluendo.com&gt;, Ronald Bultje &lt;rbultje@ronald.bitfreak.net&gt;, Edward Hervey &lt;bilboed@bilboed.com&gt;</author>
  <padtemplate>
   <nametemplate>video_%02d</nametemplate>
   <direction>src</direction>
   <presence>sometimes</presence>
   <caps>ANY</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>audio_%02d</nametemplate>
   <direction>src</direction>
   <presence>sometimes</presence>
   <caps>ANY</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>application/mxf</caps>
  </padtemplate>
 </feature>
 <feature typename="GstTypeFindFactory">
  <name>fftype_MTV</name>
  <caps>application/x-gst_ff-MTV</caps>
 </feature>
 <feature typename="GstElementFactory">
  <name>ffdemux_MTV</name>
  <longname>FFMPEG MTV format demuxer</longname>
  <class>Codec/Demuxer</class>
  <description>FFMPEG MTV format demuxer</description>
  <author>Wim Taymans &lt;wim@fluendo.com&gt;, Ronald Bultje &lt;rbultje@ronald.bitfreak.net&gt;, Edward Hervey &lt;bilboed@bilboed.com&gt;</author>
  <padtemplate>
   <nametemplate>video_%02d</nametemplate>
   <direction>src</direction>
   <presence>sometimes</presence>
   <caps>ANY</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>audio_%02d</nametemplate>
   <direction>src</direction>
   <presence>sometimes</presence>
   <caps>ANY</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>application/x-gst_ff-MTV</caps>
  </padtemplate>
 </feature>
 <feature typename="GstTypeFindFactory">
  <name>fftype_mpegts</name>
  <caps>video/mpegts, systemstream=(boolean)true</caps>
 </feature>
 <feature typename="GstElementFactory">
  <name>ffdemux_mpegts</name>
  <longname>FFMPEG MPEG2 transport stream format demuxer</longname>
  <class>Codec/Demuxer</class>
  <description>FFMPEG MPEG2 transport stream format demuxer</description>
  <author>Wim Taymans &lt;wim@fluendo.com&gt;, Ronald Bultje &lt;rbultje@ronald.bitfreak.net&gt;, Edward Hervey &lt;bilboed@bilboed.com&gt;</author>
  <padtemplate>
   <nametemplate>video_%02d</nametemplate>
   <direction>src</direction>
   <presence>sometimes</presence>
   <caps>ANY</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>audio_%02d</nametemplate>
   <direction>src</direction>
   <presence>sometimes</presence>
   <caps>ANY</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>video/mpegts, systemstream=(boolean)true</caps>
  </padtemplate>
 </feature>
 <feature typename="GstElementFactory">
  <name>ffdemux_mpeg</name>
  <longname>FFMPEG MPEG PS format demuxer</longname>
  <class>Codec/Demuxer</class>
  <description>FFMPEG MPEG PS format demuxer</description>
  <author>Wim Taymans &lt;wim@fluendo.com&gt;, Ronald Bultje &lt;rbultje@ronald.bitfreak.net&gt;, Edward Hervey &lt;bilboed@bilboed.com&gt;</author>
  <padtemplate>
   <nametemplate>video_%02d</nametemplate>
   <direction>src</direction>
   <presence>sometimes</presence>
   <caps>ANY</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>audio_%02d</nametemplate>
   <direction>src</direction>
   <presence>sometimes</presence>
   <caps>ANY</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>video/mpeg, systemstream=(boolean)true</caps>
  </padtemplate>
 </feature>
 <feature typename="GstTypeFindFactory">
  <name>fftype_mpc</name>
  <caps>application/x-gst_ff-mpc</caps>
  <extension>mpc</extension>
 </feature>
 <feature typename="GstElementFactory">
  <name>ffdemux_mpc</name>
  <longname>FFMPEG musepack demuxer</longname>
  <class>Codec/Demuxer</class>
  <description>FFMPEG musepack demuxer</description>
  <author>Wim Taymans &lt;wim@fluendo.com&gt;, Ronald Bultje &lt;rbultje@ronald.bitfreak.net&gt;, Edward Hervey &lt;bilboed@bilboed.com&gt;</author>
  <padtemplate>
   <nametemplate>video_%02d</nametemplate>
   <direction>src</direction>
   <presence>sometimes</presence>
   <caps>ANY</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>audio_%02d</nametemplate>
   <direction>src</direction>
   <presence>sometimes</presence>
   <caps>ANY</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>application/x-gst_ff-mpc</caps>
  </padtemplate>
 </feature>
 <feature typename="GstElementFactory">
  <name>ffdemux_mp3</name>
  <longname>FFMPEG MPEG audio demuxer</longname>
  <class>Codec/Demuxer</class>
  <description>FFMPEG MPEG audio demuxer</description>
  <author>Wim Taymans &lt;wim@fluendo.com&gt;, Ronald Bultje &lt;rbultje@ronald.bitfreak.net&gt;, Edward Hervey &lt;bilboed@bilboed.com&gt;</author>
  <padtemplate>
   <nametemplate>video_%02d</nametemplate>
   <direction>src</direction>
   <presence>sometimes</presence>
   <caps>ANY</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>audio_%02d</nametemplate>
   <direction>src</direction>
   <presence>sometimes</presence>
   <caps>ANY</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>application/x-id3</caps>
  </padtemplate>
 </feature>
 <feature typename="GstElementFactory">
  <name>ffdemux_mov_mp4_m4a_3gp_3g2_mj2</name>
  <longname>FFMPEG QuickTime/MPEG4/Motion JPEG 2000 format demuxer</longname>
  <class>Codec/Demuxer</class>
  <description>FFMPEG QuickTime/MPEG4/Motion JPEG 2000 format demuxer</description>
  <author>Wim Taymans &lt;wim@fluendo.com&gt;, Ronald Bultje &lt;rbultje@ronald.bitfreak.net&gt;, Edward Hervey &lt;bilboed@bilboed.com&gt;</author>
  <padtemplate>
   <nametemplate>video_%02d</nametemplate>
   <direction>src</direction>
   <presence>sometimes</presence>
   <caps>ANY</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>audio_%02d</nametemplate>
   <direction>src</direction>
   <presence>sometimes</presence>
   <caps>ANY</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>application/x-gst_ff-mov_mp4_m4a_3gp_3g2_mj2</caps>
  </padtemplate>
 </feature>
 <feature typename="GstTypeFindFactory">
  <name>fftype_mmf</name>
  <rank>64</rank>
  <caps>application/x-gst_ff-mmf</caps>
 </feature>
 <feature typename="GstElementFactory">
  <name>ffdemux_mmf</name>
  <rank>64</rank>
  <longname>FFMPEG mmf format demuxer</longname>
  <class>Codec/Demuxer</class>
  <description>FFMPEG mmf format demuxer</description>
  <author>Wim Taymans &lt;wim@fluendo.com&gt;, Ronald Bultje &lt;rbultje@ronald.bitfreak.net&gt;, Edward Hervey &lt;bilboed@bilboed.com&gt;</author>
  <padtemplate>
   <nametemplate>video_%02d</nametemplate>
   <direction>src</direction>
   <presence>sometimes</presence>
   <caps>ANY</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>audio_%02d</nametemplate>
   <direction>src</direction>
   <presence>sometimes</presence>
   <caps>ANY</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>application/x-gst_ff-mmf</caps>
  </padtemplate>
 </feature>
 <feature typename="GstTypeFindFactory">
  <name>fftype_mm</name>
  <rank>64</rank>
  <caps>application/x-gst_ff-mm</caps>
 </feature>
 <feature typename="GstElementFactory">
  <name>ffdemux_mm</name>
  <rank>64</rank>
  <longname>FFMPEG American Laser Games MM format demuxer</longname>
  <class>Codec/Demuxer</class>
  <description>FFMPEG American Laser Games MM format demuxer</description>
  <author>Wim Taymans &lt;wim@fluendo.com&gt;, Ronald Bultje &lt;rbultje@ronald.bitfreak.net&gt;, Edward Hervey &lt;bilboed@bilboed.com&gt;</author>
  <padtemplate>
   <nametemplate>video_%02d</nametemplate>
   <direction>src</direction>
   <presence>sometimes</presence>
   <caps>ANY</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>audio_%02d</nametemplate>
   <direction>src</direction>
   <presence>sometimes</presence>
   <caps>ANY</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>application/x-gst_ff-mm</caps>
  </padtemplate>
 </feature>
 <feature typename="GstElementFactory">
  <name>ffdemux_matroska</name>
  <longname>FFMPEG Matroska file format demuxer</longname>
  <class>Codec/Demuxer</class>
  <description>FFMPEG Matroska file format demuxer</description>
  <author>Wim Taymans &lt;wim@fluendo.com&gt;, Ronald Bultje &lt;rbultje@ronald.bitfreak.net&gt;, Edward Hervey &lt;bilboed@bilboed.com&gt;</author>
  <padtemplate>
   <nametemplate>video_%02d</nametemplate>
   <direction>src</direction>
   <presence>sometimes</presence>
   <caps>ANY</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>audio_%02d</nametemplate>
   <direction>src</direction>
   <presence>sometimes</presence>
   <caps>ANY</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>video/x-matroska</caps>
  </padtemplate>
 </feature>
 <feature typename="GstTypeFindFactory">
  <name>fftype_ipmovie</name>
  <rank>64</rank>
  <caps>application/x-gst_ff-ipmovie</caps>
 </feature>
 <feature typename="GstElementFactory">
  <name>ffdemux_ipmovie</name>
  <rank>64</rank>
  <longname>FFMPEG Interplay MVE format demuxer</longname>
  <class>Codec/Demuxer</class>
  <description>FFMPEG Interplay MVE format demuxer</description>
  <author>Wim Taymans &lt;wim@fluendo.com&gt;, Ronald Bultje &lt;rbultje@ronald.bitfreak.net&gt;, Edward Hervey &lt;bilboed@bilboed.com&gt;</author>
  <padtemplate>
   <nametemplate>video_%02d</nametemplate>
   <direction>src</direction>
   <presence>sometimes</presence>
   <caps>ANY</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>audio_%02d</nametemplate>
   <direction>src</direction>
   <presence>sometimes</presence>
   <caps>ANY</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>application/x-gst_ff-ipmovie</caps>
  </padtemplate>
 </feature>
 <feature typename="GstTypeFindFactory">
  <name>fftype_ingenient</name>
  <rank>64</rank>
  <caps>application/x-gst_ff-ingenient</caps>
  <extension>cgi</extension>
 </feature>
 <feature typename="GstElementFactory">
  <name>ffdemux_ingenient</name>
  <rank>64</rank>
  <longname>FFMPEG Ingenient MJPEG demuxer</longname>
  <class>Codec/Demuxer</class>
  <description>FFMPEG Ingenient MJPEG demuxer</description>
  <author>Wim Taymans &lt;wim@fluendo.com&gt;, Ronald Bultje &lt;rbultje@ronald.bitfreak.net&gt;, Edward Hervey &lt;bilboed@bilboed.com&gt;</author>
  <padtemplate>
   <nametemplate>video_%02d</nametemplate>
   <direction>src</direction>
   <presence>sometimes</presence>
   <caps>ANY</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>audio_%02d</nametemplate>
   <direction>src</direction>
   <presence>sometimes</presence>
   <caps>ANY</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>application/x-gst_ff-ingenient</caps>
  </padtemplate>
 </feature>
 <feature typename="GstTypeFindFactory">
  <name>fftype_idcin</name>
  <rank>64</rank>
  <caps>application/x-gst_ff-idcin</caps>
 </feature>
 <feature typename="GstElementFactory">
  <name>ffdemux_idcin</name>
  <rank>64</rank>
  <longname>FFMPEG Id CIN format demuxer</longname>
  <class>Codec/Demuxer</class>
  <description>FFMPEG Id CIN format demuxer</description>
  <author>Wim Taymans &lt;wim@fluendo.com&gt;, Ronald Bultje &lt;rbultje@ronald.bitfreak.net&gt;, Edward Hervey &lt;bilboed@bilboed.com&gt;</author>
  <padtemplate>
   <nametemplate>video_%02d</nametemplate>
   <direction>src</direction>
   <presence>sometimes</presence>
   <caps>ANY</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>audio_%02d</nametemplate>
   <direction>src</direction>
   <presence>sometimes</presence>
   <caps>ANY</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>application/x-gst_ff-idcin</caps>
  </padtemplate>
 </feature>
 <feature typename="GstTypeFindFactory">
  <name>fftype_gxf</name>
  <rank>64</rank>
  <caps>application/gxf</caps>
 </feature>
 <feature typename="GstElementFactory">
  <name>ffdemux_gxf</name>
  <rank>64</rank>
  <longname>FFMPEG GXF format demuxer</longname>
  <class>Codec/Demuxer</class>
  <description>FFMPEG GXF format demuxer</description>
  <author>Wim Taymans &lt;wim@fluendo.com&gt;, Ronald Bultje &lt;rbultje@ronald.bitfreak.net&gt;, Edward Hervey &lt;bilboed@bilboed.com&gt;</author>
  <padtemplate>
   <nametemplate>video_%02d</nametemplate>
   <direction>src</direction>
   <presence>sometimes</presence>
   <caps>ANY</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>audio_%02d</nametemplate>
   <direction>src</direction>
   <presence>sometimes</presence>
   <caps>ANY</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>application/gxf</caps>
  </padtemplate>
 </feature>
 <feature typename="GstTypeFindFactory">
  <name>fftype_gif</name>
  <caps>image/gif</caps>
 </feature>
 <feature typename="GstElementFactory">
  <name>ffdemux_gif</name>
  <longname>FFMPEG gif format demuxer</longname>
  <class>Codec/Demuxer</class>
  <description>FFMPEG gif format demuxer</description>
  <author>Wim Taymans &lt;wim@fluendo.com&gt;, Ronald Bultje &lt;rbultje@ronald.bitfreak.net&gt;, Edward Hervey &lt;bilboed@bilboed.com&gt;</author>
  <padtemplate>
   <nametemplate>video_%02d</nametemplate>
   <direction>src</direction>
   <presence>sometimes</presence>
   <caps>ANY</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>audio_%02d</nametemplate>
   <direction>src</direction>
   <presence>sometimes</presence>
   <caps>ANY</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>image/gif</caps>
  </padtemplate>
 </feature>
 <feature typename="GstTypeFindFactory">
  <name>fftype_4xm</name>
  <rank>64</rank>
  <caps>video/x-4xm</caps>
 </feature>
 <feature typename="GstElementFactory">
  <name>ffdemux_4xm</name>
  <rank>64</rank>
  <longname>FFMPEG 4X Technologies format demuxer</longname>
  <class>Codec/Demuxer</class>
  <description>FFMPEG 4X Technologies format demuxer</description>
  <author>Wim Taymans &lt;wim@fluendo.com&gt;, Ronald Bultje &lt;rbultje@ronald.bitfreak.net&gt;, Edward Hervey &lt;bilboed@bilboed.com&gt;</author>
  <padtemplate>
   <nametemplate>video_%02d</nametemplate>
   <direction>src</direction>
   <presence>sometimes</presence>
   <caps>ANY</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>audio_%02d</nametemplate>
   <direction>src</direction>
   <presence>sometimes</presence>
   <caps>ANY</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>video/x-4xm</caps>
  </padtemplate>
 </feature>
 <feature typename="GstTypeFindFactory">
  <name>fftype_flv</name>
  <rank>64</rank>
  <caps>video/x-flv</caps>
  <extension>flv</extension>
 </feature>
 <feature typename="GstElementFactory">
  <name>ffdemux_flv</name>
  <rank>64</rank>
  <longname>FFMPEG flv format demuxer</longname>
  <class>Codec/Demuxer</class>
  <description>FFMPEG flv format demuxer</description>
  <author>Wim Taymans &lt;wim@fluendo.com&gt;, Ronald Bultje &lt;rbultje@ronald.bitfreak.net&gt;, Edward Hervey &lt;bilboed@bilboed.com&gt;</author>
  <padtemplate>
   <nametemplate>video_%02d</nametemplate>
   <direction>src</direction>
   <presence>sometimes</presence>
   <caps>ANY</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>audio_%02d</nametemplate>
   <direction>src</direction>
   <presence>sometimes</presence>
   <caps>ANY</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>video/x-flv</caps>
  </padtemplate>
 </feature>
 <feature typename="GstTypeFindFactory">
  <name>fftype_flic</name>
  <caps>video/x-fli</caps>
 </feature>
 <feature typename="GstElementFactory">
  <name>ffdemux_flic</name>
  <longname>FFMPEG FLI/FLC/FLX animation format demuxer</longname>
  <class>Codec/Demuxer</class>
  <description>FFMPEG FLI/FLC/FLX animation format demuxer</description>
  <author>Wim Taymans &lt;wim@fluendo.com&gt;, Ronald Bultje &lt;rbultje@ronald.bitfreak.net&gt;, Edward Hervey &lt;bilboed@bilboed.com&gt;</author>
  <padtemplate>
   <nametemplate>video_%02d</nametemplate>
   <direction>src</direction>
   <presence>sometimes</presence>
   <caps>ANY</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>audio_%02d</nametemplate>
   <direction>src</direction>
   <presence>sometimes</presence>
   <caps>ANY</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>video/x-fli</caps>
  </padtemplate>
 </feature>
 <feature typename="GstTypeFindFactory">
  <name>fftype_ffm</name>
  <rank>64</rank>
  <caps>application/x-gst_ff-ffm</caps>
 </feature>
 <feature typename="GstElementFactory">
  <name>ffdemux_ffm</name>
  <rank>64</rank>
  <longname>FFMPEG ffm format demuxer</longname>
  <class>Codec/Demuxer</class>
  <description>FFMPEG ffm format demuxer</description>
  <author>Wim Taymans &lt;wim@fluendo.com&gt;, Ronald Bultje &lt;rbultje@ronald.bitfreak.net&gt;, Edward Hervey &lt;bilboed@bilboed.com&gt;</author>
  <padtemplate>
   <nametemplate>video_%02d</nametemplate>
   <direction>src</direction>
   <presence>sometimes</presence>
   <caps>ANY</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>audio_%02d</nametemplate>
   <direction>src</direction>
   <presence>sometimes</presence>
   <caps>ANY</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>application/x-gst_ff-ffm</caps>
  </padtemplate>
 </feature>
 <feature typename="GstTypeFindFactory">
  <name>fftype_ea</name>
  <rank>64</rank>
  <caps>application/x-gst_ff-ea</caps>
 </feature>
 <feature typename="GstElementFactory">
  <name>ffdemux_ea</name>
  <rank>64</rank>
  <longname>FFMPEG Electronic Arts Multimedia Format demuxer</longname>
  <class>Codec/Demuxer</class>
  <description>FFMPEG Electronic Arts Multimedia Format demuxer</description>
  <author>Wim Taymans &lt;wim@fluendo.com&gt;, Ronald Bultje &lt;rbultje@ronald.bitfreak.net&gt;, Edward Hervey &lt;bilboed@bilboed.com&gt;</author>
  <padtemplate>
   <nametemplate>video_%02d</nametemplate>
   <direction>src</direction>
   <presence>sometimes</presence>
   <caps>ANY</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>audio_%02d</nametemplate>
   <direction>src</direction>
   <presence>sometimes</presence>
   <caps>ANY</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>application/x-gst_ff-ea</caps>
  </padtemplate>
 </feature>
 <feature typename="GstTypeFindFactory">
  <name>fftype_dv1394</name>
  <caps>application/x-gst_ff-dv1394</caps>
 </feature>
 <feature typename="GstElementFactory">
  <name>ffdemux_dv1394</name>
  <longname>FFMPEG dv1394 A/V grab demuxer</longname>
  <class>Codec/Demuxer</class>
  <description>FFMPEG dv1394 A/V grab demuxer</description>
  <author>Wim Taymans &lt;wim@fluendo.com&gt;, Ronald Bultje &lt;rbultje@ronald.bitfreak.net&gt;, Edward Hervey &lt;bilboed@bilboed.com&gt;</author>
  <padtemplate>
   <nametemplate>video_%02d</nametemplate>
   <direction>src</direction>
   <presence>sometimes</presence>
   <caps>ANY</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>audio_%02d</nametemplate>
   <direction>src</direction>
   <presence>sometimes</presence>
   <caps>ANY</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>application/x-gst_ff-dv1394</caps>
  </padtemplate>
 </feature>
 <feature typename="GstTypeFindFactory">
  <name>fftype_dv</name>
  <caps>video/x-dv, systemstream=(boolean)true</caps>
  <extension>dv,dif</extension>
 </feature>
 <feature typename="GstElementFactory">
  <name>ffdemux_dv</name>
  <longname>FFMPEG DV video format demuxer</longname>
  <class>Codec/Demuxer</class>
  <description>FFMPEG DV video format demuxer</description>
  <author>Wim Taymans &lt;wim@fluendo.com&gt;, Ronald Bultje &lt;rbultje@ronald.bitfreak.net&gt;, Edward Hervey &lt;bilboed@bilboed.com&gt;</author>
  <padtemplate>
   <nametemplate>video_%02d</nametemplate>
   <direction>src</direction>
   <presence>sometimes</presence>
   <caps>ANY</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>audio_%02d</nametemplate>
   <direction>src</direction>
   <presence>sometimes</presence>
   <caps>ANY</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>video/x-dv, systemstream=(boolean)true</caps>
  </padtemplate>
 </feature>
 <feature typename="GstTypeFindFactory">
  <name>fftype_dsicin</name>
  <caps>application/x-gst_ff-dsicin</caps>
 </feature>
 <feature typename="GstElementFactory">
  <name>ffdemux_dsicin</name>
  <longname>FFMPEG Delphine Software International CIN format demuxer</longname>
  <class>Codec/Demuxer</class>
  <description>FFMPEG Delphine Software International CIN format demuxer</description>
  <author>Wim Taymans &lt;wim@fluendo.com&gt;, Ronald Bultje &lt;rbultje@ronald.bitfreak.net&gt;, Edward Hervey &lt;bilboed@bilboed.com&gt;</author>
  <padtemplate>
   <nametemplate>video_%02d</nametemplate>
   <direction>src</direction>
   <presence>sometimes</presence>
   <caps>ANY</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>audio_%02d</nametemplate>
   <direction>src</direction>
   <presence>sometimes</presence>
   <caps>ANY</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>application/x-gst_ff-dsicin</caps>
  </padtemplate>
 </feature>
 <feature typename="GstTypeFindFactory">
  <name>fftype_dc1394</name>
  <caps>application/x-gst_ff-dc1394</caps>
 </feature>
 <feature typename="GstElementFactory">
  <name>ffdemux_dc1394</name>
  <longname>FFMPEG dc1394 A/V grab demuxer</longname>
  <class>Codec/Demuxer</class>
  <description>FFMPEG dc1394 A/V grab demuxer</description>
  <author>Wim Taymans &lt;wim@fluendo.com&gt;, Ronald Bultje &lt;rbultje@ronald.bitfreak.net&gt;, Edward Hervey &lt;bilboed@bilboed.com&gt;</author>
  <padtemplate>
   <nametemplate>video_%02d</nametemplate>
   <direction>src</direction>
   <presence>sometimes</presence>
   <caps>ANY</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>audio_%02d</nametemplate>
   <direction>src</direction>
   <presence>sometimes</presence>
   <caps>ANY</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>application/x-gst_ff-dc1394</caps>
  </padtemplate>
 </feature>
 <feature typename="GstTypeFindFactory">
  <name>fftype_daud</name>
  <rank>64</rank>
  <caps>application/x-gst_ff-daud</caps>
  <extension>302</extension>
 </feature>
 <feature typename="GstElementFactory">
  <name>ffdemux_daud</name>
  <rank>64</rank>
  <longname>FFMPEG D-Cinema audio format demuxer</longname>
  <class>Codec/Demuxer</class>
  <description>FFMPEG D-Cinema audio format demuxer</description>
  <author>Wim Taymans &lt;wim@fluendo.com&gt;, Ronald Bultje &lt;rbultje@ronald.bitfreak.net&gt;, Edward Hervey &lt;bilboed@bilboed.com&gt;</author>
  <padtemplate>
   <nametemplate>video_%02d</nametemplate>
   <direction>src</direction>
   <presence>sometimes</presence>
   <caps>ANY</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>audio_%02d</nametemplate>
   <direction>src</direction>
   <presence>sometimes</presence>
   <caps>ANY</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>application/x-gst_ff-daud</caps>
  </padtemplate>
 </feature>
 <feature typename="GstTypeFindFactory">
  <name>fftype_avs</name>
  <rank>64</rank>
  <caps>application/x-gst_ff-avs</caps>
 </feature>
 <feature typename="GstElementFactory">
  <name>ffdemux_avs</name>
  <rank>64</rank>
  <longname>FFMPEG avs format demuxer</longname>
  <class>Codec/Demuxer</class>
  <description>FFMPEG avs format demuxer</description>
  <author>Wim Taymans &lt;wim@fluendo.com&gt;, Ronald Bultje &lt;rbultje@ronald.bitfreak.net&gt;, Edward Hervey &lt;bilboed@bilboed.com&gt;</author>
  <padtemplate>
   <nametemplate>video_%02d</nametemplate>
   <direction>src</direction>
   <presence>sometimes</presence>
   <caps>ANY</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>audio_%02d</nametemplate>
   <direction>src</direction>
   <presence>sometimes</presence>
   <caps>ANY</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>application/x-gst_ff-avs</caps>
  </padtemplate>
 </feature>
 <feature typename="GstElementFactory">
  <name>ffdemux_avi</name>
  <longname>FFMPEG avi format demuxer</longname>
  <class>Codec/Demuxer</class>
  <description>FFMPEG avi format demuxer</description>
  <author>Wim Taymans &lt;wim@fluendo.com&gt;, Ronald Bultje &lt;rbultje@ronald.bitfreak.net&gt;, Edward Hervey &lt;bilboed@bilboed.com&gt;</author>
  <padtemplate>
   <nametemplate>video_%02d</nametemplate>
   <direction>src</direction>
   <presence>sometimes</presence>
   <caps>ANY</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>audio_%02d</nametemplate>
   <direction>src</direction>
   <presence>sometimes</presence>
   <caps>ANY</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>video/x-msvideo</caps>
  </padtemplate>
 </feature>
 <feature typename="GstElementFactory">
  <name>ffdemux_au</name>
  <longname>FFMPEG SUN AU Format demuxer</longname>
  <class>Codec/Demuxer</class>
  <description>FFMPEG SUN AU Format demuxer</description>
  <author>Wim Taymans &lt;wim@fluendo.com&gt;, Ronald Bultje &lt;rbultje@ronald.bitfreak.net&gt;, Edward Hervey &lt;bilboed@bilboed.com&gt;</author>
  <padtemplate>
   <nametemplate>video_%02d</nametemplate>
   <direction>src</direction>
   <presence>sometimes</presence>
   <caps>ANY</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>audio_%02d</nametemplate>
   <direction>src</direction>
   <presence>sometimes</presence>
   <caps>ANY</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>audio/x-au</caps>
  </padtemplate>
 </feature>
 <feature typename="GstElementFactory">
  <name>ffdemux_asf</name>
  <longname>FFMPEG asf format demuxer</longname>
  <class>Codec/Demuxer</class>
  <description>FFMPEG asf format demuxer</description>
  <author>Wim Taymans &lt;wim@fluendo.com&gt;, Ronald Bultje &lt;rbultje@ronald.bitfreak.net&gt;, Edward Hervey &lt;bilboed@bilboed.com&gt;</author>
  <padtemplate>
   <nametemplate>video_%02d</nametemplate>
   <direction>src</direction>
   <presence>sometimes</presence>
   <caps>ANY</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>audio_%02d</nametemplate>
   <direction>src</direction>
   <presence>sometimes</presence>
   <caps>ANY</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>video/x-ms-asf</caps>
  </padtemplate>
 </feature>
 <feature typename="GstElementFactory">
  <name>ffdemux_amr</name>
  <longname>FFMPEG 3gpp amr file format demuxer</longname>
  <class>Codec/Demuxer</class>
  <description>FFMPEG 3gpp amr file format demuxer</description>
  <author>Wim Taymans &lt;wim@fluendo.com&gt;, Ronald Bultje &lt;rbultje@ronald.bitfreak.net&gt;, Edward Hervey &lt;bilboed@bilboed.com&gt;</author>
  <padtemplate>
   <nametemplate>video_%02d</nametemplate>
   <direction>src</direction>
   <presence>sometimes</presence>
   <caps>ANY</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>audio_%02d</nametemplate>
   <direction>src</direction>
   <presence>sometimes</presence>
   <caps>ANY</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>application/x-gst_ff-amr</caps>
  </padtemplate>
 </feature>
 <feature typename="GstTypeFindFactory">
  <name>fftype_aiff</name>
  <rank>64</rank>
  <caps>audio/x-aiff</caps>
 </feature>
 <feature typename="GstElementFactory">
  <name>ffdemux_aiff</name>
  <rank>64</rank>
  <longname>FFMPEG Audio IFF demuxer</longname>
  <class>Codec/Demuxer</class>
  <description>FFMPEG Audio IFF demuxer</description>
  <author>Wim Taymans &lt;wim@fluendo.com&gt;, Ronald Bultje &lt;rbultje@ronald.bitfreak.net&gt;, Edward Hervey &lt;bilboed@bilboed.com&gt;</author>
  <padtemplate>
   <nametemplate>video_%02d</nametemplate>
   <direction>src</direction>
   <presence>sometimes</presence>
   <caps>ANY</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>audio_%02d</nametemplate>
   <direction>src</direction>
   <presence>sometimes</presence>
   <caps>ANY</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>audio/x-aiff</caps>
  </padtemplate>
 </feature>
 <feature typename="GstElementFactory">
  <name>ffdec_adpcm_yamaha</name>
  <rank>64</rank>
  <longname>FFMPEG Yamaha ADPCM decoder</longname>
  <class>Codec/Decoder/Audio</class>
  <description>FFMPEG adpcm_yamaha decoder</description>
  <author>Wim Taymans &lt;wim@fluendo.com&gt;, Ronald Bultje &lt;rbultje@ronald.bitfreak.net&gt;</author>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>audio/x-raw-int, rate=(int)[ 8000, 96000 ], channels=(int)[ 1, 2 ], signed=(boolean)true, endianness=(int)1234, width=(int)16, depth=(int)16</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>audio/x-adpcm, rate=(int)[ 8000, 96000 ], channels=(int)[ 1, 2 ], layout=(string)yamaha</caps>
  </padtemplate>
 </feature>
 <feature typename="GstElementFactory">
  <name>ffdec_adpcm_xa</name>
  <rank>64</rank>
  <longname>FFMPEG CD-ROM XA ADPCM decoder</longname>
  <class>Codec/Decoder/Audio</class>
  <description>FFMPEG adpcm_xa decoder</description>
  <author>Wim Taymans &lt;wim@fluendo.com&gt;, Ronald Bultje &lt;rbultje@ronald.bitfreak.net&gt;</author>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>audio/x-raw-int, rate=(int)[ 8000, 96000 ], channels=(int)[ 1, 2 ], signed=(boolean)true, endianness=(int)1234, width=(int)16, depth=(int)16</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>audio/x-adpcm, rate=(int)[ 8000, 96000 ], channels=(int)[ 1, 2 ], layout=(string)xa</caps>
  </padtemplate>
 </feature>
 <feature typename="GstElementFactory">
  <name>ffdec_adpcm_swf</name>
  <rank>64</rank>
  <longname>FFMPEG Shockwave ADPCM decoder</longname>
  <class>Codec/Decoder/Audio</class>
  <description>FFMPEG adpcm_swf decoder</description>
  <author>Wim Taymans &lt;wim@fluendo.com&gt;, Ronald Bultje &lt;rbultje@ronald.bitfreak.net&gt;</author>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>audio/x-raw-int, rate=(int)[ 8000, 96000 ], channels=(int)[ 1, 2 ], signed=(boolean)true, endianness=(int)1234, width=(int)16, depth=(int)16</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>audio/x-adpcm, rate=(int)[ 8000, 96000 ], channels=(int)[ 1, 2 ], layout=(string)swf</caps>
  </padtemplate>
 </feature>
 <feature typename="GstElementFactory">
  <name>ffdec_adpcm_sbpro_4</name>
  <rank>64</rank>
  <longname>FFMPEG SB-Pro ADPCM 4 decoder</longname>
  <class>Codec/Decoder/Audio</class>
  <description>FFMPEG adpcm_sbpro_4 decoder</description>
  <author>Wim Taymans &lt;wim@fluendo.com&gt;, Ronald Bultje &lt;rbultje@ronald.bitfreak.net&gt;</author>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>audio/x-raw-int, rate=(int)[ 8000, 96000 ], channels=(int)[ 1, 2 ], signed=(boolean)true, endianness=(int)1234, width=(int)16, depth=(int)16</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>audio/x-adpcm, rate=(int)[ 8000, 96000 ], channels=(int)[ 1, 2 ], layout=(string)sbpro4</caps>
  </padtemplate>
 </feature>
 <feature typename="GstElementFactory">
  <name>ffdec_adpcm_sbpro_3</name>
  <rank>64</rank>
  <longname>FFMPEG SB-Pro ADPCM 3 decoder</longname>
  <class>Codec/Decoder/Audio</class>
  <description>FFMPEG adpcm_sbpro_3 decoder</description>
  <author>Wim Taymans &lt;wim@fluendo.com&gt;, Ronald Bultje &lt;rbultje@ronald.bitfreak.net&gt;</author>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>audio/x-raw-int, rate=(int)[ 8000, 96000 ], channels=(int)[ 1, 2 ], signed=(boolean)true, endianness=(int)1234, width=(int)16, depth=(int)16</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>audio/x-adpcm, rate=(int)[ 8000, 96000 ], channels=(int)[ 1, 2 ], layout=(string)sbpro3</caps>
  </padtemplate>
 </feature>
 <feature typename="GstElementFactory">
  <name>ffdec_adpcm_sbpro_2</name>
  <rank>64</rank>
  <longname>FFMPEG SB-Pro ADPCM 2 decoder</longname>
  <class>Codec/Decoder/Audio</class>
  <description>FFMPEG adpcm_sbpro_2 decoder</description>
  <author>Wim Taymans &lt;wim@fluendo.com&gt;, Ronald Bultje &lt;rbultje@ronald.bitfreak.net&gt;</author>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>audio/x-raw-int, rate=(int)[ 8000, 96000 ], channels=(int)[ 1, 2 ], signed=(boolean)true, endianness=(int)1234, width=(int)16, depth=(int)16</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>audio/x-adpcm, rate=(int)[ 8000, 96000 ], channels=(int)[ 1, 2 ], layout=(string)sbpro2</caps>
  </padtemplate>
 </feature>
 <feature typename="GstElementFactory">
  <name>ffdec_adpcm_ms</name>
  <rank>64</rank>
  <longname>FFMPEG Microsoft ADPCM audio decoder</longname>
  <class>Codec/Decoder/Audio</class>
  <description>FFMPEG adpcm_ms decoder</description>
  <author>Wim Taymans &lt;wim@fluendo.com&gt;, Ronald Bultje &lt;rbultje@ronald.bitfreak.net&gt;</author>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>audio/x-raw-int, rate=(int)[ 8000, 96000 ], channels=(int)[ 1, 2 ], signed=(boolean)true, endianness=(int)1234, width=(int)16, depth=(int)16</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>audio/x-adpcm, rate=(int)[ 8000, 96000 ], channels=(int)[ 1, 2 ], layout=(string)microsoft</caps>
  </padtemplate>
 </feature>
 <feature typename="GstElementFactory">
  <name>ffdec_adpcm_ima_ws</name>
  <rank>64</rank>
  <longname>FFMPEG IMA/Westwood ADPCM audio decoder</longname>
  <class>Codec/Decoder/Audio</class>
  <description>FFMPEG adpcm_ima_ws decoder</description>
  <author>Wim Taymans &lt;wim@fluendo.com&gt;, Ronald Bultje &lt;rbultje@ronald.bitfreak.net&gt;</author>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>audio/x-raw-int, rate=(int)[ 8000, 96000 ], channels=(int)[ 1, 2 ], signed=(boolean)true, endianness=(int)1234, width=(int)16, depth=(int)16</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>audio/x-adpcm, rate=(int)[ 8000, 96000 ], channels=(int)[ 1, 2 ], layout=(string)westwood</caps>
  </padtemplate>
 </feature>
 <feature typename="GstElementFactory">
  <name>ffdec_adpcm_ima_wav</name>
  <rank>64</rank>
  <longname>FFMPEG IMA/DVI ADPCM audio decoder</longname>
  <class>Codec/Decoder/Audio</class>
  <description>FFMPEG adpcm_ima_wav decoder</description>
  <author>Wim Taymans &lt;wim@fluendo.com&gt;, Ronald Bultje &lt;rbultje@ronald.bitfreak.net&gt;</author>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>audio/x-raw-int, rate=(int)[ 8000, 96000 ], channels=(int)[ 1, 2 ], signed=(boolean)true, endianness=(int)1234, width=(int)16, depth=(int)16</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>audio/x-adpcm, rate=(int)[ 8000, 96000 ], channels=(int)[ 1, 2 ], layout=(string)dvi</caps>
  </padtemplate>
 </feature>
 <feature typename="GstElementFactory">
  <name>ffdec_adpcm_ima_smjpeg</name>
  <rank>64</rank>
  <longname>FFMPEG IMA/SMJPEG ADPCM audio decoder</longname>
  <class>Codec/Decoder/Audio</class>
  <description>FFMPEG adpcm_ima_smjpeg decoder</description>
  <author>Wim Taymans &lt;wim@fluendo.com&gt;, Ronald Bultje &lt;rbultje@ronald.bitfreak.net&gt;</author>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>audio/x-raw-int, rate=(int)[ 8000, 96000 ], channels=(int)[ 1, 2 ], signed=(boolean)true, endianness=(int)1234, width=(int)16, depth=(int)16</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>audio/x-adpcm, rate=(int)[ 8000, 96000 ], channels=(int)[ 1, 2 ], layout=(string)smjpeg</caps>
  </padtemplate>
 </feature>
 <feature typename="GstElementFactory">
  <name>ffdec_adpcm_ima_qt</name>
  <rank>64</rank>
  <longname>FFMPEG IMA/Quicktime ADPCM audio decoder</longname>
  <class>Codec/Decoder/Audio</class>
  <description>FFMPEG adpcm_ima_qt decoder</description>
  <author>Wim Taymans &lt;wim@fluendo.com&gt;, Ronald Bultje &lt;rbultje@ronald.bitfreak.net&gt;</author>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>audio/x-raw-int, rate=(int)[ 8000, 96000 ], channels=(int)[ 1, 2 ], signed=(boolean)true, endianness=(int)1234, width=(int)16, depth=(int)16</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>audio/x-adpcm, rate=(int)[ 8000, 96000 ], channels=(int)[ 1, 2 ], layout=(string)quicktime</caps>
  </padtemplate>
 </feature>
 <feature typename="GstElementFactory">
  <name>ffdec_adpcm_ima_dk4</name>
  <rank>64</rank>
  <longname>FFMPEG IMA/DK4 ADPCM decoder</longname>
  <class>Codec/Decoder/Audio</class>
  <description>FFMPEG adpcm_ima_dk4 decoder</description>
  <author>Wim Taymans &lt;wim@fluendo.com&gt;, Ronald Bultje &lt;rbultje@ronald.bitfreak.net&gt;</author>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>audio/x-raw-int, rate=(int)[ 8000, 96000 ], channels=(int)[ 1, 2 ], signed=(boolean)true, endianness=(int)1234, width=(int)16, depth=(int)16</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>audio/x-adpcm, rate=(int)[ 8000, 96000 ], channels=(int)[ 1, 2 ], layout=(string)dk4</caps>
  </padtemplate>
 </feature>
 <feature typename="GstElementFactory">
  <name>ffdec_adpcm_ima_dk3</name>
  <rank>64</rank>
  <longname>FFMPEG IMA/DK3 ADPCM audio decoder</longname>
  <class>Codec/Decoder/Audio</class>
  <description>FFMPEG adpcm_ima_dk3 decoder</description>
  <author>Wim Taymans &lt;wim@fluendo.com&gt;, Ronald Bultje &lt;rbultje@ronald.bitfreak.net&gt;</author>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>audio/x-raw-int, rate=(int)[ 8000, 96000 ], channels=(int)[ 1, 2 ], signed=(boolean)true, endianness=(int)1234, width=(int)16, depth=(int)16</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>audio/x-adpcm, rate=(int)[ 8000, 96000 ], channels=(int)[ 1, 2 ], layout=(string)dk3</caps>
  </padtemplate>
 </feature>
 <feature typename="GstElementFactory">
  <name>ffdec_g726</name>
  <rank>64</rank>
  <longname>FFMPEG G.726 ADPCM decoder</longname>
  <class>Codec/Decoder/Audio</class>
  <description>FFMPEG g726 decoder</description>
  <author>Wim Taymans &lt;wim@fluendo.com&gt;, Ronald Bultje &lt;rbultje@ronald.bitfreak.net&gt;</author>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>audio/x-raw-int, rate=(int)[ 8000, 96000 ], channels=(int)[ 1, 2 ], signed=(boolean)true, endianness=(int)1234, width=(int)16, depth=(int)16</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>audio/x-adpcm, rate=(int)[ 8000, 96000 ], channels=(int)[ 1, 2 ], layout=(string)g726</caps>
  </padtemplate>
 </feature>
 <feature typename="GstElementFactory">
  <name>ffdec_adpcm_ea</name>
  <rank>64</rank>
  <longname>FFMPEG Electronic Arts ADPCM decoder</longname>
  <class>Codec/Decoder/Audio</class>
  <description>FFMPEG adpcm_ea decoder</description>
  <author>Wim Taymans &lt;wim@fluendo.com&gt;, Ronald Bultje &lt;rbultje@ronald.bitfreak.net&gt;</author>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>audio/x-raw-int, rate=(int)[ 8000, 96000 ], channels=(int)[ 1, 2 ], signed=(boolean)true, endianness=(int)1234, width=(int)16, depth=(int)16</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>audio/x-adpcm, rate=(int)[ 8000, 96000 ], channels=(int)[ 1, 2 ], layout=(string)ea</caps>
  </padtemplate>
 </feature>
 <feature typename="GstElementFactory">
  <name>ffdec_adpcm_ct</name>
  <rank>64</rank>
  <longname>FFMPEG CT ADPCM decoder</longname>
  <class>Codec/Decoder/Audio</class>
  <description>FFMPEG adpcm_ct decoder</description>
  <author>Wim Taymans &lt;wim@fluendo.com&gt;, Ronald Bultje &lt;rbultje@ronald.bitfreak.net&gt;</author>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>audio/x-raw-int, rate=(int)[ 8000, 96000 ], channels=(int)[ 1, 2 ], signed=(boolean)true, endianness=(int)1234, width=(int)16, depth=(int)16</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>audio/x-adpcm, rate=(int)[ 8000, 96000 ], channels=(int)[ 1, 2 ], layout=(string)ct</caps>
  </padtemplate>
 </feature>
 <feature typename="GstElementFactory">
  <name>ffdec_adpcm_adx</name>
  <rank>64</rank>
  <longname>FFMPEG ADX ADPCM decoder</longname>
  <class>Codec/Decoder/Audio</class>
  <description>FFMPEG adpcm_adx decoder</description>
  <author>Wim Taymans &lt;wim@fluendo.com&gt;, Ronald Bultje &lt;rbultje@ronald.bitfreak.net&gt;</author>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>audio/x-raw-int, rate=(int)[ 8000, 96000 ], channels=(int)[ 1, 2 ], signed=(boolean)true, endianness=(int)1234, width=(int)16, depth=(int)16</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>audio/x-adpcm, rate=(int)[ 8000, 96000 ], channels=(int)[ 1, 2 ], layout=(string)adx</caps>
  </padtemplate>
 </feature>
 <feature typename="GstElementFactory">
  <name>ffdec_adpcm_4xm</name>
  <rank>64</rank>
  <longname>FFMPEG 4-XM ADPCM audio decoder</longname>
  <class>Codec/Decoder/Audio</class>
  <description>FFMPEG adpcm_4xm decoder</description>
  <author>Wim Taymans &lt;wim@fluendo.com&gt;, Ronald Bultje &lt;rbultje@ronald.bitfreak.net&gt;</author>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>audio/x-raw-int, rate=(int)[ 8000, 96000 ], channels=(int)[ 1, 2 ], signed=(boolean)true, endianness=(int)1234, width=(int)16, depth=(int)16</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>audio/x-adpcm, rate=(int)[ 8000, 96000 ], channels=(int)[ 1, 2 ], layout=(string)4xm</caps>
  </padtemplate>
 </feature>
 <feature typename="GstElementFactory">
  <name>ffdec_xan_dpcm</name>
  <rank>64</rank>
  <longname>FFMPEG XAN DPCM audio decoder</longname>
  <class>Codec/Decoder/Audio</class>
  <description>FFMPEG xan_dpcm decoder</description>
  <author>Wim Taymans &lt;wim@fluendo.com&gt;, Ronald Bultje &lt;rbultje@ronald.bitfreak.net&gt;</author>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>audio/x-raw-int, rate=(int)[ 8000, 96000 ], channels=(int)[ 1, 2 ], signed=(boolean)true, endianness=(int)1234, width=(int)16, depth=(int)16</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>audio/x-dpcm, rate=(int)[ 8000, 96000 ], channels=(int)[ 1, 2 ], layout=(string)xan</caps>
  </padtemplate>
 </feature>
 <feature typename="GstElementFactory">
  <name>ffdec_sol_dpcm</name>
  <rank>64</rank>
  <longname>FFMPEG SOL DPCM audio decoder</longname>
  <class>Codec/Decoder/Audio</class>
  <description>FFMPEG sol_dpcm decoder</description>
  <author>Wim Taymans &lt;wim@fluendo.com&gt;, Ronald Bultje &lt;rbultje@ronald.bitfreak.net&gt;</author>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>audio/x-raw-int, rate=(int)[ 8000, 96000 ], channels=(int)[ 1, 2 ], signed=(boolean)true, endianness=(int)1234, width=(int)16, depth=(int)16</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>audio/x-dpcm, rate=(int)[ 8000, 96000 ], channels=(int)[ 1, 2 ], layout=(string)sol</caps>
  </padtemplate>
 </feature>
 <feature typename="GstElementFactory">
  <name>ffdec_roq_dpcm</name>
  <rank>64</rank>
  <longname>FFMPEG RoQ DPCM audio decoder</longname>
  <class>Codec/Decoder/Audio</class>
  <description>FFMPEG roq_dpcm decoder</description>
  <author>Wim Taymans &lt;wim@fluendo.com&gt;, Ronald Bultje &lt;rbultje@ronald.bitfreak.net&gt;</author>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>audio/x-raw-int, rate=(int)[ 8000, 96000 ], channels=(int)[ 1, 2 ], signed=(boolean)true, endianness=(int)1234, width=(int)16, depth=(int)16</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>audio/x-dpcm, rate=(int)[ 8000, 96000 ], channels=(int)[ 1, 2 ], layout=(string)roq</caps>
  </padtemplate>
 </feature>
 <feature typename="GstElementFactory">
  <name>ffdec_interplay_dpcm</name>
  <rank>64</rank>
  <longname>FFMPEG Interplay DPCM audio decoder</longname>
  <class>Codec/Decoder/Audio</class>
  <description>FFMPEG interplay_dpcm decoder</description>
  <author>Wim Taymans &lt;wim@fluendo.com&gt;, Ronald Bultje &lt;rbultje@ronald.bitfreak.net&gt;</author>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>audio/x-raw-int, rate=(int)[ 8000, 96000 ], channels=(int)[ 1, 2 ], signed=(boolean)true, endianness=(int)1234, width=(int)16, depth=(int)16</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>audio/x-dpcm, rate=(int)[ 8000, 96000 ], channels=(int)[ 1, 2 ], layout=(string)interplay</caps>
  </padtemplate>
 </feature>
 <feature typename="GstElementFactory">
  <name>ffdec_ws_snd1</name>
  <rank>64</rank>
  <longname>FFMPEG Westwood Sound-1 decoder</longname>
  <class>Codec/Decoder/Audio</class>
  <description>FFMPEG ws_snd1 decoder</description>
  <author>Wim Taymans &lt;wim@fluendo.com&gt;, Ronald Bultje &lt;rbultje@ronald.bitfreak.net&gt;</author>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>audio/x-raw-int, rate=(int)[ 8000, 96000 ], channels=(int)[ 1, 2 ], signed=(boolean)true, endianness=(int)1234, width=(int)16, depth=(int)16</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>audio/x-gst_ff-ws_snd1, rate=(int)[ 8000, 96000 ], channels=(int)[ 1, 2 ]</caps>
  </padtemplate>
 </feature>
 <feature typename="GstElementFactory">
  <name>ffdec_wmav2</name>
  <rank>64</rank>
  <longname>FFMPEG Windows Media Audio v8/9 decoder</longname>
  <class>Codec/Decoder/Audio</class>
  <description>FFMPEG wmav2 decoder</description>
  <author>Wim Taymans &lt;wim@fluendo.com&gt;, Ronald Bultje &lt;rbultje@ronald.bitfreak.net&gt;</author>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>audio/x-raw-int, rate=(int)[ 8000, 96000 ], channels=(int)[ 1, 2 ], signed=(boolean)true, endianness=(int)1234, width=(int)16, depth=(int)16</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>audio/x-wma, rate=(int)[ 8000, 96000 ], channels=(int)[ 1, 2 ], wmaversion=(int)2, block_align=(int)[ 0, 2147483647 ], bitrate=(int)[ 0, 2147483647 ]</caps>
  </padtemplate>
 </feature>
 <feature typename="GstElementFactory">
  <name>ffdec_wmav1</name>
  <rank>64</rank>
  <longname>FFMPEG Windows Media Audio v7 decoder</longname>
  <class>Codec/Decoder/Audio</class>
  <description>FFMPEG wmav1 decoder</description>
  <author>Wim Taymans &lt;wim@fluendo.com&gt;, Ronald Bultje &lt;rbultje@ronald.bitfreak.net&gt;</author>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>audio/x-raw-int, rate=(int)[ 8000, 96000 ], channels=(int)[ 1, 2 ], signed=(boolean)true, endianness=(int)1234, width=(int)16, depth=(int)16</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>audio/x-wma, rate=(int)[ 8000, 96000 ], channels=(int)[ 1, 2 ], wmaversion=(int)1, block_align=(int)[ 0, 2147483647 ], bitrate=(int)[ 0, 2147483647 ]</caps>
  </padtemplate>
 </feature>
 <feature typename="GstElementFactory">
  <name>ffdec_vmdaudio</name>
  <rank>64</rank>
  <longname>FFMPEG Sierra VMD audio decoder</longname>
  <class>Codec/Decoder/Audio</class>
  <description>FFMPEG vmdaudio decoder</description>
  <author>Wim Taymans &lt;wim@fluendo.com&gt;, Ronald Bultje &lt;rbultje@ronald.bitfreak.net&gt;</author>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>audio/x-raw-int, rate=(int)[ 8000, 96000 ], channels=(int)[ 1, 2 ], signed=(boolean)true, endianness=(int)1234, width=(int)16, depth=(int)16</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>audio/x-gst_ff-vmdaudio, rate=(int)[ 8000, 96000 ], channels=(int)[ 1, 2 ]</caps>
  </padtemplate>
 </feature>
 <feature typename="GstElementFactory">
  <name>ffdec_tta</name>
  <rank>64</rank>
  <longname>FFMPEG Lossless True Audio decoder</longname>
  <class>Codec/Decoder/Audio</class>
  <description>FFMPEG tta decoder</description>
  <author>Wim Taymans &lt;wim@fluendo.com&gt;, Ronald Bultje &lt;rbultje@ronald.bitfreak.net&gt;</author>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>audio/x-raw-int, rate=(int)[ 8000, 96000 ], channels=(int)[ 1, 2 ], signed=(boolean)true, endianness=(int)1234, width=(int)16, depth=(int)16</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>audio/x-tta, rate=(int)[ 8000, 96000 ], channels=(int)[ 1, 2 ]</caps>
  </padtemplate>
 </feature>
 <feature typename="GstElementFactory">
  <name>ffdec_truespeech</name>
  <rank>64</rank>
  <longname>FFMPEG DSP Group TrueSpeech Audio decoder</longname>
  <class>Codec/Decoder/Audio</class>
  <description>FFMPEG truespeech decoder</description>
  <author>Wim Taymans &lt;wim@fluendo.com&gt;, Ronald Bultje &lt;rbultje@ronald.bitfreak.net&gt;</author>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>audio/x-raw-int, rate=(int)[ 8000, 96000 ], channels=(int)[ 1, 2 ], signed=(boolean)true, endianness=(int)1234, width=(int)16, depth=(int)16</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>audio/x-gst_ff-truespeech, rate=(int)[ 8000, 96000 ], channels=(int)[ 1, 2 ]</caps>
  </padtemplate>
 </feature>
 <feature typename="GstElementFactory">
  <name>ffdec_sonic</name>
  <rank>64</rank>
  <longname>FFMPEG Sonic audio decoder</longname>
  <class>Codec/Decoder/Audio</class>
  <description>FFMPEG sonic decoder</description>
  <author>Wim Taymans &lt;wim@fluendo.com&gt;, Ronald Bultje &lt;rbultje@ronald.bitfreak.net&gt;</author>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>audio/x-raw-int, rate=(int)[ 8000, 96000 ], channels=(int)[ 1, 2 ], signed=(boolean)true, endianness=(int)1234, width=(int)16, depth=(int)16</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>audio/x-gst_ff-sonic, rate=(int)[ 8000, 96000 ], channels=(int)[ 1, 2 ]</caps>
  </padtemplate>
 </feature>
 <feature typename="GstElementFactory">
  <name>ffdec_shorten</name>
  <rank>64</rank>
  <longname>FFMPEG Shorten lossless audio decoder</longname>
  <class>Codec/Decoder/Audio</class>
  <description>FFMPEG shorten decoder</description>
  <author>Wim Taymans &lt;wim@fluendo.com&gt;, Ronald Bultje &lt;rbultje@ronald.bitfreak.net&gt;</author>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>audio/x-raw-int, rate=(int)[ 8000, 96000 ], channels=(int)[ 1, 2 ], signed=(boolean)true, endianness=(int)1234, width=(int)16, depth=(int)16</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>audio/x-shorten</caps>
  </padtemplate>
 </feature>
 <feature typename="GstElementFactory">
  <name>ffdec_real_288</name>
  <rank>64</rank>
  <longname>FFMPEG Realaudio 28k8bps decoder</longname>
  <class>Codec/Decoder/Audio</class>
  <description>FFMPEG real_288 decoder</description>
  <author>Wim Taymans &lt;wim@fluendo.com&gt;, Ronald Bultje &lt;rbultje@ronald.bitfreak.net&gt;</author>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>audio/x-raw-int, rate=(int)[ 8000, 96000 ], channels=(int)[ 1, 2 ], signed=(boolean)true, endianness=(int)1234, width=(int)16, depth=(int)16</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>audio/x-pn-realaudio, rate=(int)[ 8000, 96000 ], channels=(int)[ 1, 2 ], raversion=(int)2</caps>
  </padtemplate>
 </feature>
 <feature typename="GstElementFactory">
  <name>ffdec_real_144</name>
  <rank>64</rank>
  <longname>FFMPEG Realaudio 14k4bps decoder</longname>
  <class>Codec/Decoder/Audio</class>
  <description>FFMPEG real_144 decoder</description>
  <author>Wim Taymans &lt;wim@fluendo.com&gt;, Ronald Bultje &lt;rbultje@ronald.bitfreak.net&gt;</author>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>audio/x-raw-int, rate=(int)[ 8000, 96000 ], channels=(int)[ 1, 2 ], signed=(boolean)true, endianness=(int)1234, width=(int)16, depth=(int)16</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>audio/x-pn-realaudio, rate=(int)[ 8000, 96000 ], channels=(int)[ 1, 2 ], raversion=(int)1</caps>
  </padtemplate>
 </feature>
 <feature typename="GstElementFactory">
  <name>ffdec_qdm2</name>
  <rank>64</rank>
  <longname>FFMPEG QDesign Music 2 decoder</longname>
  <class>Codec/Decoder/Audio</class>
  <description>FFMPEG qdm2 decoder</description>
  <author>Wim Taymans &lt;wim@fluendo.com&gt;, Ronald Bultje &lt;rbultje@ronald.bitfreak.net&gt;</author>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>audio/x-raw-int, rate=(int)[ 8000, 96000 ], channels=(int)[ 1, 2 ], signed=(boolean)true, endianness=(int)1234, width=(int)16, depth=(int)16</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>audio/x-qdm2, rate=(int)[ 8000, 96000 ], channels=(int)[ 1, 2 ]</caps>
  </padtemplate>
 </feature>
 <feature typename="GstElementFactory">
  <name>ffdec_mp3on4</name>
  <rank>64</rank>
  <longname>FFMPEG MP3ON4 decoder</longname>
  <class>Codec/Decoder/Audio</class>
  <description>FFMPEG mp3on4 decoder</description>
  <author>Wim Taymans &lt;wim@fluendo.com&gt;, Ronald Bultje &lt;rbultje@ronald.bitfreak.net&gt;</author>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>audio/x-raw-int, rate=(int)[ 8000, 96000 ], channels=(int)[ 1, 2 ], signed=(boolean)true, endianness=(int)1234, width=(int)16, depth=(int)16</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>audio/x-gst_ff-mp3on4, rate=(int)[ 8000, 96000 ], channels=(int)[ 1, 2 ]</caps>
  </padtemplate>
 </feature>
 <feature typename="GstElementFactory">
  <name>ffdec_mp3adu</name>
  <rank>64</rank>
  <longname>FFMPEG ADU-formatted MPEG-1 layer 3 audio decoder</longname>
  <class>Codec/Decoder/Audio</class>
  <description>FFMPEG mp3adu decoder</description>
  <author>Wim Taymans &lt;wim@fluendo.com&gt;, Ronald Bultje &lt;rbultje@ronald.bitfreak.net&gt;</author>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>audio/x-raw-int, rate=(int)[ 8000, 96000 ], channels=(int)[ 1, 2 ], signed=(boolean)true, endianness=(int)1234, width=(int)16, depth=(int)16</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>audio/x-gst_ff-mp3adu, rate=(int)[ 8000, 96000 ], channels=(int)[ 1, 2 ]</caps>
  </padtemplate>
 </feature>
 <feature typename="GstElementFactory">
  <name>ffdec_mp3</name>
  <longname>FFMPEG MPEG-1 layer 3 audio decoder</longname>
  <class>Codec/Decoder/Audio</class>
  <description>FFMPEG mp3 decoder</description>
  <author>Wim Taymans &lt;wim@fluendo.com&gt;, Ronald Bultje &lt;rbultje@ronald.bitfreak.net&gt;</author>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>audio/x-raw-int, rate=(int)[ 8000, 96000 ], channels=(int)[ 1, 2 ], signed=(boolean)true, endianness=(int)1234, width=(int)16, depth=(int)16</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>audio/mpeg, mpegversion=(int)1, layer=(int)[ 1, 3 ]</caps>
  </padtemplate>
 </feature>
 <feature typename="GstElementFactory">
  <name>ffdec_mace6</name>
  <rank>64</rank>
  <longname>FFMPEG MACE-6 audio decoder</longname>
  <class>Codec/Decoder/Audio</class>
  <description>FFMPEG mace6 decoder</description>
  <author>Wim Taymans &lt;wim@fluendo.com&gt;, Ronald Bultje &lt;rbultje@ronald.bitfreak.net&gt;</author>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>audio/x-raw-int, rate=(int)[ 8000, 96000 ], channels=(int)[ 1, 2 ], signed=(boolean)true, endianness=(int)1234, width=(int)16, depth=(int)16</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>audio/x-mace, rate=(int)[ 8000, 96000 ], channels=(int)[ 1, 2 ], maceversion=(int)6</caps>
  </padtemplate>
 </feature>
 <feature typename="GstElementFactory">
  <name>ffdec_mace3</name>
  <rank>64</rank>
  <longname>FFMPEG MACE-3 audio decoder</longname>
  <class>Codec/Decoder/Audio</class>
  <description>FFMPEG mace3 decoder</description>
  <author>Wim Taymans &lt;wim@fluendo.com&gt;, Ronald Bultje &lt;rbultje@ronald.bitfreak.net&gt;</author>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>audio/x-raw-int, rate=(int)[ 8000, 96000 ], channels=(int)[ 1, 2 ], signed=(boolean)true, endianness=(int)1234, width=(int)16, depth=(int)16</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>audio/x-mace, rate=(int)[ 8000, 96000 ], channels=(int)[ 1, 2 ], maceversion=(int)3</caps>
  </padtemplate>
 </feature>
 <feature typename="GstElementFactory">
  <name>ffdec_flac</name>
  <rank>64</rank>
  <longname>FFMPEG FLAC lossless audio decoder</longname>
  <class>Codec/Decoder/Audio</class>
  <description>FFMPEG flac decoder</description>
  <author>Wim Taymans &lt;wim@fluendo.com&gt;, Ronald Bultje &lt;rbultje@ronald.bitfreak.net&gt;</author>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>audio/x-raw-int, rate=(int)[ 8000, 96000 ], channels=(int)[ 1, 2 ], signed=(boolean)true, endianness=(int)1234, width=(int)16, depth=(int)16</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>audio/x-flac</caps>
  </padtemplate>
 </feature>
 <feature typename="GstElementFactory">
  <name>ffdec_cook</name>
  <rank>256</rank>
  <longname>FFMPEG Realaudio G2 (Cook) audio decoder</longname>
  <class>Codec/Decoder/Audio</class>
  <description>FFMPEG cook decoder</description>
  <author>Wim Taymans &lt;wim@fluendo.com&gt;, Ronald Bultje &lt;rbultje@ronald.bitfreak.net&gt;</author>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>audio/x-raw-int, rate=(int)[ 8000, 96000 ], channels=(int)[ 1, 2 ], signed=(boolean)true, endianness=(int)1234, width=(int)16, depth=(int)16</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>audio/x-pn-realaudio, rate=(int)[ 8000, 96000 ], channels=(int)[ 1, 2 ], raversion=(int)8</caps>
  </padtemplate>
 </feature>
 <feature typename="GstElementFactory">
  <name>ffdec_amr_wb</name>
  <rank>64</rank>
  <longname>FFMPEG 3GPP AMR WideBand speech audio codec decoder</longname>
  <class>Codec/Decoder/Audio</class>
  <description>FFMPEG amr_wb decoder</description>
  <author>Wim Taymans &lt;wim@fluendo.com&gt;, Ronald Bultje &lt;rbultje@ronald.bitfreak.net&gt;</author>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>audio/x-raw-int, rate=(int)[ 8000, 96000 ], channels=(int)[ 1, 2 ], signed=(boolean)true, endianness=(int)1234, width=(int)16, depth=(int)16</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>audio/AMR-WB, rate=(int)[ 8000, 96000 ], channels=(int)[ 1, 2 ]</caps>
  </padtemplate>
 </feature>
 <feature typename="GstElementFactory">
  <name>ffdec_amr_nb</name>
  <rank>64</rank>
  <longname>FFMPEG 3GPP AMR NarrowBand speech audio codec decoder</longname>
  <class>Codec/Decoder/Audio</class>
  <description>FFMPEG amr_nb decoder</description>
  <author>Wim Taymans &lt;wim@fluendo.com&gt;, Ronald Bultje &lt;rbultje@ronald.bitfreak.net&gt;</author>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>audio/x-raw-int, rate=(int)[ 8000, 96000 ], channels=(int)[ 1, 2 ], signed=(boolean)true, endianness=(int)1234, width=(int)16, depth=(int)16</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>audio/AMR, rate=(int)[ 8000, 96000 ], channels=(int)[ 1, 2 ]</caps>
  </padtemplate>
 </feature>
 <feature typename="GstElementFactory">
  <name>ffdec_alac</name>
  <rank>64</rank>
  <longname>FFMPEG Apple lossless audio decoder</longname>
  <class>Codec/Decoder/Audio</class>
  <description>FFMPEG alac decoder</description>
  <author>Wim Taymans &lt;wim@fluendo.com&gt;, Ronald Bultje &lt;rbultje@ronald.bitfreak.net&gt;</author>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>audio/x-raw-int, rate=(int)[ 8000, 96000 ], channels=(int)[ 1, 2 ], signed=(boolean)true, endianness=(int)1234, width=(int)16, depth=(int)16</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>audio/x-alac, rate=(int)[ 8000, 96000 ], channels=(int)[ 1, 2 ]</caps>
  </padtemplate>
 </feature>
 <feature typename="GstElementFactory">
  <name>ffdec_mpeg4aac</name>
  <rank>64</rank>
  <longname>FFMPEG MPEG-2/4 AAC audio decoder</longname>
  <class>Codec/Decoder/Audio</class>
  <description>FFMPEG mpeg4aac decoder</description>
  <author>Wim Taymans &lt;wim@fluendo.com&gt;, Ronald Bultje &lt;rbultje@ronald.bitfreak.net&gt;</author>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>audio/x-raw-int, rate=(int)[ 8000, 96000 ], channels=(int)[ 1, 2 ], signed=(boolean)true, endianness=(int)1234, width=(int)16, depth=(int)16</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>audio/mpeg, rate=(int)[ 8000, 96000 ], channels=(int)[ 1, 2 ], mpegversion=(int)4</caps>
  </padtemplate>
 </feature>
 <feature typename="GstElementFactory">
  <name>ffdec_aac</name>
  <rank>64</rank>
  <longname>FFMPEG MPEG-2/4 AAC audio decoder</longname>
  <class>Codec/Decoder/Audio</class>
  <description>FFMPEG aac decoder</description>
  <author>Wim Taymans &lt;wim@fluendo.com&gt;, Ronald Bultje &lt;rbultje@ronald.bitfreak.net&gt;</author>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>audio/x-raw-int, rate=(int)[ 8000, 96000 ], channels=(int)[ 1, 2 ], signed=(boolean)true, endianness=(int)1234, width=(int)16, depth=(int)16</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>audio/mpeg, rate=(int)[ 8000, 96000 ], channels=(int)[ 1, 2 ], mpegversion=(int)4</caps>
  </padtemplate>
 </feature>
 <feature typename="GstElementFactory">
  <name>ffdec_zmbv</name>
  <rank>64</rank>
  <longname>FFMPEG Zip Motion Blocks Video decoder</longname>
  <class>Codec/Decoder/Video</class>
  <description>FFMPEG zmbv decoder</description>
  <author>Wim Taymans &lt;wim@fluendo.com&gt;, Ronald Bultje &lt;rbultje@ronald.bitfreak.net&gt;</author>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>video/x-raw-rgb; video/x-raw-yuv</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>video/x-gst_ff-zmbv, width=(int)[ 16, 4096 ], height=(int)[ 16, 4096 ], framerate=(fraction)[ 0/1, 2147483647/1 ]</caps>
  </padtemplate>
 </feature>
 <feature typename="GstElementFactory">
  <name>ffdec_zlib</name>
  <rank>64</rank>
  <longname>FFMPEG Lossless zlib video decoder</longname>
  <class>Codec/Decoder/Video</class>
  <description>FFMPEG zlib decoder</description>
  <author>Wim Taymans &lt;wim@fluendo.com&gt;, Ronald Bultje &lt;rbultje@ronald.bitfreak.net&gt;</author>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>video/x-raw-rgb; video/x-raw-yuv</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>video/x-zlib, width=(int)[ 16, 4096 ], height=(int)[ 16, 4096 ], framerate=(fraction)[ 0/1, 2147483647/1 ]</caps>
  </padtemplate>
 </feature>
 <feature typename="GstElementFactory">
  <name>ffdec_xl</name>
  <rank>64</rank>
  <longname>FFMPEG Miro VideoXL decoder</longname>
  <class>Codec/Decoder/Video</class>
  <description>FFMPEG xl decoder</description>
  <author>Wim Taymans &lt;wim@fluendo.com&gt;, Ronald Bultje &lt;rbultje@ronald.bitfreak.net&gt;</author>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>video/x-raw-rgb; video/x-raw-yuv</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>video/x-gst_ff-xl, width=(int)[ 16, 4096 ], height=(int)[ 16, 4096 ], framerate=(fraction)[ 0/1, 2147483647/1 ]</caps>
  </padtemplate>
 </feature>
 <feature typename="GstElementFactory">
  <name>ffdec_xan_wc3</name>
  <rank>64</rank>
  <longname>FFMPEG XAN Wing Commander 3 video decoder</longname>
  <class>Codec/Decoder/Video</class>
  <description>FFMPEG xan_wc3 decoder</description>
  <author>Wim Taymans &lt;wim@fluendo.com&gt;, Ronald Bultje &lt;rbultje@ronald.bitfreak.net&gt;</author>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>video/x-raw-rgb; video/x-raw-yuv</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>video/x-xan, width=(int)[ 16, 4096 ], height=(int)[ 16, 4096 ], framerate=(fraction)[ 0/1, 2147483647/1 ], wcversion=(int)3</caps>
  </padtemplate>
 </feature>
 <feature typename="GstElementFactory">
  <name>ffdec_wnv1</name>
  <rank>64</rank>
  <longname>FFMPEG Winnov video 1 decoder</longname>
  <class>Codec/Decoder/Video</class>
  <description>FFMPEG wnv1 decoder</description>
  <author>Wim Taymans &lt;wim@fluendo.com&gt;, Ronald Bultje &lt;rbultje@ronald.bitfreak.net&gt;</author>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>video/x-raw-rgb; video/x-raw-yuv</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>video/x-gst_ff-wnv1, width=(int)[ 16, 4096 ], height=(int)[ 16, 4096 ], framerate=(fraction)[ 0/1, 2147483647/1 ]</caps>
  </padtemplate>
 </feature>
 <feature typename="GstElementFactory">
  <name>ffdec_wmv3</name>
  <rank>64</rank>
  <longname>FFMPEG Windows Media Video v9 decoder</longname>
  <class>Codec/Decoder/Video</class>
  <description>FFMPEG wmv3 decoder</description>
  <author>Wim Taymans &lt;wim@fluendo.com&gt;, Ronald Bultje &lt;rbultje@ronald.bitfreak.net&gt;</author>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>video/x-raw-rgb; video/x-raw-yuv</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>video/x-wmv, width=(int)[ 16, 4096 ], height=(int)[ 16, 4096 ], framerate=(fraction)[ 0/1, 2147483647/1 ], wmvversion=(int)3</caps>
  </padtemplate>
 </feature>
 <feature typename="GstElementFactory">
  <name>ffdec_wmv2</name>
  <rank>64</rank>
  <longname>FFMPEG Windows Media Video v8 decoder</longname>
  <class>Codec/Decoder/Video</class>
  <description>FFMPEG wmv2 decoder</description>
  <author>Wim Taymans &lt;wim@fluendo.com&gt;, Ronald Bultje &lt;rbultje@ronald.bitfreak.net&gt;</author>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>video/x-raw-rgb; video/x-raw-yuv</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>video/x-wmv, width=(int)[ 16, 4096 ], height=(int)[ 16, 4096 ], framerate=(fraction)[ 0/1, 2147483647/1 ], wmvversion=(int)2</caps>
  </padtemplate>
 </feature>
 <feature typename="GstElementFactory">
  <name>ffdec_wmv1</name>
  <rank>64</rank>
  <longname>FFMPEG Windows Media Video v7 decoder</longname>
  <class>Codec/Decoder/Video</class>
  <description>FFMPEG wmv1 decoder</description>
  <author>Wim Taymans &lt;wim@fluendo.com&gt;, Ronald Bultje &lt;rbultje@ronald.bitfreak.net&gt;</author>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>video/x-raw-rgb; video/x-raw-yuv</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>video/x-wmv, width=(int)[ 16, 4096 ], height=(int)[ 16, 4096 ], framerate=(fraction)[ 0/1, 2147483647/1 ], wmvversion=(int)1</caps>
  </padtemplate>
 </feature>
 <feature typename="GstElementFactory">
  <name>ffdec_vqavideo</name>
  <rank>64</rank>
  <longname>FFMPEG Westwood VQA video decoder</longname>
  <class>Codec/Decoder/Video</class>
  <description>FFMPEG vqavideo decoder</description>
  <author>Wim Taymans &lt;wim@fluendo.com&gt;, Ronald Bultje &lt;rbultje@ronald.bitfreak.net&gt;</author>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>video/x-raw-rgb; video/x-raw-yuv</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>video/x-gst_ff-vqavideo, width=(int)[ 16, 4096 ], height=(int)[ 16, 4096 ], framerate=(fraction)[ 0/1, 2147483647/1 ]</caps>
  </padtemplate>
 </feature>
 <feature typename="GstElementFactory">
  <name>ffdec_vp6f</name>
  <rank>64</rank>
  <longname>FFMPEG VP6 Flash video decoder</longname>
  <class>Codec/Decoder/Video</class>
  <description>FFMPEG vp6f decoder</description>
  <author>Wim Taymans &lt;wim@fluendo.com&gt;, Ronald Bultje &lt;rbultje@ronald.bitfreak.net&gt;</author>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>video/x-raw-rgb; video/x-raw-yuv</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>video/x-vp6-flash, width=(int)[ 16, 4096 ], height=(int)[ 16, 4096 ], framerate=(fraction)[ 0/1, 2147483647/1 ]</caps>
  </padtemplate>
 </feature>
 <feature typename="GstElementFactory">
  <name>ffdec_vp6</name>
  <rank>64</rank>
  <longname>FFMPEG VP6 video decoder</longname>
  <class>Codec/Decoder/Video</class>
  <description>FFMPEG vp6 decoder</description>
  <author>Wim Taymans &lt;wim@fluendo.com&gt;, Ronald Bultje &lt;rbultje@ronald.bitfreak.net&gt;</author>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>video/x-raw-rgb; video/x-raw-yuv</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>video/x-vp6, width=(int)[ 16, 4096 ], height=(int)[ 16, 4096 ], framerate=(fraction)[ 0/1, 2147483647/1 ]</caps>
  </padtemplate>
 </feature>
 <feature typename="GstElementFactory">
  <name>ffdec_vp5</name>
  <rank>64</rank>
  <longname>FFMPEG VP5 video decoder</longname>
  <class>Codec/Decoder/Video</class>
  <description>FFMPEG vp5 decoder</description>
  <author>Wim Taymans &lt;wim@fluendo.com&gt;, Ronald Bultje &lt;rbultje@ronald.bitfreak.net&gt;</author>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>video/x-raw-rgb; video/x-raw-yuv</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>video/x-vp5, width=(int)[ 16, 4096 ], height=(int)[ 16, 4096 ], framerate=(fraction)[ 0/1, 2147483647/1 ]</caps>
  </padtemplate>
 </feature>
 <feature typename="GstElementFactory">
  <name>ffdec_vp3</name>
  <rank>64</rank>
  <longname>FFMPEG VP3 video decoder</longname>
  <class>Codec/Decoder/Video</class>
  <description>FFMPEG vp3 decoder</description>
  <author>Wim Taymans &lt;wim@fluendo.com&gt;, Ronald Bultje &lt;rbultje@ronald.bitfreak.net&gt;</author>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>video/x-raw-rgb; video/x-raw-yuv</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>video/x-vp3, width=(int)[ 16, 4096 ], height=(int)[ 16, 4096 ], framerate=(fraction)[ 0/1, 2147483647/1 ]</caps>
  </padtemplate>
 </feature>
 <feature typename="GstElementFactory">
  <name>ffdec_vmdvideo</name>
  <rank>64</rank>
  <longname>FFMPEG Sierra VMD video decoder</longname>
  <class>Codec/Decoder/Video</class>
  <description>FFMPEG vmdvideo decoder</description>
  <author>Wim Taymans &lt;wim@fluendo.com&gt;, Ronald Bultje &lt;rbultje@ronald.bitfreak.net&gt;</author>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>video/x-raw-rgb; video/x-raw-yuv</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>video/x-gst_ff-vmdvideo, width=(int)[ 16, 4096 ], height=(int)[ 16, 4096 ], framerate=(fraction)[ 0/1, 2147483647/1 ]</caps>
  </padtemplate>
 </feature>
 <feature typename="GstElementFactory">
  <name>ffdec_vcr1</name>
  <rank>64</rank>
  <longname>FFMPEG ATI VCR-1 video decoder</longname>
  <class>Codec/Decoder/Video</class>
  <description>FFMPEG vcr1 decoder</description>
  <author>Wim Taymans &lt;wim@fluendo.com&gt;, Ronald Bultje &lt;rbultje@ronald.bitfreak.net&gt;</author>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>video/x-raw-rgb; video/x-raw-yuv</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>video/x-ati-vcr, width=(int)[ 16, 4096 ], height=(int)[ 16, 4096 ], framerate=(fraction)[ 0/1, 2147483647/1 ], vcrversion=(int)1</caps>
  </padtemplate>
 </feature>
 <feature typename="GstElementFactory">
  <name>ffdec_vc1</name>
  <rank>64</rank>
  <longname>FFMPEG Microsoft Video Codec v1 decoder</longname>
  <class>Codec/Decoder/Video</class>
  <description>FFMPEG vc1 decoder</description>
  <author>Wim Taymans &lt;wim@fluendo.com&gt;, Ronald Bultje &lt;rbultje@ronald.bitfreak.net&gt;</author>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>video/x-raw-rgb; video/x-raw-yuv</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>video/x-wmv, width=(int)[ 16, 4096 ], height=(int)[ 16, 4096 ], framerate=(fraction)[ 0/1, 2147483647/1 ], wmvversion=(int)3</caps>
  </padtemplate>
 </feature>
 <feature typename="GstElementFactory">
  <name>ffdec_ultimotion</name>
  <rank>64</rank>
  <longname>FFMPEG Ultimotion video decoder</longname>
  <class>Codec/Decoder/Video</class>
  <description>FFMPEG ultimotion decoder</description>
  <author>Wim Taymans &lt;wim@fluendo.com&gt;, Ronald Bultje &lt;rbultje@ronald.bitfreak.net&gt;</author>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>video/x-raw-rgb; video/x-raw-yuv</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>video/x-ultimotion, width=(int)[ 16, 4096 ], height=(int)[ 16, 4096 ], framerate=(fraction)[ 0/1, 2147483647/1 ]</caps>
  </padtemplate>
 </feature>
 <feature typename="GstElementFactory">
  <name>ffdec_camtasia</name>
  <rank>64</rank>
  <longname>FFMPEG Techsmith Camtasia video decoder</longname>
  <class>Codec/Decoder/Video</class>
  <description>FFMPEG camtasia decoder</description>
  <author>Wim Taymans &lt;wim@fluendo.com&gt;, Ronald Bultje &lt;rbultje@ronald.bitfreak.net&gt;</author>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>video/x-raw-rgb; video/x-raw-yuv</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>video/x-camtasia, width=(int)[ 16, 4096 ], height=(int)[ 16, 4096 ], framerate=(fraction)[ 0/1, 2147483647/1 ], depth=(int)[ 8, 32 ]</caps>
  </padtemplate>
 </feature>
 <feature typename="GstElementFactory">
  <name>ffdec_truemotion2</name>
  <rank>64</rank>
  <longname>FFMPEG Duck Truemotion 2 video decoder</longname>
  <class>Codec/Decoder/Video</class>
  <description>FFMPEG truemotion2 decoder</description>
  <author>Wim Taymans &lt;wim@fluendo.com&gt;, Ronald Bultje &lt;rbultje@ronald.bitfreak.net&gt;</author>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>video/x-raw-rgb; video/x-raw-yuv</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>video/x-truemotion, width=(int)[ 16, 4096 ], height=(int)[ 16, 4096 ], framerate=(fraction)[ 0/1, 2147483647/1 ], trueversion=(int)2</caps>
  </padtemplate>
 </feature>
 <feature typename="GstElementFactory">
  <name>ffdec_truemotion1</name>
  <rank>64</rank>
  <longname>FFMPEG Duck Truemotion video decoder</longname>
  <class>Codec/Decoder/Video</class>
  <description>FFMPEG truemotion1 decoder</description>
  <author>Wim Taymans &lt;wim@fluendo.com&gt;, Ronald Bultje &lt;rbultje@ronald.bitfreak.net&gt;</author>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>video/x-raw-rgb; video/x-raw-yuv</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>video/x-truemotion, width=(int)[ 16, 4096 ], height=(int)[ 16, 4096 ], framerate=(fraction)[ 0/1, 2147483647/1 ], trueversion=(int)1</caps>
  </padtemplate>
 </feature>
 <feature typename="GstElementFactory">
  <name>ffdec_theora</name>
  <rank>64</rank>
  <longname>FFMPEG Theora video decoder</longname>
  <class>Codec/Decoder/Video</class>
  <description>FFMPEG theora decoder</description>
  <author>Wim Taymans &lt;wim@fluendo.com&gt;, Ronald Bultje &lt;rbultje@ronald.bitfreak.net&gt;</author>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>video/x-raw-rgb; video/x-raw-yuv</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>video/x-theora, width=(int)[ 16, 4096 ], height=(int)[ 16, 4096 ], framerate=(fraction)[ 0/1, 2147483647/1 ]</caps>
  </padtemplate>
 </feature>
 <feature typename="GstElementFactory">
  <name>ffdec_svq3</name>
  <rank>64</rank>
  <longname>FFMPEG Sorensen-3 video decoder</longname>
  <class>Codec/Decoder/Video</class>
  <description>FFMPEG svq3 decoder</description>
  <author>Wim Taymans &lt;wim@fluendo.com&gt;, Ronald Bultje &lt;rbultje@ronald.bitfreak.net&gt;</author>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>video/x-raw-rgb; video/x-raw-yuv</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>video/x-svq, width=(int)[ 16, 4096 ], height=(int)[ 16, 4096 ], framerate=(fraction)[ 0/1, 2147483647/1 ], svqversion=(int)3</caps>
  </padtemplate>
 </feature>
 <feature typename="GstElementFactory">
  <name>ffdec_svq1</name>
  <rank>64</rank>
  <longname>FFMPEG Sorensen-1 video decoder</longname>
  <class>Codec/Decoder/Video</class>
  <description>FFMPEG svq1 decoder</description>
  <author>Wim Taymans &lt;wim@fluendo.com&gt;, Ronald Bultje &lt;rbultje@ronald.bitfreak.net&gt;</author>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>video/x-raw-rgb; video/x-raw-yuv</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>video/x-svq, width=(int)[ 16, 4096 ], height=(int)[ 16, 4096 ], framerate=(fraction)[ 0/1, 2147483647/1 ], svqversion=(int)1</caps>
  </padtemplate>
 </feature>
 <feature typename="GstElementFactory">
  <name>ffdec_sp5x</name>
  <rank>64</rank>
  <longname>FFMPEG Sp5x-like JPEG decoder</longname>
  <class>Codec/Decoder/Video</class>
  <description>FFMPEG sp5x decoder</description>
  <author>Wim Taymans &lt;wim@fluendo.com&gt;, Ronald Bultje &lt;rbultje@ronald.bitfreak.net&gt;</author>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>video/x-raw-rgb; video/x-raw-yuv</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>video/sp5x, width=(int)[ 16, 4096 ], height=(int)[ 16, 4096 ], framerate=(fraction)[ 0/1, 2147483647/1 ]</caps>
  </padtemplate>
 </feature>
 <feature typename="GstElementFactory">
  <name>ffdec_snow</name>
  <rank>64</rank>
  <longname>FFMPEG Snow wave video decoder</longname>
  <class>Codec/Decoder/Video</class>
  <description>FFMPEG snow decoder</description>
  <author>Wim Taymans &lt;wim@fluendo.com&gt;, Ronald Bultje &lt;rbultje@ronald.bitfreak.net&gt;</author>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>video/x-raw-rgb; video/x-raw-yuv</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>video/x-gst_ff-snow, width=(int)[ 16, 4096 ], height=(int)[ 16, 4096 ], framerate=(fraction)[ 0/1, 2147483647/1 ]</caps>
  </padtemplate>
 </feature>
 <feature typename="GstElementFactory">
  <name>ffdec_smc</name>
  <rank>64</rank>
  <longname>FFMPEG Quicktime SMC graphics video decoder</longname>
  <class>Codec/Decoder/Video</class>
  <description>FFMPEG smc decoder</description>
  <author>Wim Taymans &lt;wim@fluendo.com&gt;, Ronald Bultje &lt;rbultje@ronald.bitfreak.net&gt;</author>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>video/x-raw-rgb; video/x-raw-yuv</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>video/x-smc, width=(int)[ 16, 4096 ], height=(int)[ 16, 4096 ], framerate=(fraction)[ 0/1, 2147483647/1 ]</caps>
  </padtemplate>
 </feature>
 <feature typename="GstElementFactory">
  <name>ffdec_rv20</name>
  <rank>64</rank>
  <longname>FFMPEG Realvideo 2.0 decoder</longname>
  <class>Codec/Decoder/Video</class>
  <description>FFMPEG rv20 decoder</description>
  <author>Wim Taymans &lt;wim@fluendo.com&gt;, Ronald Bultje &lt;rbultje@ronald.bitfreak.net&gt;</author>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>video/x-raw-rgb; video/x-raw-yuv</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>video/x-pn-realvideo, width=(int)[ 16, 4096 ], height=(int)[ 16, 4096 ], framerate=(fraction)[ 0/1, 2147483647/1 ], systemstream=(boolean)false, rmversion=(int)2</caps>
  </padtemplate>
 </feature>
 <feature typename="GstElementFactory">
  <name>ffdec_rv10</name>
  <rank>64</rank>
  <longname>FFMPEG Realvideo 1.0 decoder</longname>
  <class>Codec/Decoder/Video</class>
  <description>FFMPEG rv10 decoder</description>
  <author>Wim Taymans &lt;wim@fluendo.com&gt;, Ronald Bultje &lt;rbultje@ronald.bitfreak.net&gt;</author>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>video/x-raw-rgb; video/x-raw-yuv</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>video/x-pn-realvideo, width=(int)[ 16, 4096 ], height=(int)[ 16, 4096 ], framerate=(fraction)[ 0/1, 2147483647/1 ], systemstream=(boolean)false, rmversion=(int)1</caps>
  </padtemplate>
 </feature>
 <feature typename="GstElementFactory">
  <name>ffdec_rpza</name>
  <rank>64</rank>
  <longname>FFMPEG Apple RPZA video decoder</longname>
  <class>Codec/Decoder/Video</class>
  <description>FFMPEG rpza decoder</description>
  <author>Wim Taymans &lt;wim@fluendo.com&gt;, Ronald Bultje &lt;rbultje@ronald.bitfreak.net&gt;</author>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>video/x-raw-rgb; video/x-raw-yuv</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>video/x-apple-video, width=(int)[ 16, 4096 ], height=(int)[ 16, 4096 ], framerate=(fraction)[ 0/1, 2147483647/1 ]</caps>
  </padtemplate>
 </feature>
 <feature typename="GstElementFactory">
  <name>ffdec_roqvideo</name>
  <rank>64</rank>
  <longname>FFMPEG ID/RoQ video decoder</longname>
  <class>Codec/Decoder/Video</class>
  <description>FFMPEG roqvideo decoder</description>
  <author>Wim Taymans &lt;wim@fluendo.com&gt;, Ronald Bultje &lt;rbultje@ronald.bitfreak.net&gt;</author>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>video/x-raw-rgb; video/x-raw-yuv</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>video/x-gst_ff-roqvideo, width=(int)[ 16, 4096 ], height=(int)[ 16, 4096 ], framerate=(fraction)[ 0/1, 2147483647/1 ]</caps>
  </padtemplate>
 </feature>
 <feature typename="GstElementFactory">
  <name>ffdec_qtrle</name>
  <rank>64</rank>
  <longname>FFMPEG Quicktime RLE animation video decoder</longname>
  <class>Codec/Decoder/Video</class>
  <description>FFMPEG qtrle decoder</description>
  <author>Wim Taymans &lt;wim@fluendo.com&gt;, Ronald Bultje &lt;rbultje@ronald.bitfreak.net&gt;</author>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>video/x-raw-rgb; video/x-raw-yuv</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>video/x-rle, width=(int)[ 16, 4096 ], height=(int)[ 16, 4096 ], framerate=(fraction)[ 0/1, 2147483647/1 ], layout=(string)quicktime, depth=(int)[ 1, 64 ]</caps>
  </padtemplate>
 </feature>
 <feature typename="GstElementFactory">
  <name>ffdec_qpeg</name>
  <rank>64</rank>
  <longname>FFMPEG QPEG video decoder</longname>
  <class>Codec/Decoder/Video</class>
  <description>FFMPEG qpeg decoder</description>
  <author>Wim Taymans &lt;wim@fluendo.com&gt;, Ronald Bultje &lt;rbultje@ronald.bitfreak.net&gt;</author>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>video/x-raw-rgb; video/x-raw-yuv</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>video/x-gst_ff-qpeg, width=(int)[ 16, 4096 ], height=(int)[ 16, 4096 ], framerate=(fraction)[ 0/1, 2147483647/1 ]</caps>
  </padtemplate>
 </feature>
 <feature typename="GstElementFactory">
  <name>ffdec_qdraw</name>
  <rank>64</rank>
  <longname>FFMPEG Apple Quickdraw video decoder</longname>
  <class>Codec/Decoder/Video</class>
  <description>FFMPEG qdraw decoder</description>
  <author>Wim Taymans &lt;wim@fluendo.com&gt;, Ronald Bultje &lt;rbultje@ronald.bitfreak.net&gt;</author>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>video/x-raw-rgb; video/x-raw-yuv</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>video/x-qdrw, width=(int)[ 16, 4096 ], height=(int)[ 16, 4096 ], framerate=(fraction)[ 0/1, 2147483647/1 ]</caps>
  </padtemplate>
 </feature>
 <feature typename="GstElementFactory">
  <name>ffdec_ppm</name>
  <rank>64</rank>
  <longname>FFMPEG PPM image decoder</longname>
  <class>Codec/Decoder/Video</class>
  <description>FFMPEG ppm decoder</description>
  <author>Wim Taymans &lt;wim@fluendo.com&gt;, Ronald Bultje &lt;rbultje@ronald.bitfreak.net&gt;</author>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>video/x-raw-rgb; video/x-raw-yuv</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>image/ppm, width=(int)[ 16, 4096 ], height=(int)[ 16, 4096 ], framerate=(fraction)[ 0/1, 2147483647/1 ]</caps>
  </padtemplate>
 </feature>
 <feature typename="GstElementFactory">
  <name>ffdec_png</name>
  <rank>64</rank>
  <longname>FFMPEG PNG image decoder</longname>
  <class>Codec/Decoder/Video</class>
  <description>FFMPEG png decoder</description>
  <author>Wim Taymans &lt;wim@fluendo.com&gt;, Ronald Bultje &lt;rbultje@ronald.bitfreak.net&gt;</author>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>video/x-raw-rgb; video/x-raw-yuv</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>image/png, width=(int)[ 16, 4096 ], height=(int)[ 16, 4096 ], framerate=(fraction)[ 0/1, 2147483647/1 ]</caps>
  </padtemplate>
 </feature>
 <feature typename="GstElementFactory">
  <name>ffdec_pgmyuv</name>
  <rank>64</rank>
  <longname>FFMPEG PGM-YUV image decoder</longname>
  <class>Codec/Decoder/Video</class>
  <description>FFMPEG pgmyuv decoder</description>
  <author>Wim Taymans &lt;wim@fluendo.com&gt;, Ronald Bultje &lt;rbultje@ronald.bitfreak.net&gt;</author>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>video/x-raw-rgb; video/x-raw-yuv</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>video/x-gst_ff-pgmyuv, width=(int)[ 16, 4096 ], height=(int)[ 16, 4096 ], framerate=(fraction)[ 0/1, 2147483647/1 ]</caps>
  </padtemplate>
 </feature>
 <feature typename="GstElementFactory">
  <name>ffdec_pgm</name>
  <rank>64</rank>
  <longname>FFMPEG PGM image decoder</longname>
  <class>Codec/Decoder/Video</class>
  <description>FFMPEG pgm decoder</description>
  <author>Wim Taymans &lt;wim@fluendo.com&gt;, Ronald Bultje &lt;rbultje@ronald.bitfreak.net&gt;</author>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>video/x-raw-rgb; video/x-raw-yuv</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>video/x-gst_ff-pgm, width=(int)[ 16, 4096 ], height=(int)[ 16, 4096 ], framerate=(fraction)[ 0/1, 2147483647/1 ]</caps>
  </padtemplate>
 </feature>
 <feature typename="GstElementFactory">
  <name>ffdec_pbm</name>
  <rank>64</rank>
  <longname>FFMPEG PBM image decoder</longname>
  <class>Codec/Decoder/Video</class>
  <description>FFMPEG pbm decoder</description>
  <author>Wim Taymans &lt;wim@fluendo.com&gt;, Ronald Bultje &lt;rbultje@ronald.bitfreak.net&gt;</author>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>video/x-raw-rgb; video/x-raw-yuv</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>image/pbm, width=(int)[ 16, 4096 ], height=(int)[ 16, 4096 ], framerate=(fraction)[ 0/1, 2147483647/1 ]</caps>
  </padtemplate>
 </feature>
 <feature typename="GstElementFactory">
  <name>ffdec_pam</name>
  <rank>64</rank>
  <longname>FFMPEG PAM image decoder</longname>
  <class>Codec/Decoder/Video</class>
  <description>FFMPEG pam decoder</description>
  <author>Wim Taymans &lt;wim@fluendo.com&gt;, Ronald Bultje &lt;rbultje@ronald.bitfreak.net&gt;</author>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>video/x-raw-rgb; video/x-raw-yuv</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>video/x-gst_ff-pam, width=(int)[ 16, 4096 ], height=(int)[ 16, 4096 ], framerate=(fraction)[ 0/1, 2147483647/1 ]</caps>
  </padtemplate>
 </feature>
 <feature typename="GstElementFactory">
  <name>ffdec_mszh</name>
  <rank>64</rank>
  <longname>FFMPEG Lossless MSZH video decoder</longname>
  <class>Codec/Decoder/Video</class>
  <description>FFMPEG mszh decoder</description>
  <author>Wim Taymans &lt;wim@fluendo.com&gt;, Ronald Bultje &lt;rbultje@ronald.bitfreak.net&gt;</author>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>video/x-raw-rgb; video/x-raw-yuv</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>video/x-mszh, width=(int)[ 16, 4096 ], height=(int)[ 16, 4096 ], framerate=(fraction)[ 0/1, 2147483647/1 ]</caps>
  </padtemplate>
 </feature>
 <feature typename="GstElementFactory">
  <name>ffdec_msvideo1</name>
  <rank>64</rank>
  <longname>FFMPEG Microsoft video v1 decoder</longname>
  <class>Codec/Decoder/Video</class>
  <description>FFMPEG msvideo1 decoder</description>
  <author>Wim Taymans &lt;wim@fluendo.com&gt;, Ronald Bultje &lt;rbultje@ronald.bitfreak.net&gt;</author>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>video/x-raw-rgb; video/x-raw-yuv</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>video/x-msvideocodec, width=(int)[ 16, 4096 ], height=(int)[ 16, 4096 ], framerate=(fraction)[ 0/1, 2147483647/1 ], msvideoversion=(int)1</caps>
  </padtemplate>
 </feature>
 <feature typename="GstElementFactory">
  <name>ffdec_msrle</name>
  <rank>64</rank>
  <longname>FFMPEG Microsoft RLE video decoder</longname>
  <class>Codec/Decoder/Video</class>
  <description>FFMPEG msrle decoder</description>
  <author>Wim Taymans &lt;wim@fluendo.com&gt;, Ronald Bultje &lt;rbultje@ronald.bitfreak.net&gt;</author>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>video/x-raw-rgb; video/x-raw-yuv</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>video/x-rle, width=(int)[ 16, 4096 ], height=(int)[ 16, 4096 ], framerate=(fraction)[ 0/1, 2147483647/1 ], layout=(string)microsoft, depth=(int)[ 1, 64 ]</caps>
  </padtemplate>
 </feature>
 <feature typename="GstElementFactory">
  <name>ffdec_msmpeg4</name>
  <rank>256</rank>
  <longname>FFMPEG Microsoft MPEG-4 v3 decoder</longname>
  <class>Codec/Decoder/Video</class>
  <description>FFMPEG msmpeg4 decoder</description>
  <author>Wim Taymans &lt;wim@fluendo.com&gt;, Ronald Bultje &lt;rbultje@ronald.bitfreak.net&gt;</author>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>video/x-raw-rgb; video/x-raw-yuv</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>video/x-msmpeg, width=(int)[ 16, 4096 ], height=(int)[ 16, 4096 ], framerate=(fraction)[ 0/1, 2147483647/1 ], msmpegversion=(int)43; video/x-divx, width=(int)[ 16, 4096 ], height=(int)[ 16, 4096 ], framerate=(fraction)[ 0/1, 2147483647/1 ], divxversion=(int)3</caps>
  </padtemplate>
 </feature>
 <feature typename="GstElementFactory">
  <name>ffdec_msmpeg4v2</name>
  <rank>64</rank>
  <longname>FFMPEG Microsoft MPEG-4 v2 decoder</longname>
  <class>Codec/Decoder/Video</class>
  <description>FFMPEG msmpeg4v2 decoder</description>
  <author>Wim Taymans &lt;wim@fluendo.com&gt;, Ronald Bultje &lt;rbultje@ronald.bitfreak.net&gt;</author>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>video/x-raw-rgb; video/x-raw-yuv</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>video/x-msmpeg, width=(int)[ 16, 4096 ], height=(int)[ 16, 4096 ], framerate=(fraction)[ 0/1, 2147483647/1 ], msmpegversion=(int)42</caps>
  </padtemplate>
 </feature>
 <feature typename="GstElementFactory">
  <name>ffdec_msmpeg4v1</name>
  <rank>64</rank>
  <longname>FFMPEG Microsoft MPEG-4 v1 decoder</longname>
  <class>Codec/Decoder/Video</class>
  <description>FFMPEG msmpeg4v1 decoder</description>
  <author>Wim Taymans &lt;wim@fluendo.com&gt;, Ronald Bultje &lt;rbultje@ronald.bitfreak.net&gt;</author>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>video/x-raw-rgb; video/x-raw-yuv</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>video/x-msmpeg, width=(int)[ 16, 4096 ], height=(int)[ 16, 4096 ], framerate=(fraction)[ 0/1, 2147483647/1 ], msmpegversion=(int)41</caps>
  </padtemplate>
 </feature>
 <feature typename="GstElementFactory">
  <name>ffdec_mpegvideo</name>
  <longname>FFMPEG MPEG-2 video decoder</longname>
  <class>Codec/Decoder/Video</class>
  <description>FFMPEG mpegvideo decoder</description>
  <author>Wim Taymans &lt;wim@fluendo.com&gt;, Ronald Bultje &lt;rbultje@ronald.bitfreak.net&gt;</author>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>video/x-raw-rgb; video/x-raw-yuv</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>video/mpeg, mpegversion=(int)[ 1, 2 ], systemstream=(boolean)false</caps>
  </padtemplate>
 </feature>
 <feature typename="GstElementFactory">
  <name>ffdec_mpeg4</name>
  <rank>256</rank>
  <longname>FFMPEG MPEG-4 compatible video decoder</longname>
  <class>Codec/Decoder/Video</class>
  <description>FFMPEG mpeg4 decoder</description>
  <author>Wim Taymans &lt;wim@fluendo.com&gt;, Ronald Bultje &lt;rbultje@ronald.bitfreak.net&gt;</author>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>video/x-raw-rgb; video/x-raw-yuv</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>video/mpeg, width=(int)[ 16, 4096 ], height=(int)[ 16, 4096 ], framerate=(fraction)[ 0/1, 2147483647/1 ], mpegversion=(int)4, systemstream=(boolean)false; video/x-divx, width=(int)[ 16, 4096 ], height=(int)[ 16, 4096 ], framerate=(fraction)[ 0/1, 2147483647/1 ], divxversion=(int)[ 4, 5 ]; video/x-xvid, width=(int)[ 16, 4096 ], height=(int)[ 16, 4096 ], framerate=(fraction)[ 0/1, 2147483647/1 ]; video/x-3ivx, width=(int)[ 16, 4096 ], height=(int)[ 16, 4096 ], framerate=(fraction)[ 0/1, 2147483647/1 ]</caps>
  </padtemplate>
 </feature>
 <feature typename="GstElementFactory">
  <name>ffdec_mpeg2video</name>
  <longname>FFMPEG MPEG-2 video decoder</longname>
  <class>Codec/Decoder/Video</class>
  <description>FFMPEG mpeg2video decoder</description>
  <author>Wim Taymans &lt;wim@fluendo.com&gt;, Ronald Bultje &lt;rbultje@ronald.bitfreak.net&gt;</author>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>video/x-raw-rgb; video/x-raw-yuv</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>video/mpeg, mpegversion=(int)[ 1, 2 ], systemstream=(boolean)false</caps>
  </padtemplate>
 </feature>
 <feature typename="GstElementFactory">
  <name>ffdec_mmvideo</name>
  <rank>64</rank>
  <longname>FFMPEG American Laser Games MM Video decoder</longname>
  <class>Codec/Decoder/Video</class>
  <description>FFMPEG mmvideo decoder</description>
  <author>Wim Taymans &lt;wim@fluendo.com&gt;, Ronald Bultje &lt;rbultje@ronald.bitfreak.net&gt;</author>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>video/x-raw-rgb; video/x-raw-yuv</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>video/x-gst_ff-mmvideo, width=(int)[ 16, 4096 ], height=(int)[ 16, 4096 ], framerate=(fraction)[ 0/1, 2147483647/1 ]</caps>
  </padtemplate>
 </feature>
 <feature typename="GstElementFactory">
  <name>ffdec_mjpegb</name>
  <rank>64</rank>
  <longname>FFMPEG Quicktime Motion-JPEG B decoder</longname>
  <class>Codec/Decoder/Video</class>
  <description>FFMPEG mjpegb decoder</description>
  <author>Wim Taymans &lt;wim@fluendo.com&gt;, Ronald Bultje &lt;rbultje@ronald.bitfreak.net&gt;</author>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>video/x-raw-rgb; video/x-raw-yuv</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>video/x-mjpeg-b, width=(int)[ 16, 4096 ], height=(int)[ 16, 4096 ], framerate=(fraction)[ 0/1, 2147483647/1 ]</caps>
  </padtemplate>
 </feature>
 <feature typename="GstElementFactory">
  <name>ffdec_mjpeg</name>
  <rank>64</rank>
  <longname>FFMPEG Motion-JPEG decoder</longname>
  <class>Codec/Decoder/Video</class>
  <description>FFMPEG mjpeg decoder</description>
  <author>Wim Taymans &lt;wim@fluendo.com&gt;, Ronald Bultje &lt;rbultje@ronald.bitfreak.net&gt;</author>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>video/x-raw-rgb; video/x-raw-yuv</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>image/jpeg, width=(int)[ 16, 4096 ], height=(int)[ 16, 4096 ], framerate=(fraction)[ 0/1, 2147483647/1 ]</caps>
  </padtemplate>
 </feature>
 <feature typename="GstElementFactory">
  <name>ffdec_mdec</name>
  <rank>64</rank>
  <longname>FFMPEG Playstation MDEC video decoder</longname>
  <class>Codec/Decoder/Video</class>
  <description>FFMPEG mdec decoder</description>
  <author>Wim Taymans &lt;wim@fluendo.com&gt;, Ronald Bultje &lt;rbultje@ronald.bitfreak.net&gt;</author>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>video/x-raw-rgb; video/x-raw-yuv</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>video/x-gst_ff-mdec, width=(int)[ 16, 4096 ], height=(int)[ 16, 4096 ], framerate=(fraction)[ 0/1, 2147483647/1 ]</caps>
  </padtemplate>
 </feature>
 <feature typename="GstElementFactory">
  <name>ffdec_loco</name>
  <rank>64</rank>
  <longname>FFMPEG LOCO video decoder</longname>
  <class>Codec/Decoder/Video</class>
  <description>FFMPEG loco decoder</description>
  <author>Wim Taymans &lt;wim@fluendo.com&gt;, Ronald Bultje &lt;rbultje@ronald.bitfreak.net&gt;</author>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>video/x-raw-rgb; video/x-raw-yuv</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>video/x-gst_ff-loco, width=(int)[ 16, 4096 ], height=(int)[ 16, 4096 ], framerate=(fraction)[ 0/1, 2147483647/1 ]</caps>
  </padtemplate>
 </feature>
 <feature typename="GstElementFactory">
  <name>ffdec_interplayvideo</name>
  <rank>64</rank>
  <longname>FFMPEG Interplay video decoder</longname>
  <class>Codec/Decoder/Video</class>
  <description>FFMPEG interplayvideo decoder</description>
  <author>Wim Taymans &lt;wim@fluendo.com&gt;, Ronald Bultje &lt;rbultje@ronald.bitfreak.net&gt;</author>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>video/x-raw-rgb; video/x-raw-yuv</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>video/x-gst_ff-interplayvideo, width=(int)[ 16, 4096 ], height=(int)[ 16, 4096 ], framerate=(fraction)[ 0/1, 2147483647/1 ]</caps>
  </padtemplate>
 </feature>
 <feature typename="GstElementFactory">
  <name>ffdec_indeo3</name>
  <rank>64</rank>
  <longname>FFMPEG Indeo-3 video decoder</longname>
  <class>Codec/Decoder/Video</class>
  <description>FFMPEG indeo3 decoder</description>
  <author>Wim Taymans &lt;wim@fluendo.com&gt;, Ronald Bultje &lt;rbultje@ronald.bitfreak.net&gt;</author>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>video/x-raw-rgb; video/x-raw-yuv</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>video/x-indeo, width=(int)[ 16, 4096 ], height=(int)[ 16, 4096 ], framerate=(fraction)[ 0/1, 2147483647/1 ], indeoversion=(int)3</caps>
  </padtemplate>
 </feature>
 <feature typename="GstElementFactory">
  <name>ffdec_indeo2</name>
  <rank>64</rank>
  <longname>FFMPEG Indeo-2 video decoder</longname>
  <class>Codec/Decoder/Video</class>
  <description>FFMPEG indeo2 decoder</description>
  <author>Wim Taymans &lt;wim@fluendo.com&gt;, Ronald Bultje &lt;rbultje@ronald.bitfreak.net&gt;</author>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>video/x-raw-rgb; video/x-raw-yuv</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>video/x-indeo, width=(int)[ 16, 4096 ], height=(int)[ 16, 4096 ], framerate=(fraction)[ 0/1, 2147483647/1 ], indeoversion=(int)2</caps>
  </padtemplate>
 </feature>
 <feature typename="GstElementFactory">
  <name>ffdec_idcinvideo</name>
  <rank>64</rank>
  <longname>FFMPEG ID Quake II CIN video decoder</longname>
  <class>Codec/Decoder/Video</class>
  <description>FFMPEG idcinvideo decoder</description>
  <author>Wim Taymans &lt;wim@fluendo.com&gt;, Ronald Bultje &lt;rbultje@ronald.bitfreak.net&gt;</author>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>video/x-raw-rgb; video/x-raw-yuv</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>video/x-gst_ff-idcinvideo, width=(int)[ 16, 4096 ], height=(int)[ 16, 4096 ], framerate=(fraction)[ 0/1, 2147483647/1 ]</caps>
  </padtemplate>
 </feature>
 <feature typename="GstElementFactory">
  <name>ffdec_huffyuv</name>
  <rank>64</rank>
  <longname>FFMPEG Huffyuv lossless video decoder</longname>
  <class>Codec/Decoder/Video</class>
  <description>FFMPEG huffyuv decoder</description>
  <author>Wim Taymans &lt;wim@fluendo.com&gt;, Ronald Bultje &lt;rbultje@ronald.bitfreak.net&gt;</author>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>video/x-raw-rgb; video/x-raw-yuv</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>video/x-huffyuv, width=(int)[ 16, 4096 ], height=(int)[ 16, 4096 ], framerate=(fraction)[ 0/1, 2147483647/1 ]</caps>
  </padtemplate>
 </feature>
 <feature typename="GstElementFactory">
  <name>ffdec_h264</name>
  <rank>256</rank>
  <longname>FFMPEG H.264 video decoder</longname>
  <class>Codec/Decoder/Video</class>
  <description>FFMPEG h264 decoder</description>
  <author>Wim Taymans &lt;wim@fluendo.com&gt;, Ronald Bultje &lt;rbultje@ronald.bitfreak.net&gt;</author>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>video/x-raw-rgb; video/x-raw-yuv</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>video/x-h264, width=(int)[ 16, 4096 ], height=(int)[ 16, 4096 ], framerate=(fraction)[ 0/1, 2147483647/1 ]</caps>
  </padtemplate>
 </feature>
 <feature typename="GstElementFactory">
  <name>ffdec_h263i</name>
  <rank>64</rank>
  <longname>FFMPEG Intel H.263 video decoder</longname>
  <class>Codec/Decoder/Video</class>
  <description>FFMPEG h263i decoder</description>
  <author>Wim Taymans &lt;wim@fluendo.com&gt;, Ronald Bultje &lt;rbultje@ronald.bitfreak.net&gt;</author>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>video/x-raw-rgb; video/x-raw-yuv</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>video/x-intel-h263, width=(int)[ 16, 4096 ], height=(int)[ 16, 4096 ], framerate=(fraction)[ 0/1, 2147483647/1 ], variant=(string)intel</caps>
  </padtemplate>
 </feature>
 <feature typename="GstElementFactory">
  <name>ffdec_h263</name>
  <rank>64</rank>
  <longname>FFMPEG H.263 video decoder</longname>
  <class>Codec/Decoder/Video</class>
  <description>FFMPEG h263 decoder</description>
  <author>Wim Taymans &lt;wim@fluendo.com&gt;, Ronald Bultje &lt;rbultje@ronald.bitfreak.net&gt;</author>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>video/x-raw-rgb; video/x-raw-yuv</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>video/x-h263, width=(int)[ 16, 4096 ], height=(int)[ 16, 4096 ], framerate=(fraction)[ 0/1, 2147483647/1 ], variant=(string)itu</caps>
  </padtemplate>
 </feature>
 <feature typename="GstElementFactory">
  <name>ffdec_h261</name>
  <rank>64</rank>
  <longname>FFMPEG H.261 video decoder</longname>
  <class>Codec/Decoder/Video</class>
  <description>FFMPEG h261 decoder</description>
  <author>Wim Taymans &lt;wim@fluendo.com&gt;, Ronald Bultje &lt;rbultje@ronald.bitfreak.net&gt;</author>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>video/x-raw-rgb; video/x-raw-yuv</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>video/x-h261, width=(int)[ 16, 4096 ], height=(int)[ 16, 4096 ], framerate=(fraction)[ 0/1, 2147483647/1 ]</caps>
  </padtemplate>
 </feature>
 <feature typename="GstElementFactory">
  <name>ffdec_fraps</name>
  <rank>64</rank>
  <longname>FFMPEG FRAPS video decoder</longname>
  <class>Codec/Decoder/Video</class>
  <description>FFMPEG fraps decoder</description>
  <author>Wim Taymans &lt;wim@fluendo.com&gt;, Ronald Bultje &lt;rbultje@ronald.bitfreak.net&gt;</author>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>video/x-raw-rgb; video/x-raw-yuv</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>video/x-gst_ff-fraps, width=(int)[ 16, 4096 ], height=(int)[ 16, 4096 ], framerate=(fraction)[ 0/1, 2147483647/1 ]</caps>
  </padtemplate>
 </feature>
 <feature typename="GstElementFactory">
  <name>ffdec_4xm</name>
  <rank>64</rank>
  <longname>FFMPEG 4-XM video decoder</longname>
  <class>Codec/Decoder/Video</class>
  <description>FFMPEG 4xm decoder</description>
  <author>Wim Taymans &lt;wim@fluendo.com&gt;, Ronald Bultje &lt;rbultje@ronald.bitfreak.net&gt;</author>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>video/x-raw-rgb; video/x-raw-yuv</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>video/x-4xm, width=(int)[ 16, 4096 ], height=(int)[ 16, 4096 ], framerate=(fraction)[ 0/1, 2147483647/1 ]</caps>
  </padtemplate>
 </feature>
 <feature typename="GstElementFactory">
  <name>ffdec_flv</name>
  <rank>64</rank>
  <longname>FFMPEG FLV video decoder</longname>
  <class>Codec/Decoder/Video</class>
  <description>FFMPEG flv decoder</description>
  <author>Wim Taymans &lt;wim@fluendo.com&gt;, Ronald Bultje &lt;rbultje@ronald.bitfreak.net&gt;</author>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>video/x-raw-rgb; video/x-raw-yuv</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>video/x-flash-video, width=(int)[ 16, 4096 ], height=(int)[ 16, 4096 ], framerate=(fraction)[ 0/1, 2147483647/1 ], flvversion=(int)1</caps>
  </padtemplate>
 </feature>
 <feature typename="GstElementFactory">
  <name>ffdec_flic</name>
  <rank>64</rank>
  <longname>FFMPEG FLIC animation video decoder</longname>
  <class>Codec/Decoder/Video</class>
  <description>FFMPEG flic decoder</description>
  <author>Wim Taymans &lt;wim@fluendo.com&gt;, Ronald Bultje &lt;rbultje@ronald.bitfreak.net&gt;</author>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>video/x-raw-rgb; video/x-raw-yuv</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>video/x-gst_ff-flic, width=(int)[ 16, 4096 ], height=(int)[ 16, 4096 ], framerate=(fraction)[ 0/1, 2147483647/1 ]</caps>
  </padtemplate>
 </feature>
 <feature typename="GstElementFactory">
  <name>ffdec_flashsv</name>
  <rank>64</rank>
  <longname>FFMPEG Flash Screen Video decoder</longname>
  <class>Codec/Decoder/Video</class>
  <description>FFMPEG flashsv decoder</description>
  <author>Wim Taymans &lt;wim@fluendo.com&gt;, Ronald Bultje &lt;rbultje@ronald.bitfreak.net&gt;</author>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>video/x-raw-rgb; video/x-raw-yuv</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>video/x-flash-screen, width=(int)[ 16, 4096 ], height=(int)[ 16, 4096 ], framerate=(fraction)[ 0/1, 2147483647/1 ]</caps>
  </padtemplate>
 </feature>
 <feature typename="GstElementFactory">
  <name>ffdec_ffvhuff</name>
  <rank>64</rank>
  <longname>FFMPEG FFMPEG non-compliant Huffyuv video decoder</longname>
  <class>Codec/Decoder/Video</class>
  <description>FFMPEG ffvhuff decoder</description>
  <author>Wim Taymans &lt;wim@fluendo.com&gt;, Ronald Bultje &lt;rbultje@ronald.bitfreak.net&gt;</author>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>video/x-raw-rgb; video/x-raw-yuv</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>video/x-gst_ff-ffvhuff, width=(int)[ 16, 4096 ], height=(int)[ 16, 4096 ], framerate=(fraction)[ 0/1, 2147483647/1 ]</caps>
  </padtemplate>
 </feature>
 <feature typename="GstElementFactory">
  <name>ffdec_ffv1</name>
  <rank>64</rank>
  <longname>FFMPEG FFMpeg video v1 decoder</longname>
  <class>Codec/Decoder/Video</class>
  <description>FFMPEG ffv1 decoder</description>
  <author>Wim Taymans &lt;wim@fluendo.com&gt;, Ronald Bultje &lt;rbultje@ronald.bitfreak.net&gt;</author>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>video/x-raw-rgb; video/x-raw-yuv</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>video/x-ffv, width=(int)[ 16, 4096 ], height=(int)[ 16, 4096 ], framerate=(fraction)[ 0/1, 2147483647/1 ], ffvversion=(int)1</caps>
  </padtemplate>
 </feature>
 <feature typename="GstElementFactory">
  <name>ffdec_8bps</name>
  <rank>64</rank>
  <longname>FFMPEG Quicktime planar 8bps video decoder</longname>
  <class>Codec/Decoder/Video</class>
  <description>FFMPEG 8bps decoder</description>
  <author>Wim Taymans &lt;wim@fluendo.com&gt;, Ronald Bultje &lt;rbultje@ronald.bitfreak.net&gt;</author>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>video/x-raw-rgb; video/x-raw-yuv</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>video/x-gst_ff-8bps, width=(int)[ 16, 4096 ], height=(int)[ 16, 4096 ], framerate=(fraction)[ 0/1, 2147483647/1 ]</caps>
  </padtemplate>
 </feature>
 <feature typename="GstElementFactory">
  <name>ffdec_dvvideo</name>
  <rank>128</rank>
  <longname>FFMPEG Digital video decoder</longname>
  <class>Codec/Decoder/Video</class>
  <description>FFMPEG dvvideo decoder</description>
  <author>Wim Taymans &lt;wim@fluendo.com&gt;, Ronald Bultje &lt;rbultje@ronald.bitfreak.net&gt;</author>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>video/x-raw-rgb; video/x-raw-yuv</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>video/x-dv, width=(int)[ 16, 4096 ], height=(int)[ 16, 4096 ], framerate=(fraction)[ 0/1, 2147483647/1 ], systemstream=(boolean)false</caps>
  </padtemplate>
 </feature>
 <feature typename="GstElementFactory">
  <name>ffdec_dca</name>
  <rank>64</rank>
  <longname>FFMPEG DTS Audio decoder</longname>
  <class>Codec/Decoder/Audio</class>
  <description>FFMPEG dca decoder</description>
  <author>Wim Taymans &lt;wim@fluendo.com&gt;, Ronald Bultje &lt;rbultje@ronald.bitfreak.net&gt;</author>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>audio/x-raw-int, rate=(int)[ 8000, 96000 ], channels=(int)[ 1, 2 ], signed=(boolean)true, endianness=(int)1234, width=(int)16, depth=(int)16</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>audio/x-dts, rate=(int)[ 8000, 96000 ], channels=(int)[ 1, 2 ]</caps>
  </padtemplate>
 </feature>
 <feature typename="GstElementFactory">
  <name>ffdec_cyuv</name>
  <rank>64</rank>
  <longname>FFMPEG CYUV lossless video decoder</longname>
  <class>Codec/Decoder/Video</class>
  <description>FFMPEG cyuv decoder</description>
  <author>Wim Taymans &lt;wim@fluendo.com&gt;, Ronald Bultje &lt;rbultje@ronald.bitfreak.net&gt;</author>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>video/x-raw-rgb; video/x-raw-yuv</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>video/x-compressed-yuv, width=(int)[ 16, 4096 ], height=(int)[ 16, 4096 ], framerate=(fraction)[ 0/1, 2147483647/1 ]</caps>
  </padtemplate>
 </feature>
 <feature typename="GstElementFactory">
  <name>ffdec_camstudio</name>
  <rank>64</rank>
  <longname>FFMPEG CamStudio video decoder</longname>
  <class>Codec/Decoder/Video</class>
  <description>FFMPEG camstudio decoder</description>
  <author>Wim Taymans &lt;wim@fluendo.com&gt;, Ronald Bultje &lt;rbultje@ronald.bitfreak.net&gt;</author>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>video/x-raw-rgb; video/x-raw-yuv</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>video/x-gst_ff-camstudio, width=(int)[ 16, 4096 ], height=(int)[ 16, 4096 ], framerate=(fraction)[ 0/1, 2147483647/1 ]</caps>
  </padtemplate>
 </feature>
 <feature typename="GstElementFactory">
  <name>ffdec_cljr</name>
  <rank>64</rank>
  <longname>FFMPEG Cirrus Logipak AccuPak video decoder</longname>
  <class>Codec/Decoder/Video</class>
  <description>FFMPEG cljr decoder</description>
  <author>Wim Taymans &lt;wim@fluendo.com&gt;, Ronald Bultje &lt;rbultje@ronald.bitfreak.net&gt;</author>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>video/x-raw-rgb; video/x-raw-yuv</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>video/x-cirrus-logic-accupak, width=(int)[ 16, 4096 ], height=(int)[ 16, 4096 ], framerate=(fraction)[ 0/1, 2147483647/1 ]</caps>
  </padtemplate>
 </feature>
 <feature typename="GstElementFactory">
  <name>ffdec_cinepak</name>
  <rank>64</rank>
  <longname>FFMPEG Cinepak video decoder</longname>
  <class>Codec/Decoder/Video</class>
  <description>FFMPEG cinepak decoder</description>
  <author>Wim Taymans &lt;wim@fluendo.com&gt;, Ronald Bultje &lt;rbultje@ronald.bitfreak.net&gt;</author>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>video/x-raw-rgb; video/x-raw-yuv</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>video/x-cinepak, width=(int)[ 16, 4096 ], height=(int)[ 16, 4096 ], framerate=(fraction)[ 0/1, 2147483647/1 ]</caps>
  </padtemplate>
 </feature>
 <feature typename="GstElementFactory">
  <name>ffdec_cavs</name>
  <rank>64</rank>
  <longname>FFMPEG Chinese AVS Video decoder</longname>
  <class>Codec/Decoder/Video</class>
  <description>FFMPEG cavs decoder</description>
  <author>Wim Taymans &lt;wim@fluendo.com&gt;, Ronald Bultje &lt;rbultje@ronald.bitfreak.net&gt;</author>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>video/x-raw-rgb; video/x-raw-yuv</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>video/x-gst_ff-cavs, width=(int)[ 16, 4096 ], height=(int)[ 16, 4096 ], framerate=(fraction)[ 0/1, 2147483647/1 ]</caps>
  </padtemplate>
 </feature>
 <feature typename="GstElementFactory">
  <name>ffdec_bmp</name>
  <rank>64</rank>
  <longname>FFMPEG BMP bitmap decoder</longname>
  <class>Codec/Decoder/Video</class>
  <description>FFMPEG bmp decoder</description>
  <author>Wim Taymans &lt;wim@fluendo.com&gt;, Ronald Bultje &lt;rbultje@ronald.bitfreak.net&gt;</author>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>video/x-raw-rgb; video/x-raw-yuv</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>image/bmp</caps>
  </padtemplate>
 </feature>
 <feature typename="GstElementFactory">
  <name>ffdec_avs</name>
  <rank>64</rank>
  <longname>FFMPEG AVS Video decoder</longname>
  <class>Codec/Decoder/Video</class>
  <description>FFMPEG avs decoder</description>
  <author>Wim Taymans &lt;wim@fluendo.com&gt;, Ronald Bultje &lt;rbultje@ronald.bitfreak.net&gt;</author>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>video/x-raw-rgb; video/x-raw-yuv</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>video/x-gst_ff-avs, width=(int)[ 16, 4096 ], height=(int)[ 16, 4096 ], framerate=(fraction)[ 0/1, 2147483647/1 ]</caps>
  </padtemplate>
 </feature>
 <feature typename="GstElementFactory">
  <name>ffdec_asv2</name>
  <rank>64</rank>
  <longname>FFMPEG Asus video v2 decoder</longname>
  <class>Codec/Decoder/Video</class>
  <description>FFMPEG asv2 decoder</description>
  <author>Wim Taymans &lt;wim@fluendo.com&gt;, Ronald Bultje &lt;rbultje@ronald.bitfreak.net&gt;</author>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>video/x-raw-rgb; video/x-raw-yuv</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>video/x-asus, width=(int)[ 16, 4096 ], height=(int)[ 16, 4096 ], framerate=(fraction)[ 0/1, 2147483647/1 ], asusversion=(int)2</caps>
  </padtemplate>
 </feature>
 <feature typename="GstElementFactory">
  <name>ffdec_asv1</name>
  <rank>64</rank>
  <longname>FFMPEG Asus video v1 decoder</longname>
  <class>Codec/Decoder/Video</class>
  <description>FFMPEG asv1 decoder</description>
  <author>Wim Taymans &lt;wim@fluendo.com&gt;, Ronald Bultje &lt;rbultje@ronald.bitfreak.net&gt;</author>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>video/x-raw-rgb; video/x-raw-yuv</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>video/x-asus, width=(int)[ 16, 4096 ], height=(int)[ 16, 4096 ], framerate=(fraction)[ 0/1, 2147483647/1 ], asusversion=(int)1</caps>
  </padtemplate>
 </feature>
 <feature typename="GstElementFactory">
  <name>ffdec_aasc</name>
  <rank>64</rank>
  <longname>FFMPEG Autodesk RLE video decoder</longname>
  <class>Codec/Decoder/Video</class>
  <description>FFMPEG aasc decoder</description>
  <author>Wim Taymans &lt;wim@fluendo.com&gt;, Ronald Bultje &lt;rbultje@ronald.bitfreak.net&gt;</author>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>video/x-raw-rgb; video/x-raw-yuv</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>video/x-gst_ff-aasc, width=(int)[ 16, 4096 ], height=(int)[ 16, 4096 ], framerate=(fraction)[ 0/1, 2147483647/1 ]</caps>
  </padtemplate>
 </feature>
 <feature typename="GstElementFactory">
  <name>ffenc_adpcm_yamaha</name>
  <longname>FFMPEG Yamaha ADPCM encoder</longname>
  <class>Codec/Encoder/Audio</class>
  <description>FFMPEG adpcm_yamaha encoder</description>
  <author>Wim Taymans &lt;wim.taymans@chello.be&gt;, Ronald Bultje &lt;rbultje@ronald.bitfreak.net&gt;</author>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>audio/x-adpcm, rate=(int)[ 8000, 96000 ], channels=(int)[ 1, 2 ], layout=(string)yamaha</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>audio/x-raw-int, rate=(int)[ 8000, 96000 ], channels=(int)[ 1, 2 ], signed=(boolean)true, endianness=(int)1234, width=(int)16, depth=(int)16</caps>
  </padtemplate>
 </feature>
 <feature typename="GstElementFactory">
  <name>ffenc_adpcm_xa</name>
  <longname>FFMPEG CD-ROM XA ADPCM encoder</longname>
  <class>Codec/Encoder/Audio</class>
  <description>FFMPEG adpcm_xa encoder</description>
  <author>Wim Taymans &lt;wim.taymans@chello.be&gt;, Ronald Bultje &lt;rbultje@ronald.bitfreak.net&gt;</author>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>audio/x-adpcm, rate=(int)[ 8000, 96000 ], channels=(int)[ 1, 2 ], layout=(string)xa</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>audio/x-raw-int, rate=(int)[ 8000, 96000 ], channels=(int)[ 1, 2 ], signed=(boolean)true, endianness=(int)1234, width=(int)16, depth=(int)16</caps>
  </padtemplate>
 </feature>
 <feature typename="GstElementFactory">
  <name>ffenc_adpcm_swf</name>
  <longname>FFMPEG Shockwave ADPCM encoder</longname>
  <class>Codec/Encoder/Audio</class>
  <description>FFMPEG adpcm_swf encoder</description>
  <author>Wim Taymans &lt;wim.taymans@chello.be&gt;, Ronald Bultje &lt;rbultje@ronald.bitfreak.net&gt;</author>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>audio/x-adpcm, rate=(int)[ 8000, 96000 ], channels=(int)[ 1, 2 ], layout=(string)swf</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>audio/x-raw-int, rate=(int)[ 8000, 96000 ], channels=(int)[ 1, 2 ], signed=(boolean)true, endianness=(int)1234, width=(int)16, depth=(int)16</caps>
  </padtemplate>
 </feature>
 <feature typename="GstElementFactory">
  <name>ffenc_adpcm_sbpro_4</name>
  <longname>FFMPEG SB-Pro ADPCM 4 encoder</longname>
  <class>Codec/Encoder/Audio</class>
  <description>FFMPEG adpcm_sbpro_4 encoder</description>
  <author>Wim Taymans &lt;wim.taymans@chello.be&gt;, Ronald Bultje &lt;rbultje@ronald.bitfreak.net&gt;</author>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>audio/x-adpcm, rate=(int)[ 8000, 96000 ], channels=(int)[ 1, 2 ], layout=(string)sbpro4</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>audio/x-raw-int, rate=(int)[ 8000, 96000 ], channels=(int)[ 1, 2 ], signed=(boolean)true, endianness=(int)1234, width=(int)16, depth=(int)16</caps>
  </padtemplate>
 </feature>
 <feature typename="GstElementFactory">
  <name>ffenc_adpcm_sbpro_3</name>
  <longname>FFMPEG SB-Pro ADPCM 3 encoder</longname>
  <class>Codec/Encoder/Audio</class>
  <description>FFMPEG adpcm_sbpro_3 encoder</description>
  <author>Wim Taymans &lt;wim.taymans@chello.be&gt;, Ronald Bultje &lt;rbultje@ronald.bitfreak.net&gt;</author>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>audio/x-adpcm, rate=(int)[ 8000, 96000 ], channels=(int)[ 1, 2 ], layout=(string)sbpro3</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>audio/x-raw-int, rate=(int)[ 8000, 96000 ], channels=(int)[ 1, 2 ], signed=(boolean)true, endianness=(int)1234, width=(int)16, depth=(int)16</caps>
  </padtemplate>
 </feature>
 <feature typename="GstElementFactory">
  <name>ffenc_adpcm_sbpro_2</name>
  <longname>FFMPEG SB-Pro ADPCM 2 encoder</longname>
  <class>Codec/Encoder/Audio</class>
  <description>FFMPEG adpcm_sbpro_2 encoder</description>
  <author>Wim Taymans &lt;wim.taymans@chello.be&gt;, Ronald Bultje &lt;rbultje@ronald.bitfreak.net&gt;</author>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>audio/x-adpcm, rate=(int)[ 8000, 96000 ], channels=(int)[ 1, 2 ], layout=(string)sbpro2</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>audio/x-raw-int, rate=(int)[ 8000, 96000 ], channels=(int)[ 1, 2 ], signed=(boolean)true, endianness=(int)1234, width=(int)16, depth=(int)16</caps>
  </padtemplate>
 </feature>
 <feature typename="GstElementFactory">
  <name>ffenc_adpcm_ms</name>
  <longname>FFMPEG Microsoft ADPCM audio encoder</longname>
  <class>Codec/Encoder/Audio</class>
  <description>FFMPEG adpcm_ms encoder</description>
  <author>Wim Taymans &lt;wim.taymans@chello.be&gt;, Ronald Bultje &lt;rbultje@ronald.bitfreak.net&gt;</author>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>audio/x-adpcm, rate=(int)[ 8000, 96000 ], channels=(int)[ 1, 2 ], layout=(string)microsoft</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>audio/x-raw-int, rate=(int)[ 8000, 96000 ], channels=(int)[ 1, 2 ], signed=(boolean)true, endianness=(int)1234, width=(int)16, depth=(int)16</caps>
  </padtemplate>
 </feature>
 <feature typename="GstElementFactory">
  <name>ffenc_adpcm_ima_ws</name>
  <longname>FFMPEG IMA/Westwood ADPCM audio encoder</longname>
  <class>Codec/Encoder/Audio</class>
  <description>FFMPEG adpcm_ima_ws encoder</description>
  <author>Wim Taymans &lt;wim.taymans@chello.be&gt;, Ronald Bultje &lt;rbultje@ronald.bitfreak.net&gt;</author>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>audio/x-adpcm, rate=(int)[ 8000, 96000 ], channels=(int)[ 1, 2 ], layout=(string)westwood</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>audio/x-raw-int, rate=(int)[ 8000, 96000 ], channels=(int)[ 1, 2 ], signed=(boolean)true, endianness=(int)1234, width=(int)16, depth=(int)16</caps>
  </padtemplate>
 </feature>
 <feature typename="GstElementFactory">
  <name>ffenc_adpcm_ima_wav</name>
  <longname>FFMPEG IMA/DVI ADPCM audio encoder</longname>
  <class>Codec/Encoder/Audio</class>
  <description>FFMPEG adpcm_ima_wav encoder</description>
  <author>Wim Taymans &lt;wim.taymans@chello.be&gt;, Ronald Bultje &lt;rbultje@ronald.bitfreak.net&gt;</author>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>audio/x-adpcm, rate=(int)[ 8000, 96000 ], channels=(int)[ 1, 2 ], layout=(string)dvi</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>audio/x-raw-int, rate=(int)[ 8000, 96000 ], channels=(int)[ 1, 2 ], signed=(boolean)true, endianness=(int)1234, width=(int)16, depth=(int)16</caps>
  </padtemplate>
 </feature>
 <feature typename="GstElementFactory">
  <name>ffenc_adpcm_ima_smjpeg</name>
  <longname>FFMPEG IMA/SMJPEG ADPCM audio encoder</longname>
  <class>Codec/Encoder/Audio</class>
  <description>FFMPEG adpcm_ima_smjpeg encoder</description>
  <author>Wim Taymans &lt;wim.taymans@chello.be&gt;, Ronald Bultje &lt;rbultje@ronald.bitfreak.net&gt;</author>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>audio/x-adpcm, rate=(int)[ 8000, 96000 ], channels=(int)[ 1, 2 ], layout=(string)smjpeg</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>audio/x-raw-int, rate=(int)[ 8000, 96000 ], channels=(int)[ 1, 2 ], signed=(boolean)true, endianness=(int)1234, width=(int)16, depth=(int)16</caps>
  </padtemplate>
 </feature>
 <feature typename="GstElementFactory">
  <name>ffenc_adpcm_ima_qt</name>
  <longname>FFMPEG IMA/Quicktime ADPCM audio encoder</longname>
  <class>Codec/Encoder/Audio</class>
  <description>FFMPEG adpcm_ima_qt encoder</description>
  <author>Wim Taymans &lt;wim.taymans@chello.be&gt;, Ronald Bultje &lt;rbultje@ronald.bitfreak.net&gt;</author>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>audio/x-adpcm, rate=(int)[ 8000, 96000 ], channels=(int)[ 1, 2 ], layout=(string)quicktime</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>audio/x-raw-int, rate=(int)[ 8000, 96000 ], channels=(int)[ 1, 2 ], signed=(boolean)true, endianness=(int)1234, width=(int)16, depth=(int)16</caps>
  </padtemplate>
 </feature>
 <feature typename="GstElementFactory">
  <name>ffenc_adpcm_ima_dk4</name>
  <longname>FFMPEG IMA/DK4 ADPCM encoder</longname>
  <class>Codec/Encoder/Audio</class>
  <description>FFMPEG adpcm_ima_dk4 encoder</description>
  <author>Wim Taymans &lt;wim.taymans@chello.be&gt;, Ronald Bultje &lt;rbultje@ronald.bitfreak.net&gt;</author>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>audio/x-adpcm, rate=(int)[ 8000, 96000 ], channels=(int)[ 1, 2 ], layout=(string)dk4</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>audio/x-raw-int, rate=(int)[ 8000, 96000 ], channels=(int)[ 1, 2 ], signed=(boolean)true, endianness=(int)1234, width=(int)16, depth=(int)16</caps>
  </padtemplate>
 </feature>
 <feature typename="GstElementFactory">
  <name>ffenc_adpcm_ima_dk3</name>
  <longname>FFMPEG IMA/DK3 ADPCM audio encoder</longname>
  <class>Codec/Encoder/Audio</class>
  <description>FFMPEG adpcm_ima_dk3 encoder</description>
  <author>Wim Taymans &lt;wim.taymans@chello.be&gt;, Ronald Bultje &lt;rbultje@ronald.bitfreak.net&gt;</author>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>audio/x-adpcm, rate=(int)[ 8000, 96000 ], channels=(int)[ 1, 2 ], layout=(string)dk3</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>audio/x-raw-int, rate=(int)[ 8000, 96000 ], channels=(int)[ 1, 2 ], signed=(boolean)true, endianness=(int)1234, width=(int)16, depth=(int)16</caps>
  </padtemplate>
 </feature>
 <feature typename="GstElementFactory">
  <name>ffenc_g726</name>
  <longname>FFMPEG G.726 ADPCM encoder</longname>
  <class>Codec/Encoder/Audio</class>
  <description>FFMPEG g726 encoder</description>
  <author>Wim Taymans &lt;wim.taymans@chello.be&gt;, Ronald Bultje &lt;rbultje@ronald.bitfreak.net&gt;</author>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>audio/x-adpcm, rate=(int)[ 8000, 96000 ], channels=(int)[ 1, 2 ], layout=(string)g726</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>audio/x-raw-int, rate=(int)[ 8000, 96000 ], channels=(int)[ 1, 2 ], signed=(boolean)true, endianness=(int)1234, width=(int)16, depth=(int)16</caps>
  </padtemplate>
 </feature>
 <feature typename="GstElementFactory">
  <name>ffenc_adpcm_ea</name>
  <longname>FFMPEG Electronic Arts ADPCM encoder</longname>
  <class>Codec/Encoder/Audio</class>
  <description>FFMPEG adpcm_ea encoder</description>
  <author>Wim Taymans &lt;wim.taymans@chello.be&gt;, Ronald Bultje &lt;rbultje@ronald.bitfreak.net&gt;</author>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>audio/x-adpcm, rate=(int)[ 8000, 96000 ], channels=(int)[ 1, 2 ], layout=(string)ea</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>audio/x-raw-int, rate=(int)[ 8000, 96000 ], channels=(int)[ 1, 2 ], signed=(boolean)true, endianness=(int)1234, width=(int)16, depth=(int)16</caps>
  </padtemplate>
 </feature>
 <feature typename="GstElementFactory">
  <name>ffenc_adpcm_ct</name>
  <longname>FFMPEG CT ADPCM encoder</longname>
  <class>Codec/Encoder/Audio</class>
  <description>FFMPEG adpcm_ct encoder</description>
  <author>Wim Taymans &lt;wim.taymans@chello.be&gt;, Ronald Bultje &lt;rbultje@ronald.bitfreak.net&gt;</author>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>audio/x-adpcm, rate=(int)[ 8000, 96000 ], channels=(int)[ 1, 2 ], layout=(string)ct</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>audio/x-raw-int, rate=(int)[ 8000, 96000 ], channels=(int)[ 1, 2 ], signed=(boolean)true, endianness=(int)1234, width=(int)16, depth=(int)16</caps>
  </padtemplate>
 </feature>
 <feature typename="GstElementFactory">
  <name>ffenc_adpcm_adx</name>
  <longname>FFMPEG ADX ADPCM encoder</longname>
  <class>Codec/Encoder/Audio</class>
  <description>FFMPEG adpcm_adx encoder</description>
  <author>Wim Taymans &lt;wim.taymans@chello.be&gt;, Ronald Bultje &lt;rbultje@ronald.bitfreak.net&gt;</author>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>audio/x-adpcm, rate=(int)[ 8000, 96000 ], channels=(int)[ 1, 2 ], layout=(string)adx</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>audio/x-raw-int, rate=(int)[ 8000, 96000 ], channels=(int)[ 1, 2 ], signed=(boolean)true, endianness=(int)1234, width=(int)16, depth=(int)16</caps>
  </padtemplate>
 </feature>
 <feature typename="GstElementFactory">
  <name>ffenc_adpcm_4xm</name>
  <longname>FFMPEG 4-XM ADPCM audio encoder</longname>
  <class>Codec/Encoder/Audio</class>
  <description>FFMPEG adpcm_4xm encoder</description>
  <author>Wim Taymans &lt;wim.taymans@chello.be&gt;, Ronald Bultje &lt;rbultje@ronald.bitfreak.net&gt;</author>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>audio/x-adpcm, rate=(int)[ 8000, 96000 ], channels=(int)[ 1, 2 ], layout=(string)4xm</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>audio/x-raw-int, rate=(int)[ 8000, 96000 ], channels=(int)[ 1, 2 ], signed=(boolean)true, endianness=(int)1234, width=(int)16, depth=(int)16</caps>
  </padtemplate>
 </feature>
 <feature typename="GstElementFactory">
  <name>ffenc_wmav2</name>
  <longname>FFMPEG Windows Media Audio v8/9 encoder</longname>
  <class>Codec/Encoder/Audio</class>
  <description>FFMPEG wmav2 encoder</description>
  <author>Wim Taymans &lt;wim.taymans@chello.be&gt;, Ronald Bultje &lt;rbultje@ronald.bitfreak.net&gt;</author>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>audio/x-wma, rate=(int)[ 8000, 96000 ], channels=(int)[ 1, 2 ], wmaversion=(int)2, block_align=(int)[ 0, 2147483647 ], bitrate=(int)[ 0, 2147483647 ]</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>audio/x-raw-int, rate=(int)[ 8000, 96000 ], channels=(int)[ 1, 2 ], signed=(boolean)true, endianness=(int)1234, width=(int)16, depth=(int)16</caps>
  </padtemplate>
 </feature>
 <feature typename="GstElementFactory">
  <name>ffenc_wmav1</name>
  <longname>FFMPEG Windows Media Audio v7 encoder</longname>
  <class>Codec/Encoder/Audio</class>
  <description>FFMPEG wmav1 encoder</description>
  <author>Wim Taymans &lt;wim.taymans@chello.be&gt;, Ronald Bultje &lt;rbultje@ronald.bitfreak.net&gt;</author>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>audio/x-wma, rate=(int)[ 8000, 96000 ], channels=(int)[ 1, 2 ], wmaversion=(int)1, block_align=(int)[ 0, 2147483647 ], bitrate=(int)[ 0, 2147483647 ]</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>audio/x-raw-int, rate=(int)[ 8000, 96000 ], channels=(int)[ 1, 2 ], signed=(boolean)true, endianness=(int)1234, width=(int)16, depth=(int)16</caps>
  </padtemplate>
 </feature>
 <feature typename="GstElementFactory">
  <name>ffenc_sonicls</name>
  <longname>FFMPEG Sonic lossless audio encoder</longname>
  <class>Codec/Encoder/Audio</class>
  <description>FFMPEG sonicls encoder</description>
  <author>Wim Taymans &lt;wim.taymans@chello.be&gt;, Ronald Bultje &lt;rbultje@ronald.bitfreak.net&gt;</author>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>audio/x-gst_ff-sonicls, rate=(int)[ 8000, 96000 ], channels=(int)[ 1, 2 ]</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>audio/x-raw-int, rate=(int)[ 8000, 96000 ], channels=(int)[ 1, 2 ], signed=(boolean)true, endianness=(int)1234, width=(int)16, depth=(int)16</caps>
  </padtemplate>
 </feature>
 <feature typename="GstElementFactory">
  <name>ffenc_sonic</name>
  <longname>FFMPEG Sonic audio encoder</longname>
  <class>Codec/Encoder/Audio</class>
  <description>FFMPEG sonic encoder</description>
  <author>Wim Taymans &lt;wim.taymans@chello.be&gt;, Ronald Bultje &lt;rbultje@ronald.bitfreak.net&gt;</author>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>audio/x-gst_ff-sonic, rate=(int)[ 8000, 96000 ], channels=(int)[ 1, 2 ]</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>audio/x-raw-int, rate=(int)[ 8000, 96000 ], channels=(int)[ 1, 2 ], signed=(boolean)true, endianness=(int)1234, width=(int)16, depth=(int)16</caps>
  </padtemplate>
 </feature>
 <feature typename="GstElementFactory">
  <name>ffenc_mp3</name>
  <longname>FFMPEG MPEG-1 layer 3 audio encoder</longname>
  <class>Codec/Encoder/Audio</class>
  <description>FFMPEG mp3 encoder</description>
  <author>Wim Taymans &lt;wim.taymans@chello.be&gt;, Ronald Bultje &lt;rbultje@ronald.bitfreak.net&gt;</author>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>audio/mpeg, rate=(int)[ 8000, 96000 ], channels=(int)[ 1, 2 ], mpegversion=(int)1, layer=(int)3</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>audio/x-raw-int, rate=(int)[ 8000, 96000 ], channels=(int)[ 1, 2 ], signed=(boolean)true, endianness=(int)1234, width=(int)16, depth=(int)16</caps>
  </padtemplate>
 </feature>
 <feature typename="GstElementFactory">
  <name>ffenc_mp2</name>
  <longname>FFMPEG MPEG-1 layer 2 audio encoder</longname>
  <class>Codec/Encoder/Audio</class>
  <description>FFMPEG mp2 encoder</description>
  <author>Wim Taymans &lt;wim.taymans@chello.be&gt;, Ronald Bultje &lt;rbultje@ronald.bitfreak.net&gt;</author>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>audio/mpeg, rate=(int)[ 8000, 96000 ], channels=(int)[ 1, 2 ], mpegversion=(int)1, layer=(int)2</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>audio/x-raw-int, rate=(int)[ 8000, 96000 ], channels=(int)[ 1, 2 ], signed=(boolean)true, endianness=(int)1234, width=(int)16, depth=(int)16</caps>
  </padtemplate>
 </feature>
 <feature typename="GstElementFactory">
  <name>ffenc_libtheora</name>
  <longname>FFMPEG Theora video encoder</longname>
  <class>Codec/Encoder/Video</class>
  <description>FFMPEG libtheora encoder</description>
  <author>Wim Taymans &lt;wim.taymans@chello.be&gt;, Ronald Bultje &lt;rbultje@ronald.bitfreak.net&gt;</author>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>video/x-theora, width=(int)[ 16, 4096 ], height=(int)[ 16, 4096 ], framerate=(fraction)[ 0/1, 2147483647/1 ]</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>video/x-raw-rgb; video/x-raw-yuv; video/x-raw-gray</caps>
  </padtemplate>
 </feature>
 <feature typename="GstElementFactory">
  <name>ffenc_aac</name>
  <longname>FFMPEG MPEG-2/4 AAC audio encoder</longname>
  <class>Codec/Encoder/Audio</class>
  <description>FFMPEG aac encoder</description>
  <author>Wim Taymans &lt;wim.taymans@chello.be&gt;, Ronald Bultje &lt;rbultje@ronald.bitfreak.net&gt;</author>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>audio/mpeg, rate=(int)[ 8000, 96000 ], channels=(int)[ 1, 2 ], mpegversion=(int)4</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>audio/x-raw-int, rate=(int)[ 8000, 96000 ], channels=(int)[ 1, 2 ], signed=(boolean)true, endianness=(int)1234, width=(int)16, depth=(int)16</caps>
  </padtemplate>
 </feature>
 <feature typename="GstElementFactory">
  <name>ffenc_amr_wb</name>
  <longname>FFMPEG 3GPP AMR WideBand speech audio codec encoder</longname>
  <class>Codec/Encoder/Audio</class>
  <description>FFMPEG amr_wb encoder</description>
  <author>Wim Taymans &lt;wim.taymans@chello.be&gt;, Ronald Bultje &lt;rbultje@ronald.bitfreak.net&gt;</author>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>audio/AMR-WB, rate=(int)[ 8000, 96000 ], channels=(int)[ 1, 2 ]</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>audio/x-raw-int, rate=(int)[ 8000, 96000 ], channels=(int)[ 1, 2 ], signed=(boolean)true, endianness=(int)1234, width=(int)16, depth=(int)16</caps>
  </padtemplate>
 </feature>
 <feature typename="GstElementFactory">
  <name>ffenc_amr_nb</name>
  <longname>FFMPEG 3GPP AMR NarrowBand speech audio codec encoder</longname>
  <class>Codec/Encoder/Audio</class>
  <description>FFMPEG amr_nb encoder</description>
  <author>Wim Taymans &lt;wim.taymans@chello.be&gt;, Ronald Bultje &lt;rbultje@ronald.bitfreak.net&gt;</author>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>audio/AMR, rate=(int)[ 8000, 96000 ], channels=(int)[ 1, 2 ]</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>audio/x-raw-int, rate=(int)[ 8000, 96000 ], channels=(int)[ 1, 2 ], signed=(boolean)true, endianness=(int)1234, width=(int)16, depth=(int)16</caps>
  </padtemplate>
 </feature>
 <feature typename="GstElementFactory">
  <name>ffenc_ac3</name>
  <longname>FFMPEG AC-3 audio encoder</longname>
  <class>Codec/Encoder/Audio</class>
  <description>FFMPEG ac3 encoder</description>
  <author>Wim Taymans &lt;wim.taymans@chello.be&gt;, Ronald Bultje &lt;rbultje@ronald.bitfreak.net&gt;</author>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>audio/x-ac3, rate=(int)[ 8000, 96000 ], channels=(int)[ 1, 2 ]</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>audio/x-raw-int, rate=(int)[ 8000, 96000 ], channels=(int)[ 1, 2 ], signed=(boolean)true, endianness=(int)1234, width=(int)16, depth=(int)16</caps>
  </padtemplate>
 </feature>
 <feature typename="GstElementFactory">
  <name>ffenc_zmbv</name>
  <longname>FFMPEG Zip Motion Blocks Video encoder</longname>
  <class>Codec/Encoder/Video</class>
  <description>FFMPEG zmbv encoder</description>
  <author>Wim Taymans &lt;wim.taymans@chello.be&gt;, Ronald Bultje &lt;rbultje@ronald.bitfreak.net&gt;</author>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>video/x-gst_ff-zmbv, width=(int)[ 16, 4096 ], height=(int)[ 16, 4096 ], framerate=(fraction)[ 0/1, 2147483647/1 ]</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>video/x-raw-rgb; video/x-raw-yuv; video/x-raw-gray</caps>
  </padtemplate>
 </feature>
 <feature typename="GstElementFactory">
  <name>ffenc_xvid</name>
  <longname>FFMPEG XviD video encoder</longname>
  <class>Codec/Encoder/Video</class>
  <description>FFMPEG xvid encoder</description>
  <author>Wim Taymans &lt;wim.taymans@chello.be&gt;, Ronald Bultje &lt;rbultje@ronald.bitfreak.net&gt;</author>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>video/x-gst_ff-xvid, width=(int)[ 16, 4096 ], height=(int)[ 16, 4096 ], framerate=(fraction)[ 0/1, 2147483647/1 ]</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>video/x-raw-rgb; video/x-raw-yuv; video/x-raw-gray</caps>
  </padtemplate>
 </feature>
 <feature typename="GstElementFactory">
  <name>ffenc_h264</name>
  <longname>FFMPEG H.264 video encoder</longname>
  <class>Codec/Encoder/Video</class>
  <description>FFMPEG h264 encoder</description>
  <author>Wim Taymans &lt;wim.taymans@chello.be&gt;, Ronald Bultje &lt;rbultje@ronald.bitfreak.net&gt;</author>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>video/x-h264, width=(int)[ 16, 4096 ], height=(int)[ 16, 4096 ], framerate=(fraction)[ 0/1, 2147483647/1 ]</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>video/x-raw-rgb; video/x-raw-yuv; video/x-raw-gray</caps>
  </padtemplate>
 </feature>
 <feature typename="GstElementFactory">
  <name>ffenc_wmv2</name>
  <longname>FFMPEG Windows Media Video v8 encoder</longname>
  <class>Codec/Encoder/Video</class>
  <description>FFMPEG wmv2 encoder</description>
  <author>Wim Taymans &lt;wim.taymans@chello.be&gt;, Ronald Bultje &lt;rbultje@ronald.bitfreak.net&gt;</author>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>video/x-wmv, width=(int)[ 16, 4096 ], height=(int)[ 16, 4096 ], framerate=(fraction)[ 0/1, 2147483647/1 ], wmvversion=(int)2</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>video/x-raw-rgb; video/x-raw-yuv; video/x-raw-gray</caps>
  </padtemplate>
 </feature>
 <feature typename="GstElementFactory">
  <name>ffenc_wmv1</name>
  <longname>FFMPEG Windows Media Video v7 encoder</longname>
  <class>Codec/Encoder/Video</class>
  <description>FFMPEG wmv1 encoder</description>
  <author>Wim Taymans &lt;wim.taymans@chello.be&gt;, Ronald Bultje &lt;rbultje@ronald.bitfreak.net&gt;</author>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>video/x-wmv, width=(int)[ 16, 4096 ], height=(int)[ 16, 4096 ], framerate=(fraction)[ 0/1, 2147483647/1 ], wmvversion=(int)1</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>video/x-raw-rgb; video/x-raw-yuv; video/x-raw-gray</caps>
  </padtemplate>
 </feature>
 <feature typename="GstElementFactory">
  <name>ffenc_svq1</name>
  <longname>FFMPEG Sorensen-1 video encoder</longname>
  <class>Codec/Encoder/Video</class>
  <description>FFMPEG svq1 encoder</description>
  <author>Wim Taymans &lt;wim.taymans@chello.be&gt;, Ronald Bultje &lt;rbultje@ronald.bitfreak.net&gt;</author>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>video/x-svq, width=(int)[ 16, 4096 ], height=(int)[ 16, 4096 ], framerate=(fraction)[ 0/1, 2147483647/1 ], svqversion=(int)1</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>video/x-raw-rgb; video/x-raw-yuv; video/x-raw-gray</caps>
  </padtemplate>
 </feature>
 <feature typename="GstElementFactory">
  <name>ffenc_snow</name>
  <longname>FFMPEG Snow wave video encoder</longname>
  <class>Codec/Encoder/Video</class>
  <description>FFMPEG snow encoder</description>
  <author>Wim Taymans &lt;wim.taymans@chello.be&gt;, Ronald Bultje &lt;rbultje@ronald.bitfreak.net&gt;</author>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>video/x-gst_ff-snow, width=(int)[ 16, 4096 ], height=(int)[ 16, 4096 ], framerate=(fraction)[ 0/1, 2147483647/1 ]</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>video/x-raw-rgb; video/x-raw-yuv; video/x-raw-gray</caps>
  </padtemplate>
 </feature>
 <feature typename="GstElementFactory">
  <name>ffenc_rv20</name>
  <longname>FFMPEG Realvideo 2.0 encoder</longname>
  <class>Codec/Encoder/Video</class>
  <description>FFMPEG rv20 encoder</description>
  <author>Wim Taymans &lt;wim.taymans@chello.be&gt;, Ronald Bultje &lt;rbultje@ronald.bitfreak.net&gt;</author>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>video/x-pn-realvideo, width=(int)[ 16, 4096 ], height=(int)[ 16, 4096 ], framerate=(fraction)[ 0/1, 2147483647/1 ], systemstream=(boolean)false, rmversion=(int)2</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>video/x-raw-rgb; video/x-raw-yuv; video/x-raw-gray</caps>
  </padtemplate>
 </feature>
 <feature typename="GstElementFactory">
  <name>ffenc_rv10</name>
  <longname>FFMPEG Realvideo 1.0 encoder</longname>
  <class>Codec/Encoder/Video</class>
  <description>FFMPEG rv10 encoder</description>
  <author>Wim Taymans &lt;wim.taymans@chello.be&gt;, Ronald Bultje &lt;rbultje@ronald.bitfreak.net&gt;</author>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>video/x-pn-realvideo, width=(int)[ 16, 4096 ], height=(int)[ 16, 4096 ], framerate=(fraction)[ 0/1, 2147483647/1 ], systemstream=(boolean)false, rmversion=(int)1</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>video/x-raw-rgb; video/x-raw-yuv; video/x-raw-gray</caps>
  </padtemplate>
 </feature>
 <feature typename="GstElementFactory">
  <name>ffenc_ppm</name>
  <longname>FFMPEG PPM image encoder</longname>
  <class>Codec/Encoder/Video</class>
  <description>FFMPEG ppm encoder</description>
  <author>Wim Taymans &lt;wim.taymans@chello.be&gt;, Ronald Bultje &lt;rbultje@ronald.bitfreak.net&gt;</author>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>image/ppm, width=(int)[ 16, 4096 ], height=(int)[ 16, 4096 ], framerate=(fraction)[ 0/1, 2147483647/1 ]</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>video/x-raw-rgb; video/x-raw-yuv; video/x-raw-gray</caps>
  </padtemplate>
 </feature>
 <feature typename="GstElementFactory">
  <name>ffenc_png</name>
  <longname>FFMPEG PNG image encoder</longname>
  <class>Codec/Encoder/Video</class>
  <description>FFMPEG png encoder</description>
  <author>Wim Taymans &lt;wim.taymans@chello.be&gt;, Ronald Bultje &lt;rbultje@ronald.bitfreak.net&gt;</author>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>image/png, width=(int)[ 16, 4096 ], height=(int)[ 16, 4096 ], framerate=(fraction)[ 0/1, 2147483647/1 ]</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>video/x-raw-rgb; video/x-raw-yuv; video/x-raw-gray</caps>
  </padtemplate>
 </feature>
 <feature typename="GstElementFactory">
  <name>ffenc_pgmyuv</name>
  <longname>FFMPEG PGM-YUV image encoder</longname>
  <class>Codec/Encoder/Video</class>
  <description>FFMPEG pgmyuv encoder</description>
  <author>Wim Taymans &lt;wim.taymans@chello.be&gt;, Ronald Bultje &lt;rbultje@ronald.bitfreak.net&gt;</author>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>video/x-gst_ff-pgmyuv, width=(int)[ 16, 4096 ], height=(int)[ 16, 4096 ], framerate=(fraction)[ 0/1, 2147483647/1 ]</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>video/x-raw-rgb; video/x-raw-yuv; video/x-raw-gray</caps>
  </padtemplate>
 </feature>
 <feature typename="GstElementFactory">
  <name>ffenc_pgm</name>
  <longname>FFMPEG PGM image encoder</longname>
  <class>Codec/Encoder/Video</class>
  <description>FFMPEG pgm encoder</description>
  <author>Wim Taymans &lt;wim.taymans@chello.be&gt;, Ronald Bultje &lt;rbultje@ronald.bitfreak.net&gt;</author>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>video/x-gst_ff-pgm, width=(int)[ 16, 4096 ], height=(int)[ 16, 4096 ], framerate=(fraction)[ 0/1, 2147483647/1 ]</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>video/x-raw-rgb; video/x-raw-yuv; video/x-raw-gray</caps>
  </padtemplate>
 </feature>
 <feature typename="GstElementFactory">
  <name>ffenc_pbm</name>
  <longname>FFMPEG PBM image encoder</longname>
  <class>Codec/Encoder/Video</class>
  <description>FFMPEG pbm encoder</description>
  <author>Wim Taymans &lt;wim.taymans@chello.be&gt;, Ronald Bultje &lt;rbultje@ronald.bitfreak.net&gt;</author>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>image/pbm, width=(int)[ 16, 4096 ], height=(int)[ 16, 4096 ], framerate=(fraction)[ 0/1, 2147483647/1 ]</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>video/x-raw-rgb; video/x-raw-yuv; video/x-raw-gray</caps>
  </padtemplate>
 </feature>
 <feature typename="GstElementFactory">
  <name>ffenc_pam</name>
  <longname>FFMPEG PAM image encoder</longname>
  <class>Codec/Encoder/Video</class>
  <description>FFMPEG pam encoder</description>
  <author>Wim Taymans &lt;wim.taymans@chello.be&gt;, Ronald Bultje &lt;rbultje@ronald.bitfreak.net&gt;</author>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>video/x-gst_ff-pam, width=(int)[ 16, 4096 ], height=(int)[ 16, 4096 ], framerate=(fraction)[ 0/1, 2147483647/1 ]</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>video/x-raw-rgb; video/x-raw-yuv; video/x-raw-gray</caps>
  </padtemplate>
 </feature>
 <feature typename="GstElementFactory">
  <name>ffenc_msmpeg4</name>
  <longname>FFMPEG Microsoft MPEG-4 v3 encoder</longname>
  <class>Codec/Encoder/Video</class>
  <description>FFMPEG msmpeg4 encoder</description>
  <author>Wim Taymans &lt;wim.taymans@chello.be&gt;, Ronald Bultje &lt;rbultje@ronald.bitfreak.net&gt;</author>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>video/x-msmpeg, width=(int)[ 16, 4096 ], height=(int)[ 16, 4096 ], framerate=(fraction)[ 0/1, 2147483647/1 ], msmpegversion=(int)43</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>video/x-raw-rgb; video/x-raw-yuv; video/x-raw-gray</caps>
  </padtemplate>
 </feature>
 <feature typename="GstElementFactory">
  <name>ffenc_msmpeg4v2</name>
  <longname>FFMPEG Microsoft MPEG-4 v2 encoder</longname>
  <class>Codec/Encoder/Video</class>
  <description>FFMPEG msmpeg4v2 encoder</description>
  <author>Wim Taymans &lt;wim.taymans@chello.be&gt;, Ronald Bultje &lt;rbultje@ronald.bitfreak.net&gt;</author>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>video/x-msmpeg, width=(int)[ 16, 4096 ], height=(int)[ 16, 4096 ], framerate=(fraction)[ 0/1, 2147483647/1 ], msmpegversion=(int)42</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>video/x-raw-rgb; video/x-raw-yuv; video/x-raw-gray</caps>
  </padtemplate>
 </feature>
 <feature typename="GstElementFactory">
  <name>ffenc_msmpeg4v1</name>
  <longname>FFMPEG Microsoft MPEG-4 v1 encoder</longname>
  <class>Codec/Encoder/Video</class>
  <description>FFMPEG msmpeg4v1 encoder</description>
  <author>Wim Taymans &lt;wim.taymans@chello.be&gt;, Ronald Bultje &lt;rbultje@ronald.bitfreak.net&gt;</author>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>video/x-msmpeg, width=(int)[ 16, 4096 ], height=(int)[ 16, 4096 ], framerate=(fraction)[ 0/1, 2147483647/1 ], msmpegversion=(int)41</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>video/x-raw-rgb; video/x-raw-yuv; video/x-raw-gray</caps>
  </padtemplate>
 </feature>
 <feature typename="GstElementFactory">
  <name>ffenc_mpeg4</name>
  <longname>FFMPEG MPEG-4 compatible video encoder</longname>
  <class>Codec/Encoder/Video</class>
  <description>FFMPEG mpeg4 encoder</description>
  <author>Wim Taymans &lt;wim.taymans@chello.be&gt;, Ronald Bultje &lt;rbultje@ronald.bitfreak.net&gt;</author>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>video/mpeg, width=(int)[ 16, 4096 ], height=(int)[ 16, 4096 ], framerate=(fraction)[ 0/1, 2147483647/1 ], mpegversion=(int)4, systemstream=(boolean)false; video/x-divx, width=(int)[ 16, 4096 ], height=(int)[ 16, 4096 ], framerate=(fraction)[ 0/1, 2147483647/1 ], divxversion=(int)5</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>video/x-raw-rgb; video/x-raw-yuv; video/x-raw-gray</caps>
  </padtemplate>
 </feature>
 <feature typename="GstElementFactory">
  <name>ffenc_mpeg2video</name>
  <longname>FFMPEG MPEG-2 video encoder</longname>
  <class>Codec/Encoder/Video</class>
  <description>FFMPEG mpeg2video encoder</description>
  <author>Wim Taymans &lt;wim.taymans@chello.be&gt;, Ronald Bultje &lt;rbultje@ronald.bitfreak.net&gt;</author>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>video/mpeg, width=(int)[ 16, 4096 ], height=(int)[ 16, 4096 ], framerate=(fraction)[ 0/1, 2147483647/1 ], mpegversion=(int)2, systemstream=(boolean)false</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>video/x-raw-rgb; video/x-raw-yuv; video/x-raw-gray</caps>
  </padtemplate>
 </feature>
 <feature typename="GstElementFactory">
  <name>ffenc_mpeg1video</name>
  <longname>FFMPEG MPEG-1 video encoder</longname>
  <class>Codec/Encoder/Video</class>
  <description>FFMPEG mpeg1video encoder</description>
  <author>Wim Taymans &lt;wim.taymans@chello.be&gt;, Ronald Bultje &lt;rbultje@ronald.bitfreak.net&gt;</author>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>video/mpeg, width=(int)[ 16, 4096 ], height=(int)[ 16, 4096 ], framerate=(fraction)[ 0/1, 2147483647/1 ], mpegversion=(int)1, systemstream=(boolean)false</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>video/x-raw-rgb; video/x-raw-yuv; video/x-raw-gray</caps>
  </padtemplate>
 </feature>
 <feature typename="GstElementFactory">
  <name>ffenc_mjpeg</name>
  <longname>FFMPEG Motion-JPEG encoder</longname>
  <class>Codec/Encoder/Video</class>
  <description>FFMPEG mjpeg encoder</description>
  <author>Wim Taymans &lt;wim.taymans@chello.be&gt;, Ronald Bultje &lt;rbultje@ronald.bitfreak.net&gt;</author>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>image/jpeg, width=(int)[ 16, 4096 ], height=(int)[ 16, 4096 ], framerate=(fraction)[ 0/1, 2147483647/1 ]</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>video/x-raw-rgb; video/x-raw-yuv; video/x-raw-gray</caps>
  </padtemplate>
 </feature>
 <feature typename="GstElementFactory">
  <name>ffenc_ljpeg</name>
  <longname>FFMPEG Lossless JPEG encoder</longname>
  <class>Codec/Encoder/Video</class>
  <description>FFMPEG ljpeg encoder</description>
  <author>Wim Taymans &lt;wim.taymans@chello.be&gt;, Ronald Bultje &lt;rbultje@ronald.bitfreak.net&gt;</author>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>image/jpeg, width=(int)[ 16, 4096 ], height=(int)[ 16, 4096 ], framerate=(fraction)[ 0/1, 2147483647/1 ]</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>video/x-raw-rgb; video/x-raw-yuv; video/x-raw-gray</caps>
  </padtemplate>
 </feature>
 <feature typename="GstElementFactory">
  <name>ffenc_huffyuv</name>
  <longname>FFMPEG Huffyuv lossless video encoder</longname>
  <class>Codec/Encoder/Video</class>
  <description>FFMPEG huffyuv encoder</description>
  <author>Wim Taymans &lt;wim.taymans@chello.be&gt;, Ronald Bultje &lt;rbultje@ronald.bitfreak.net&gt;</author>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>video/x-huffyuv, width=(int)[ 16, 4096 ], height=(int)[ 16, 4096 ], framerate=(fraction)[ 0/1, 2147483647/1 ]</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>video/x-raw-rgb; video/x-raw-yuv; video/x-raw-gray</caps>
  </padtemplate>
 </feature>
 <feature typename="GstElementFactory">
  <name>ffenc_h263p</name>
  <longname>FFMPEG H.263 (P) video encoder</longname>
  <class>Codec/Encoder/Video</class>
  <description>FFMPEG h263p encoder</description>
  <author>Wim Taymans &lt;wim.taymans@chello.be&gt;, Ronald Bultje &lt;rbultje@ronald.bitfreak.net&gt;</author>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>video/x-h263, width=(int)[ 16, 4096 ], height=(int)[ 16, 4096 ], framerate=(fraction)[ 0/1, 2147483647/1 ], variant=(string)itu, h263version=(string)h263p</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>video/x-raw-rgb; video/x-raw-yuv; video/x-raw-gray</caps>
  </padtemplate>
 </feature>
 <feature typename="GstElementFactory">
  <name>ffenc_h263</name>
  <longname>FFMPEG H.263 video encoder</longname>
  <class>Codec/Encoder/Video</class>
  <description>FFMPEG h263 encoder</description>
  <author>Wim Taymans &lt;wim.taymans@chello.be&gt;, Ronald Bultje &lt;rbultje@ronald.bitfreak.net&gt;</author>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>video/x-h263, width=(int)352, height=(int)288, framerate=(fraction)[ 0/1, 2147483647/1 ], variant=(string)itu, h263version=(string)h263; video/x-h263, width=(int)704, height=(int)576, framerate=(fraction)[ 0/1, 2147483647/1 ], variant=(string)itu, h263version=(string)h263; video/x-h263, width=(int)176, height=(int)144, framerate=(fraction)[ 0/1, 2147483647/1 ], variant=(string)itu, h263version=(string)h263; video/x-h263, width=(int)1408, height=(int)1152, framerate=(fraction)[ 0/1, 2147483647/1 ], variant=(string)itu, h263version=(string)h263; video/x-h263, width=(int)128, height=(int)96, framerate=(fraction)[ 0/1, 2147483647/1 ], variant=(string)itu, h263version=(string)h263</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>video/x-raw-rgb; video/x-raw-yuv; video/x-raw-gray</caps>
  </padtemplate>
 </feature>
 <feature typename="GstElementFactory">
  <name>ffenc_h261</name>
  <longname>FFMPEG H.261 video encoder</longname>
  <class>Codec/Encoder/Video</class>
  <description>FFMPEG h261 encoder</description>
  <author>Wim Taymans &lt;wim.taymans@chello.be&gt;, Ronald Bultje &lt;rbultje@ronald.bitfreak.net&gt;</author>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>video/x-h261, width=(int)[ 16, 4096 ], height=(int)[ 16, 4096 ], framerate=(fraction)[ 0/1, 2147483647/1 ]</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>video/x-raw-rgb; video/x-raw-yuv; video/x-raw-gray</caps>
  </padtemplate>
 </feature>
 <feature typename="GstElementFactory">
  <name>ffenc_flv</name>
  <longname>FFMPEG FLV video encoder</longname>
  <class>Codec/Encoder/Video</class>
  <description>FFMPEG flv encoder</description>
  <author>Wim Taymans &lt;wim.taymans@chello.be&gt;, Ronald Bultje &lt;rbultje@ronald.bitfreak.net&gt;</author>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>video/x-flash-video, width=(int)[ 16, 4096 ], height=(int)[ 16, 4096 ], framerate=(fraction)[ 0/1, 2147483647/1 ], flvversion=(int)1</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>video/x-raw-rgb; video/x-raw-yuv; video/x-raw-gray</caps>
  </padtemplate>
 </feature>
 <feature typename="GstElementFactory">
  <name>ffenc_flashsv</name>
  <longname>FFMPEG Flash Screen Video encoder</longname>
  <class>Codec/Encoder/Video</class>
  <description>FFMPEG flashsv encoder</description>
  <author>Wim Taymans &lt;wim.taymans@chello.be&gt;, Ronald Bultje &lt;rbultje@ronald.bitfreak.net&gt;</author>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>video/x-flash-screen, width=(int)[ 16, 4096 ], height=(int)[ 16, 4096 ], framerate=(fraction)[ 0/1, 2147483647/1 ]</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>video/x-raw-rgb; video/x-raw-yuv; video/x-raw-gray</caps>
  </padtemplate>
 </feature>
 <feature typename="GstElementFactory">
  <name>ffenc_ffvhuff</name>
  <longname>FFMPEG FFMPEG non-compliant Huffyuv video encoder</longname>
  <class>Codec/Encoder/Video</class>
  <description>FFMPEG ffvhuff encoder</description>
  <author>Wim Taymans &lt;wim.taymans@chello.be&gt;, Ronald Bultje &lt;rbultje@ronald.bitfreak.net&gt;</author>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>video/x-gst_ff-ffvhuff, width=(int)[ 16, 4096 ], height=(int)[ 16, 4096 ], framerate=(fraction)[ 0/1, 2147483647/1 ]</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>video/x-raw-rgb; video/x-raw-yuv; video/x-raw-gray</caps>
  </padtemplate>
 </feature>
 <feature typename="GstElementFactory">
  <name>ffenc_ffv1</name>
  <longname>FFMPEG FFMpeg video v1 encoder</longname>
  <class>Codec/Encoder/Video</class>
  <description>FFMPEG ffv1 encoder</description>
  <author>Wim Taymans &lt;wim.taymans@chello.be&gt;, Ronald Bultje &lt;rbultje@ronald.bitfreak.net&gt;</author>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>video/x-ffv, width=(int)[ 16, 4096 ], height=(int)[ 16, 4096 ], framerate=(fraction)[ 0/1, 2147483647/1 ], ffvversion=(int)1</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>video/x-raw-rgb; video/x-raw-yuv; video/x-raw-gray</caps>
  </padtemplate>
 </feature>
 <feature typename="GstElementFactory">
  <name>ffenc_dvvideo</name>
  <longname>FFMPEG Digital video encoder</longname>
  <class>Codec/Encoder/Video</class>
  <description>FFMPEG dvvideo encoder</description>
  <author>Wim Taymans &lt;wim.taymans@chello.be&gt;, Ronald Bultje &lt;rbultje@ronald.bitfreak.net&gt;</author>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>video/x-dv, width=(int)[ 16, 4096 ], height=(int)[ 16, 4096 ], framerate=(fraction)[ 0/1, 2147483647/1 ], systemstream=(boolean)false</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>video/x-raw-rgb; video/x-raw-yuv; video/x-raw-gray</caps>
  </padtemplate>
 </feature>
 <feature typename="GstElementFactory">
  <name>ffenc_bmp</name>
  <longname>FFMPEG BMP bitmap encoder</longname>
  <class>Codec/Encoder/Video</class>
  <description>FFMPEG bmp encoder</description>
  <author>Wim Taymans &lt;wim.taymans@chello.be&gt;, Ronald Bultje &lt;rbultje@ronald.bitfreak.net&gt;</author>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>image/bmp</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>video/x-raw-rgb; video/x-raw-yuv; video/x-raw-gray</caps>
  </padtemplate>
 </feature>
 <feature typename="GstElementFactory">
  <name>ffenc_asv2</name>
  <longname>FFMPEG Asus video v2 encoder</longname>
  <class>Codec/Encoder/Video</class>
  <description>FFMPEG asv2 encoder</description>
  <author>Wim Taymans &lt;wim.taymans@chello.be&gt;, Ronald Bultje &lt;rbultje@ronald.bitfreak.net&gt;</author>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>video/x-asus, width=(int)[ 16, 4096 ], height=(int)[ 16, 4096 ], framerate=(fraction)[ 0/1, 2147483647/1 ], asusversion=(int)2</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>video/x-raw-rgb; video/x-raw-yuv; video/x-raw-gray</caps>
  </padtemplate>
 </feature>
 <feature typename="GstElementFactory">
  <name>ffenc_asv1</name>
  <longname>FFMPEG Asus video v1 encoder</longname>
  <class>Codec/Encoder/Video</class>
  <description>FFMPEG asv1 encoder</description>
  <author>Wim Taymans &lt;wim.taymans@chello.be&gt;, Ronald Bultje &lt;rbultje@ronald.bitfreak.net&gt;</author>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>video/x-asus, width=(int)[ 16, 4096 ], height=(int)[ 16, 4096 ], framerate=(fraction)[ 0/1, 2147483647/1 ], asusversion=(int)1</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>video/x-raw-rgb; video/x-raw-yuv; video/x-raw-gray</caps>
  </padtemplate>
 </feature>
</plugin>
<plugin>
 <name>gnomevfs</name>
 <description>elements to read from and write to  Gnome-VFS uri&apos;s</description>
 <filename>/usr/lib/gstreamer-0.10/libgstgnomevfs.so</filename>
 <size>37184</size>
 <m32p>1210101361</m32p>
 <version>0.10.18</version>
 <license>LGPL</license>
 <source>gst-plugins-base</source>
 <package>GStreamer Base Plugins (Ubuntu)</package>
 <origin>https://launchpad.net/distros/ubuntu/+source/gst-plugins-base0.10</origin>
 <feature typename="GstElementFactory">
  <name>gnomevfssrc</name>
  <rank>128</rank>
  <longname>GnomeVFS Source</longname>
  <class>Source/File</class>
  <description>Read from any GnomeVFS-supported file</description>
  <author>Bastien Nocera &lt;hadess@hadess.net&gt;
Ronald S. Bultje &lt;rbultje@ronald.bitfreak.net&gt;</author>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>ANY</caps>
  </padtemplate>
  <interface>GstURIHandler</interface>
  <uri_type>source</uri_type>
  <uri_protocol>http</uri_protocol>
  <uri_protocol>https</uri_protocol>
  <uri_protocol>file</uri_protocol>
  <uri_protocol>smb</uri_protocol>
  <uri_protocol>ftp</uri_protocol>
  <uri_protocol>sftp</uri_protocol>
  <uri_protocol>ssh</uri_protocol>
  <uri_protocol>dav</uri_protocol>
 </feature>
 <feature typename="GstElementFactory">
  <name>gnomevfssink</name>
  <rank>128</rank>
  <longname>GnomeVFS Sink</longname>
  <class>Sink/File</class>
  <description>Write a stream to a GnomeVFS URI</description>
  <author>Bastien Nocera &lt;hadess@hadess.net&gt;</author>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>ANY</caps>
  </padtemplate>
  <interface>GstURIHandler</interface>
  <uri_type>sink</uri_type>
  <uri_protocol>http</uri_protocol>
  <uri_protocol>https</uri_protocol>
  <uri_protocol>file</uri_protocol>
  <uri_protocol>smb</uri_protocol>
  <uri_protocol>ftp</uri_protocol>
  <uri_protocol>sftp</uri_protocol>
  <uri_protocol>ssh</uri_protocol>
  <uri_protocol>dav</uri_protocol>
 </feature>
</plugin>
<plugin>
 <name>ossaudio</name>
 <description>OSS (Open Sound System) support for GStreamer</description>
 <filename>/usr/lib/gstreamer-0.10/libgstossaudio.so</filename>
 <size>49408</size>
 <m32p>1210196830</m32p>
 <version>0.10.7</version>
 <license>LGPL</license>
 <source>gst-plugins-good</source>
 <package>GStreamer Good Plugins (Ubuntu)</package>
 <origin>https://launchpad.net/distros/ubuntu/+source/gst-plugins-good0.10</origin>
 <feature typename="GstElementFactory">
  <name>osssink</name>
  <rank>128</rank>
  <longname>Audio Sink (OSS)</longname>
  <class>Sink/Audio</class>
  <description>Output to a sound card via OSS</description>
  <author>Erik Walthinsen &lt;omega@cse.ogi.edu&gt;, Wim Taymans &lt;wim.taymans@chello.be&gt;</author>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>audio/x-raw-int, endianness=(int){ 1234 }, signed=(boolean){ true, false }, width=(int)16, depth=(int)16, rate=(int)[ 1, 2147483647 ], channels=(int)[ 1, 2 ]; audio/x-raw-int, signed=(boolean){ true, false }, width=(int)8, depth=(int)8, rate=(int)[ 1, 2147483647 ], channels=(int)[ 1, 2 ]</caps>
  </padtemplate>
 </feature>
 <feature typename="GstElementFactory">
  <name>osssrc</name>
  <rank>256</rank>
  <longname>Audio Source (OSS)</longname>
  <class>Source/Audio</class>
  <description>Capture from a sound card via OSS</description>
  <author>Erik Walthinsen &lt;omega@cse.ogi.edu&gt;, Wim Taymans &lt;wim@fluendo.com&gt;</author>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>audio/x-raw-int, endianness=(int){ 1234 }, signed=(boolean){ true, false }, width=(int)16, depth=(int)16, rate=(int)[ 1, 2147483647 ], channels=(int)[ 1, 2 ]; audio/x-raw-int, signed=(boolean){ true, false }, width=(int)8, depth=(int)8, rate=(int)[ 1, 2147483647 ], channels=(int)[ 1, 2 ]</caps>
  </padtemplate>
  <interface>GstImplementsInterface</interface>
  <interface>GstMixer</interface>
 </feature>
 <feature typename="GstElementFactory">
  <name>ossmixer</name>
  <longname>OSS Mixer</longname>
  <class>Generic/Audio</class>
  <description>Control sound input and output levels with OSS</description>
  <author>Andrew Vander Wingo &lt;wingo@pobox.com&gt;</author>
  <interface>GstImplementsInterface</interface>
  <interface>GstMixer</interface>
 </feature>
</plugin>
<plugin>
 <name>debug</name>
 <description>elements for testing and debugging</description>
 <filename>/usr/lib/gstreamer-0.10/libgstdebug.so</filename>
 <size>50912</size>
 <m32p>1210196830</m32p>
 <version>0.10.7</version>
 <license>LGPL</license>
 <source>gst-plugins-good</source>
 <package>GStreamer Good Plugins (Ubuntu)</package>
 <origin>https://launchpad.net/distros/ubuntu/+source/gst-plugins-good0.10</origin>
 <feature typename="GstElementFactory">
  <name>testsink</name>
  <longname>Test plugin</longname>
  <class>Testing</class>
  <description>perform a number of tests</description>
  <author>Benjamin Otte &lt;otte@gnome&gt;</author>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>ANY</caps>
  </padtemplate>
 </feature>
 <feature typename="GstElementFactory">
  <name>progressreport</name>
  <longname>Progress report</longname>
  <class>Testing</class>
  <description>Periodically query and report on processing progress</description>
  <author>Jan Schmidt &lt;thaytan@mad.scientist.com&gt;</author>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>ANY</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>ANY</caps>
  </padtemplate>
 </feature>
 <feature typename="GstElementFactory">
  <name>navseek</name>
  <longname>Seek based on left-right arrows</longname>
  <class>Filter/Video</class>
  <description>Seek based on navigation keys left-right</description>
  <author>Jan Schmidt &lt;thaytan@mad.scientist.com&gt;</author>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>ANY</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>ANY</caps>
  </padtemplate>
 </feature>
 <feature typename="GstElementFactory">
  <name>rndbuffersize</name>
  <longname>Random buffer size</longname>
  <class>Testing</class>
  <description>pull random sized buffers</description>
  <author>Nokia Corporation (contact &lt;stefan.kost@nokia.com&gt;)</author>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>ANY</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>ANY</caps>
  </padtemplate>
 </feature>
 <feature typename="GstElementFactory">
  <name>breakmydata</name>
  <longname>Break my data</longname>
  <class>Testing</class>
  <description>randomly change data in the stream</description>
  <author>Benjamin Otte &lt;otte@gnome&gt;</author>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>ANY</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>ANY</caps>
  </padtemplate>
 </feature>
</plugin>
<plugin>
 <name>wavparse</name>
 <description>Parse a .wav file into raw audio</description>
 <filename>/usr/lib/gstreamer-0.10/libgstwavparse.so</filename>
 <size>42336</size>
 <m32p>1210196831</m32p>
 <version>0.10.7</version>
 <license>LGPL</license>
 <source>gst-plugins-good</source>
 <package>GStreamer Good Plugins (Ubuntu)</package>
 <origin>https://launchpad.net/distros/ubuntu/+source/gst-plugins-good0.10</origin>
 <feature typename="GstElementFactory">
  <name>wavparse</name>
  <rank>256</rank>
  <longname>WAV audio demuxer</longname>
  <class>Codec/Demuxer/Audio</class>
  <description>Parse a .wav file into raw audio</description>
  <author>Erik Walthinsen &lt;omega@cse.ogi.edu&gt;</author>
  <padtemplate>
   <nametemplate>wavparse_sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>audio/x-wav</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>wavparse_src</nametemplate>
   <direction>src</direction>
   <presence>sometimes</presence>
   <caps>audio/ms-gsm, rate=(int)[ 1000, 96000 ], channels=(int)[ 1, 2 ]; audio/mpeg, mpegversion=(int)1, layer=(int)3, rate=(int)[ 8000, 48000 ], channels=(int)[ 1, 2 ]; audio/mpeg, mpegversion=(int)1, layer=(int)2, rate=(int)[ 16000, 48000 ], channels=(int)[ 1, 2 ]; audio/x-raw-int, endianness=(int)1234, signed=(boolean){ true, false }, width=(int){ 8, 16, 24, 32 }, depth=(int)[ 1, 32 ], rate=(int)[ 1000, 96000 ], channels=(int)[ 1, 8 ]; audio/x-vorbis, rate=(int)[ 1000, 96000 ], channels=(int)[ 1, 2 ]; audio/x-ac3, rate=(int)[ 1000, 96000 ], channels=(int)[ 1, 6 ]; audio/x-dts; audio/mpeg, mpegversion=(int)4, rate=(int)[ 1000, 96000 ], channels=(int)[ 1, 8 ]; audio/x-alaw, rate=(int)[ 1000, 48000 ], channels=(int)[ 1, 2 ]; audio/x-mulaw, rate=(int)[ 1000, 48000 ], channels=(int)[ 1, 2 ]; audio/x-wms, bitrate=(int)[ 0, 2147483647 ], rate=(int)[ 1000, 96000 ], channels=(int)[ 1, 2 ], block_align=(int)[ 1, 2147483647 ]; audio/x-adpcm, layout=(string)microsoft, rate=(int)[ 1000, 96000 ], channels=(int)[ 1, 2 ], block_align=(int)[ 1, 2147483647 ]; audio/x-adpcm, layout=(string)dvi, rate=(int)[ 1000, 48000 ], channels=(int)[ 1, 2 ], block_align=(int)[ 1, 2147483647 ]; audio/x-wma, wmaversion=(int)1, bitrate=(int)[ 0, 2147483647 ], rate=(int)[ 1000, 96000 ], channels=(int)[ 1, 6 ], block_align=(int)[ 1, 2147483647 ]; audio/x-wma, wmaversion=(int)2, bitrate=(int)[ 0, 2147483647 ], rate=(int)[ 1000, 96000 ], channels=(int)[ 1, 6 ], block_align=(int)[ 1, 2147483647 ]; audio/x-wma, wmaversion=(int)3, bitrate=(int)[ 0, 2147483647 ], rate=(int)[ 1000, 96000 ], channels=(int)[ 1, 6 ], block_align=(int)[ 1, 2147483647 ]; audio/x-vnd.sony.atrac3, rate=(int)[ 1000, 96000 ], channels=(int)[ 1, 2 ]; audio/x-raw-float, endianness=(int)1234, width=(int){ 32, 64 }, rate=(int)[ 1000, 96000 ], channels=(int)[ 1, 8 ]; audio/x-voxware, voxwaretype=(int)98, rate=(int)[ 1000, 96000 ], channels=(int)[ 1, 2 ]; application/x-ogg-avi</caps>
  </padtemplate>
 </feature>
</plugin>
<plugin>
 <name>speex</name>
 <description>Speex plugin library</description>
 <filename>/usr/lib/gstreamer-0.10/libgstspeex.so</filename>
 <size>45536</size>
 <m32p>1210196831</m32p>
 <version>0.10.7</version>
 <license>LGPL</license>
 <source>gst-plugins-good</source>
 <package>GStreamer Good Plugins (Ubuntu)</package>
 <origin>https://launchpad.net/distros/ubuntu/+source/gst-plugins-good0.10</origin>
 <feature typename="GstElementFactory">
  <name>speexdec</name>
  <rank>256</rank>
  <longname>Speex audio decoder</longname>
  <class>Codec/Decoder/Audio</class>
  <description>decode speex streams to audio</description>
  <author>Wim Taymans &lt;wim@fluendo.com&gt;</author>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>audio/x-raw-int, rate=(int)[ 6000, 48000 ], channels=(int)[ 1, 2 ], endianness=(int)1234, signed=(boolean)true, width=(int)16, depth=(int)16</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>audio/x-speex</caps>
  </padtemplate>
 </feature>
 <feature typename="GstElementFactory">
  <name>speexenc</name>
  <longname>Speex audio encoder</longname>
  <class>Codec/Encoder/Audio</class>
  <description>Encodes audio in Speex format</description>
  <author>Wim Taymans &lt;wim@fluendo.com&gt;</author>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>audio/x-speex</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>audio/x-raw-int, rate=(int)[ 6000, 48000 ], channels=(int)[ 1, 2 ], endianness=(int)1234, signed=(boolean)true, width=(int)16, depth=(int)16</caps>
  </padtemplate>
  <interface>GstTagSetter</interface>
 </feature>
</plugin>
<plugin>
 <name>dv</name>
 <description>DV demuxer and decoder based on libdv (libdv.sf.net)</description>
 <filename>/usr/lib/gstreamer-0.10/libgstdv.so</filename>
 <size>49816</size>
 <m32p>1210196830</m32p>
 <version>0.10.7</version>
 <license>LGPL</license>
 <source>gst-plugins-good</source>
 <package>GStreamer Good Plugins (Ubuntu)</package>
 <origin>https://launchpad.net/distros/ubuntu/+source/gst-plugins-good0.10</origin>
 <feature typename="GstElementFactory">
  <name>dvdec</name>
  <rank>256</rank>
  <longname>DV video decoder</longname>
  <class>Codec/Decoder/Video</class>
  <description>Uses libdv to decode DV video (smpte314) (libdv.sourceforge.net)</description>
  <author>Erik Walthinsen &lt;omega@cse.ogi.edu&gt;,Wim Taymans &lt;wim@fluendo.com&gt;</author>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>video/x-dv, systemstream=(boolean)false</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>video/x-raw-yuv, format=(fourcc)YUY2, width=(int)720, framerate=(fraction)[ 1/1, 60/1 ]; video/x-raw-rgb, bpp=(int)32, depth=(int)24, endianness=(int)4321, red_mask=(int)65280, green_mask=(int)16711680, blue_mask=(int)-16777216, width=(int)720, framerate=(fraction)[ 1/1, 60/1 ]; video/x-raw-rgb, bpp=(int)24, depth=(int)24, endianness=(int)4321, red_mask=(int)16711680, green_mask=(int)65280, blue_mask=(int)255, width=(int)720, framerate=(fraction)[ 1/1, 60/1 ]</caps>
  </padtemplate>
 </feature>
 <feature typename="GstElementFactory">
  <name>dvdemux</name>
  <rank>256</rank>
  <longname>DV system stream demuxer</longname>
  <class>Codec/Demuxer</class>
  <description>Uses libdv to separate DV audio from DV video (libdv.sourceforge.net)</description>
  <author>Erik Walthinsen &lt;omega@cse.ogi.edu&gt;, Wim Taymans &lt;wim@fluendo.com&gt;</author>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>video/x-dv, systemstream=(boolean)true</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>video</nametemplate>
   <direction>src</direction>
   <presence>sometimes</presence>
   <caps>video/x-dv, systemstream=(boolean)false</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>audio</nametemplate>
   <direction>src</direction>
   <presence>sometimes</presence>
   <caps>audio/x-raw-int, depth=(int)16, width=(int)16, signed=(boolean)true, channels=(int){ 2, 4 }, endianness=(int)1234, rate=(int){ 32000, 44100, 48000 }</caps>
  </padtemplate>
 </feature>
</plugin>
<plugin>
 <name>audiofx</name>
 <description>Audio effects plugin</description>
 <filename>/usr/lib/gstreamer-0.10/libgstaudiofx.so</filename>
 <size>87232</size>
 <m32p>1210196830</m32p>
 <version>0.10.7</version>
 <license>LGPL</license>
 <source>gst-plugins-good</source>
 <package>GStreamer</package>
 <origin>http://gstreamer.net/</origin>
 <feature typename="GstElementFactory">
  <name>audiowsincband</name>
  <longname>Band pass &amp; band reject filter</longname>
  <class>Filter/Effect/Audio</class>
  <description>Band pass and band reject windowed sinc filter</description>
  <author>Thomas &lt;thomas@apestaart.org&gt;, Steven W. Smith, Dreamlab Technologies Ltd. &lt;mathis.hofer@dreamlab.net&gt;, Sebastian Dröge &lt;slomo@circular-chaos.org&gt;</author>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>audio/x-raw-float, width=(int){ 32, 64 }, endianness=(int)1234, rate=(int)[ 1, 2147483647 ], channels=(int)[ 1, 2147483647 ]</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>audio/x-raw-float, width=(int){ 32, 64 }, endianness=(int)1234, rate=(int)[ 1, 2147483647 ], channels=(int)[ 1, 2147483647 ]</caps>
  </padtemplate>
 </feature>
 <feature typename="GstElementFactory">
  <name>audiowsinclimit</name>
  <longname>Low pass &amp; high pass filter</longname>
  <class>Filter/Effect/Audio</class>
  <description>Low pass and high pass windowed sinc filter</description>
  <author>Thomas &lt;thomas@apestaart.org&gt;, Steven W. Smith, Dreamlab Technologies Ltd. &lt;mathis.hofer@dreamlab.net&gt;, Sebastian Dröge &lt;slomo@circular-chaos.org&gt;</author>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>audio/x-raw-float, width=(int){ 32, 64 }, endianness=(int)1234, rate=(int)[ 1, 2147483647 ], channels=(int)[ 1, 2147483647 ]</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>audio/x-raw-float, width=(int){ 32, 64 }, endianness=(int)1234, rate=(int)[ 1, 2147483647 ], channels=(int)[ 1, 2147483647 ]</caps>
  </padtemplate>
 </feature>
 <feature typename="GstElementFactory">
  <name>audiochebband</name>
  <longname>Band pass &amp; band reject filter</longname>
  <class>Filter/Effect/Audio</class>
  <description>Chebyshev band pass and band reject filter</description>
  <author>Sebastian Dröge &lt;slomo@circular-chaos.org&gt;</author>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>audio/x-raw-float, width=(int){ 32, 64 }, endianness=(int)1234, rate=(int)[ 1, 2147483647 ], channels=(int)[ 1, 2147483647 ]</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>audio/x-raw-float, width=(int){ 32, 64 }, endianness=(int)1234, rate=(int)[ 1, 2147483647 ], channels=(int)[ 1, 2147483647 ]</caps>
  </padtemplate>
 </feature>
 <feature typename="GstElementFactory">
  <name>audiocheblimit</name>
  <longname>Low pass &amp; high pass filter</longname>
  <class>Filter/Effect/Audio</class>
  <description>Chebyshev low pass and high pass filter</description>
  <author>Sebastian Dröge &lt;slomo@circular-chaos.org&gt;</author>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>audio/x-raw-float, width=(int){ 32, 64 }, endianness=(int)1234, rate=(int)[ 1, 2147483647 ], channels=(int)[ 1, 2147483647 ]</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>audio/x-raw-float, width=(int){ 32, 64 }, endianness=(int)1234, rate=(int)[ 1, 2147483647 ], channels=(int)[ 1, 2147483647 ]</caps>
  </padtemplate>
 </feature>
 <feature typename="GstElementFactory">
  <name>audiodynamic</name>
  <longname>Dynamic range controller</longname>
  <class>Filter/Effect/Audio</class>
  <description>Compressor and Expander</description>
  <author>Sebastian Dröge &lt;slomo@circular-chaos.org&gt;</author>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>audio/x-raw-int, depth=(int)16, width=(int)16, endianness=(int)1234, signed=(boolean)true, rate=(int)[ 1, 2147483647 ], channels=(int)[ 1, 2147483647 ]; audio/x-raw-float, width=(int)32, endianness=(int)1234, rate=(int)[ 1, 2147483647 ], channels=(int)[ 1, 2147483647 ]</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>audio/x-raw-int, depth=(int)16, width=(int)16, endianness=(int)1234, signed=(boolean)true, rate=(int)[ 1, 2147483647 ], channels=(int)[ 1, 2147483647 ]; audio/x-raw-float, width=(int)32, endianness=(int)1234, rate=(int)[ 1, 2147483647 ], channels=(int)[ 1, 2147483647 ]</caps>
  </padtemplate>
 </feature>
 <feature typename="GstElementFactory">
  <name>audioamplify</name>
  <longname>Audio amplifier</longname>
  <class>Filter/Effect/Audio</class>
  <description>Amplifies an audio stream by a given factor</description>
  <author>Sebastian Dröge &lt;slomo@circular-chaos.org&gt;</author>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>audio/x-raw-int, depth=(int)16, width=(int)16, endianness=(int)1234, signed=(boolean)true, rate=(int)[ 1, 2147483647 ], channels=(int)[ 1, 2147483647 ]; audio/x-raw-float, width=(int)32, endianness=(int)1234, rate=(int)[ 1, 2147483647 ], channels=(int)[ 1, 2147483647 ]</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>audio/x-raw-int, depth=(int)16, width=(int)16, endianness=(int)1234, signed=(boolean)true, rate=(int)[ 1, 2147483647 ], channels=(int)[ 1, 2147483647 ]; audio/x-raw-float, width=(int)32, endianness=(int)1234, rate=(int)[ 1, 2147483647 ], channels=(int)[ 1, 2147483647 ]</caps>
  </padtemplate>
 </feature>
 <feature typename="GstElementFactory">
  <name>audioinvert</name>
  <longname>Audio inversion</longname>
  <class>Filter/Effect/Audio</class>
  <description>Swaps upper and lower half of audio samples</description>
  <author>Sebastian Dröge &lt;slomo@circular-chaos.org&gt;</author>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>audio/x-raw-int, depth=(int)16, width=(int)16, endianness=(int)1234, signed=(boolean)true, rate=(int)[ 1, 2147483647 ], channels=(int)[ 1, 2147483647 ]; audio/x-raw-float, width=(int)32, endianness=(int)1234, rate=(int)[ 1, 2147483647 ], channels=(int)[ 1, 2147483647 ]</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>audio/x-raw-int, depth=(int)16, width=(int)16, endianness=(int)1234, signed=(boolean)true, rate=(int)[ 1, 2147483647 ], channels=(int)[ 1, 2147483647 ]; audio/x-raw-float, width=(int)32, endianness=(int)1234, rate=(int)[ 1, 2147483647 ], channels=(int)[ 1, 2147483647 ]</caps>
  </padtemplate>
 </feature>
 <feature typename="GstElementFactory">
  <name>audiopanorama</name>
  <longname>Stereo positioning</longname>
  <class>Filter/Effect/Audio</class>
  <description>Positions audio streams in the stereo panorama</description>
  <author>Stefan Kost &lt;ensonic@users.sf.net&gt;</author>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>audio/x-raw-float, rate=(int)[ 1, 2147483647 ], channels=(int)2, endianness=(int)1234, width=(int)32; audio/x-raw-int, rate=(int)[ 1, 2147483647 ], channels=(int)2, endianness=(int)1234, width=(int)16, depth=(int)16, signed=(boolean)true</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>audio/x-raw-float, rate=(int)[ 1, 2147483647 ], channels=(int)[ 1, 2 ], endianness=(int)1234, width=(int)32; audio/x-raw-int, rate=(int)[ 1, 2147483647 ], channels=(int)[ 1, 2 ], endianness=(int)1234, width=(int)16, depth=(int)16, signed=(boolean)true</caps>
  </padtemplate>
 </feature>
</plugin>
<plugin>
 <name>videoflip</name>
 <description>Flips and rotates video</description>
 <filename>/usr/lib/gstreamer-0.10/libgstvideoflip.so</filename>
 <size>20736</size>
 <m32p>1210196831</m32p>
 <version>0.10.7</version>
 <license>LGPL</license>
 <source>gst-plugins-good</source>
 <package>GStreamer Good Plugins (Ubuntu)</package>
 <origin>https://launchpad.net/distros/ubuntu/+source/gst-plugins-good0.10</origin>
 <feature typename="GstElementFactory">
  <name>videoflip</name>
  <longname>Video flipper</longname>
  <class>Filter/Effect/Video</class>
  <description>Flips and rotates video</description>
  <author>David Schleef &lt;ds@schleef.org&gt;</author>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>video/x-raw-yuv, format=(fourcc){ IYUV, I420, YV12 }, width=(int)[ 1, 2147483647 ], height=(int)[ 1, 2147483647 ], framerate=(fraction)[ 0/1, 2147483647/1 ]</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>video/x-raw-yuv, format=(fourcc){ IYUV, I420, YV12 }, width=(int)[ 1, 2147483647 ], height=(int)[ 1, 2147483647 ], framerate=(fraction)[ 0/1, 2147483647/1 ]</caps>
  </padtemplate>
 </feature>
</plugin>
<plugin>
 <name>gdkpixbuf</name>
 <description>GDK Pixbuf decoder &amp; scaler</description>
 <filename>/usr/lib/gstreamer-0.10/libgstgdkpixbuf.so</filename>
 <size>29984</size>
 <m32p>1210196830</m32p>
 <version>0.10.7</version>
 <license>LGPL</license>
 <source>gst-plugins-good</source>
 <package>GStreamer Good Plugins (Ubuntu)</package>
 <origin>https://launchpad.net/distros/ubuntu/+source/gst-plugins-good0.10</origin>
 <feature typename="GstElementFactory">
  <name>gdkpixbufscale</name>
  <longname>GdkPixbuf image scaler</longname>
  <class>Filter/Effect/Video</class>
  <description>Resizes video</description>
  <author>Jan Schmidt &lt;thaytan@mad.scientist.com&gt;
Wim Taymans &lt;wim.taymans@chello.be&gt;
Renato Filho &lt;renato.filho@indt.org.br&gt;</author>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>video/x-raw-rgb, bpp=(int)24, depth=(int)24, endianness=(int)4321, red_mask=(int)16711680, green_mask=(int)65280, blue_mask=(int)255, width=(int)[ 1, 2147483647 ], height=(int)[ 1, 2147483647 ], framerate=(fraction)[ 0/1, 2147483647/1 ]</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>video/x-raw-rgb, bpp=(int)24, depth=(int)24, endianness=(int)4321, red_mask=(int)16711680, green_mask=(int)65280, blue_mask=(int)255, width=(int)[ 1, 2147483647 ], height=(int)[ 1, 2147483647 ], framerate=(fraction)[ 0/1, 2147483647/1 ]</caps>
  </padtemplate>
 </feature>
 <feature typename="GstElementFactory">
  <name>gdkpixbufdec</name>
  <rank>64</rank>
  <longname>GdkPixbuf image decoder</longname>
  <class>Codec/Decoder/Image</class>
  <description>Decodes images in a video stream using GdkPixbuf</description>
  <author>David A. Schleef &lt;ds@schleef.org&gt;, Renato Filho &lt;renato.filho@indt.org.br&gt;</author>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>video/x-raw-rgb, bpp=(int)24, depth=(int)24, endianness=(int)4321, red_mask=(int)16711680, green_mask=(int)65280, blue_mask=(int)255, width=(int)[ 1, 2147483647 ], height=(int)[ 1, 2147483647 ], framerate=(fraction)[ 0/1, 2147483647/1 ]; video/x-raw-rgb, bpp=(int)32, depth=(int)32, endianness=(int)4321, red_mask=(int)-16777216, green_mask=(int)16711680, blue_mask=(int)65280, alpha_mask=(int)255, width=(int)[ 1, 2147483647 ], height=(int)[ 1, 2147483647 ], framerate=(fraction)[ 0/1, 2147483647/1 ]</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>image/png; image/gif; image/x-icon; application/x-navi-animation; image/x-cmu-raster; image/x-sun-raster; image/x-pixmap; image/tiff; image/x-portable-anymap; image/x-portable-bitmap; image/x-portable-graymap; image/x-portable-pixmap; image/bmp; image/x-bmp; image/x-MS-bmp; image/vnd.wap.wbmp; image/x-bitmap; image/x-tga; image/x-pcx; image/svg; image/svg+xml</caps>
  </padtemplate>
 </feature>
</plugin>
<plugin>
 <name>cairo</name>
 <description>Cairo-based overlaying</description>
 <filename>/usr/lib/gstreamer-0.10/libgstcairo.so</filename>
 <size>33856</size>
 <m32p>1210196830</m32p>
 <version>0.10.7</version>
 <license>LGPL</license>
 <source>gst-plugins-good</source>
 <package>GStreamer Good Plugins (Ubuntu)</package>
 <origin>https://launchpad.net/distros/ubuntu/+source/gst-plugins-good0.10</origin>
 <feature typename="GstElementFactory">
  <name>cairotimeoverlay</name>
  <longname>Time overlay</longname>
  <class>Filter/Editor/Video</class>
  <description>Overlays the time on a video stream</description>
  <author>David Schleef &lt;ds@schleef.org&gt;</author>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>video/x-raw-yuv, format=(fourcc)I420, width=(int)[ 1, 2147483647 ], height=(int)[ 1, 2147483647 ], framerate=(fraction)[ 0/1, 2147483647/1 ]</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>video/x-raw-yuv, format=(fourcc)I420, width=(int)[ 1, 2147483647 ], height=(int)[ 1, 2147483647 ], framerate=(fraction)[ 0/1, 2147483647/1 ]</caps>
  </padtemplate>
 </feature>
 <feature typename="GstElementFactory">
  <name>cairotextoverlay</name>
  <longname>Text overlay</longname>
  <class>Filter/Editor/Video</class>
  <description>Adds text strings on top of a video buffer</description>
  <author>David Schleef &lt;ds@schleef.org&gt;</author>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>video/x-raw-yuv, format=(fourcc)I420, width=(int)[ 1, 2147483647 ], height=(int)[ 1, 2147483647 ], framerate=(fraction)[ 0/1, 2147483647/1 ]</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>video_sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>video/x-raw-yuv, format=(fourcc)I420, width=(int)[ 1, 2147483647 ], height=(int)[ 1, 2147483647 ], framerate=(fraction)[ 0/1, 2147483647/1 ]</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>text_sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>text/plain</caps>
  </padtemplate>
 </feature>
</plugin>
<plugin>
 <name>flxdec</name>
 <description>FLC/FLI/FLX video decoder</description>
 <filename>/usr/lib/gstreamer-0.10/libgstflxdec.so</filename>
 <size>18272</size>
 <m32p>1210196830</m32p>
 <version>0.10.7</version>
 <license>LGPL</license>
 <source>gst-plugins-good</source>
 <package>GStreamer Good Plugins (Ubuntu)</package>
 <origin>https://launchpad.net/distros/ubuntu/+source/gst-plugins-good0.10</origin>
 <feature typename="GstElementFactory">
  <name>flxdec</name>
  <rank>256</rank>
  <longname>FLX audio decoder</longname>
  <class>Codec/Decoder/Video</class>
  <description>FLC/FLI/FLX video decoder</description>
  <author>Sepp Wijnands &lt;mrrazz@garbage-coderz.net&gt;, Zeeshan Ali &lt;zeenix@gmail.com&gt;</author>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>video/x-fli</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>video/x-raw-rgb, bpp=(int)32, depth=(int)24, endianness=(int)4321, red_mask=(int)65280, green_mask=(int)16711680, blue_mask=(int)-16777216, width=(int)[ 1, 2147483647 ], height=(int)[ 1, 2147483647 ], framerate=(fraction)[ 0/1, 2147483647/1 ]</caps>
  </padtemplate>
 </feature>
</plugin>
<plugin>
 <name>alaw</name>
 <description>ALaw audio conversion routines</description>
 <filename>/usr/lib/gstreamer-0.10/libgstalaw.so</filename>
 <size>17640</size>
 <m32p>1210196830</m32p>
 <version>0.10.7</version>
 <license>LGPL</license>
 <source>gst-plugins-good</source>
 <package>GStreamer Good Plugins (Ubuntu)</package>
 <origin>https://launchpad.net/distros/ubuntu/+source/gst-plugins-good0.10</origin>
 <feature typename="GstElementFactory">
  <name>alawdec</name>
  <rank>256</rank>
  <longname>A Law audio decoder</longname>
  <class>Codec/Decoder/Audio</class>
  <description>Convert 8bit A law to 16bit PCM</description>
  <author>Zaheer Abbas Merali &lt;zaheerabbas at merali dot org&gt;</author>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>audio/x-raw-int, width=(int)16, depth=(int)16, endianness=(int)1234, signed=(boolean)true, rate=(int)[ 8000, 192000 ], channels=(int)[ 1, 2 ]</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>audio/x-alaw, rate=(int)[ 8000, 192000 ], channels=(int)[ 1, 2 ]</caps>
  </padtemplate>
 </feature>
 <feature typename="GstElementFactory">
  <name>alawenc</name>
  <longname>A Law audio encoder</longname>
  <class>Codec/Encoder/Audio</class>
  <description>Convert 16bit PCM to 8bit A law</description>
  <author>Zaheer Abbas Merali &lt;zaheerabbas at merali dot org&gt;</author>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>audio/x-alaw, rate=(int)[ 8000, 192000 ], channels=(int)[ 1, 2 ]</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>audio/x-raw-int, width=(int)16, depth=(int)16, endianness=(int)1234, signed=(boolean)true, rate=(int)[ 8000, 192000 ], channels=(int)[ 1, 2 ]</caps>
  </padtemplate>
 </feature>
</plugin>
<plugin>
 <name>level</name>
 <description>Audio level plugin</description>
 <filename>/usr/lib/gstreamer-0.10/libgstlevel.so</filename>
 <size>19936</size>
 <m32p>1210196830</m32p>
 <version>0.10.7</version>
 <license>LGPL</license>
 <source>gst-plugins-good</source>
 <package>GStreamer Good Plugins (Ubuntu)</package>
 <origin>https://launchpad.net/distros/ubuntu/+source/gst-plugins-good0.10</origin>
 <feature typename="GstElementFactory">
  <name>level</name>
  <longname>Level</longname>
  <class>Filter/Analyzer/Audio</class>
  <description>RMS/Peak/Decaying Peak Level messager for audio/raw</description>
  <author>Thomas Vander Stichele &lt;thomas at apestaart dot org&gt;</author>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>audio/x-raw-int, rate=(int)[ 1, 2147483647 ], channels=(int)[ 1, 2147483647 ], endianness=(int)1234, width=(int){ 8, 16 }, depth=(int){ 8, 16 }, signed=(boolean)true; audio/x-raw-float, rate=(int)[ 1, 2147483647 ], channels=(int)[ 1, 2147483647 ], endianness=(int)1234, width=(int){ 32, 64 }</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>audio/x-raw-int, rate=(int)[ 1, 2147483647 ], channels=(int)[ 1, 2147483647 ], endianness=(int)1234, width=(int){ 8, 16 }, depth=(int){ 8, 16 }, signed=(boolean)true; audio/x-raw-float, rate=(int)[ 1, 2147483647 ], channels=(int)[ 1, 2147483647 ], endianness=(int)1234, width=(int){ 32, 64 }</caps>
  </padtemplate>
 </feature>
</plugin>
<plugin>
 <name>ximagesrc</name>
 <description>X11 video input plugin using standard Xlib calls</description>
 <filename>/usr/lib/gstreamer-0.10/libgstximagesrc.so</filename>
 <size>40832</size>
 <m32p>1210196831</m32p>
 <version>0.10.7</version>
 <license>LGPL</license>
 <source>gst-plugins-good</source>
 <package>GStreamer Good Plugins (Ubuntu)</package>
 <origin>https://launchpad.net/distros/ubuntu/+source/gst-plugins-good0.10</origin>
 <feature typename="GstElementFactory">
  <name>ximagesrc</name>
  <longname>Ximage video source</longname>
  <class>Source/Video</class>
  <description>Creates a screenshot video stream</description>
  <author>Lutz Mueller &lt;lutz@users.sourceforge.net&gt;, Jan Schmidt &lt;thaytan@mad.scientist.com&gt;, Zaheer Merali &lt;zaheerabbas at merali dot org&gt;</author>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>video/x-raw-rgb, framerate=(fraction)[ 0/1, 2147483647/1 ], width=(int)[ 1, 2147483647 ], height=(int)[ 1, 2147483647 ], pixel-aspect-ratio=(fraction)[ 0/1, 2147483647/1 ]</caps>
  </padtemplate>
 </feature>
</plugin>
<plugin>
 <name>autodetect</name>
 <description>Plugin contains auto-detection plugins for video/audio outputs</description>
 <filename>/usr/lib/gstreamer-0.10/libgstautodetect.so</filename>
 <size>24752</size>
 <m32p>1210196830</m32p>
 <version>0.10.7</version>
 <license>LGPL</license>
 <source>gst-plugins-good</source>
 <package>GStreamer Good Plugins (Ubuntu)</package>
 <origin>https://launchpad.net/distros/ubuntu/+source/gst-plugins-good0.10</origin>
 <feature typename="GstElementFactory">
  <name>autoaudiosink</name>
  <longname>Auto audio sink</longname>
  <class>Sink/Audio</class>
  <description>Wrapper audio sink for automatically detected audio sink</description>
  <author>Ronald Bultje &lt;rbultje@ronald.bitfreak.net&gt;
Jan Schmidt &lt;thaytan@noraisin.net</author>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>ANY</caps>
  </padtemplate>
  <interface>GstChildProxy</interface>
 </feature>
 <feature typename="GstElementFactory">
  <name>autovideosink</name>
  <longname>Auto video sink</longname>
  <class>Sink/Video</class>
  <description>Wrapper video sink for automatically detected video sink</description>
  <author>Ronald Bultje &lt;rbultje@ronald.bitfreak.net&gt;
Jan Schmidt &lt;thaytan@noraisin.net</author>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>ANY</caps>
  </padtemplate>
  <interface>GstChildProxy</interface>
 </feature>
</plugin>
<plugin>
 <name>efence</name>
 <description>This element converts a stream of normal GStreamer buffers into a stream of buffers that are allocated in such a way that out-of-bounds access to data in the buffer is more likely to cause segmentation faults.  This allocation method is very similar to the debugging tool &quot;Electric Fence&quot;.</description>
 <filename>/usr/lib/gstreamer-0.10/libgstefence.so</filename>
 <size>16896</size>
 <m32p>1210196830</m32p>
 <version>0.10.7</version>
 <license>LGPL</license>
 <source>gst-plugins-good</source>
 <package>GStreamer Good Plugins (Ubuntu)</package>
 <origin>https://launchpad.net/distros/ubuntu/+source/gst-plugins-good0.10</origin>
 <feature typename="GstElementFactory">
  <name>efence</name>
  <longname>Electric Fence</longname>
  <class>Testing</class>
  <description>This element converts a stream of normal GStreamer buffers into a stream of buffers that are allocated in such a way that out-of-bounds access to data in the buffer is more likely to cause segmentation faults.  This allocation method is very similar to the debugging tool &quot;Electric Fence&quot;.</description>
  <author>David A. Schleef &lt;ds@schleef.org&gt;</author>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>ANY</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>ANY</caps>
  </padtemplate>
 </feature>
</plugin>
<plugin>
 <name>videobalance</name>
 <description>Changes hue, saturation, brightness etc. on video images</description>
 <filename>/usr/lib/gstreamer-0.10/libgstvideobalance.so</filename>
 <size>17320</size>
 <m32p>1210196831</m32p>
 <version>0.10.7</version>
 <license>LGPL</license>
 <source>gst-plugins-good</source>
 <package>GStreamer Good Plugins (Ubuntu)</package>
 <origin>https://launchpad.net/distros/ubuntu/+source/gst-plugins-good0.10</origin>
 <feature typename="GstElementFactory">
  <name>videobalance</name>
  <longname>Video balance</longname>
  <class>Filter/Effect/Video</class>
  <description>Adjusts brightness, contrast, hue, saturation on a video stream</description>
  <author>David Schleef &lt;ds@schleef.org&gt;</author>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>video/x-raw-yuv, format=(fourcc){ IYUV, I420, YV12 }, width=(int)[ 1, 2147483647 ], height=(int)[ 1, 2147483647 ], framerate=(fraction)[ 0/1, 2147483647/1 ]</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>video/x-raw-yuv, format=(fourcc){ IYUV, I420, YV12 }, width=(int)[ 1, 2147483647 ], height=(int)[ 1, 2147483647 ], framerate=(fraction)[ 0/1, 2147483647/1 ]</caps>
  </padtemplate>
  <interface>GstImplementsInterface</interface>
  <interface>GstColorBalance</interface>
 </feature>
</plugin>
<plugin>
 <name>shout2send</name>
 <description>Sends data to an icecast server using libshout2</description>
 <filename>/usr/lib/gstreamer-0.10/libgstshout2.so</filename>
 <size>24256</size>
 <m32p>1210196830</m32p>
 <version>0.10.7</version>
 <license>LGPL</license>
 <source>gst-plugins-good</source>
 <package>libshout2</package>
 <origin>http://www.icecast.org/download.html</origin>
 <feature typename="GstElementFactory">
  <name>shout2send</name>
  <longname>Icecast network sink</longname>
  <class>Sink/Network</class>
  <description>Sends data to an icecast server</description>
  <author>Wim Taymans &lt;wim.taymans@chello.be&gt;
Pedro Corte-Real &lt;typo@netcabo.pt&gt;
Zaheer Abbas Merali &lt;zaheerabbas at merali dot org&gt;</author>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>application/ogg; audio/mpeg, mpegversion=(int)1, layer=(int)[ 1, 3 ]</caps>
  </padtemplate>
  <interface>GstTagSetter</interface>
 </feature>
</plugin>
<plugin>
 <name>multifile</name>
 <description>Writes buffers to sequentially named files</description>
 <filename>/usr/lib/gstreamer-0.10/libgstmultifile.so</filename>
 <size>16856</size>
 <m32p>1210196830</m32p>
 <version>0.10.7</version>
 <license>LGPL</license>
 <source>gst-plugins-good</source>
 <package>GStreamer Good Plugins (Ubuntu)</package>
 <origin>https://launchpad.net/distros/ubuntu/+source/gst-plugins-good0.10</origin>
 <feature typename="GstElementFactory">
  <name>multifilesink</name>
  <longname>Multi-File Sink</longname>
  <class>Sink/File</class>
  <description>Write buffers to a sequentially named set of files</description>
  <author>David Schleef &lt;ds@schleef.org&gt;</author>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>ANY</caps>
  </padtemplate>
 </feature>
 <feature typename="GstElementFactory">
  <name>multifilesrc</name>
  <longname>Multi-File Source</longname>
  <class>Source/File</class>
  <description>Read a sequentially named set of files into buffers</description>
  <author>David Schleef &lt;ds@schleef.org&gt;</author>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>ANY</caps>
  </padtemplate>
 </feature>
</plugin>
<plugin>
 <name>video4linux2</name>
 <description>elements for Video 4 Linux</description>
 <filename>/usr/lib/gstreamer-0.10/libgstvideo4linux2.so</filename>
 <size>86720</size>
 <m32p>1210196831</m32p>
 <version>0.10.7</version>
 <license>LGPL</license>
 <source>gst-plugins-good</source>
 <package>GStreamer Good Plugins (Ubuntu)</package>
 <origin>https://launchpad.net/distros/ubuntu/+source/gst-plugins-good0.10</origin>
 <feature typename="GstElementFactory">
  <name>v4l2src</name>
  <longname>Video (video4linux2/raw) Source</longname>
  <class>Source/Video</class>
  <description>Reads raw frames from a video4linux2 (BT8x8) device</description>
  <author>Ronald Bultje &lt;rbultje@ronald.bitfreak.net&gt;, Edgard Lima &lt;edgard.lima@indt.org.br&gt;</author>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>video/x-raw-rgb, bpp=(int)8, depth=(int)8, red_mask=(int)224, green_mask=(int)28, blue_mask=(int)3, endianness=(int)1234, width=(int)[ 1, 32768 ], height=(int)[ 1, 32768 ], framerate=(fraction)[ 0/1, 100/1 ]; video/x-raw-rgb, bpp=(int)16, depth=(int)15, red_mask=(int)31744, green_mask=(int)992, blue_mask=(int)31, endianness=(int)1234, width=(int)[ 1, 32768 ], height=(int)[ 1, 32768 ], framerate=(fraction)[ 0/1, 100/1 ]; video/x-raw-rgb, bpp=(int)16, depth=(int)16, red_mask=(int)63488, green_mask=(int)2016, blue_mask=(int)31, endianness=(int)1234, width=(int)[ 1, 32768 ], height=(int)[ 1, 32768 ], framerate=(fraction)[ 0/1, 100/1 ]; video/x-raw-rgb, bpp=(int)16, depth=(int)15, red_mask=(int)31744, green_mask=(int)992, blue_mask=(int)31, endianness=(int)4321, width=(int)[ 1, 32768 ], height=(int)[ 1, 32768 ], framerate=(fraction)[ 0/1, 100/1 ]; video/x-raw-rgb, bpp=(int)16, depth=(int)16, red_mask=(int)63488, green_mask=(int)2016, blue_mask=(int)31, endianness=(int)4321, width=(int)[ 1, 32768 ], height=(int)[ 1, 32768 ], framerate=(fraction)[ 0/1, 100/1 ]; video/x-raw-rgb, bpp=(int)24, depth=(int)24, red_mask=(int)255, green_mask=(int)65280, blue_mask=(int)16711680, endianness=(int)4321, width=(int)[ 1, 32768 ], height=(int)[ 1, 32768 ], framerate=(fraction)[ 0/1, 100/1 ]; video/x-raw-rgb, bpp=(int)24, depth=(int)24, red_mask=(int)16711680, green_mask=(int)65280, blue_mask=(int)255, endianness=(int)4321, width=(int)[ 1, 32768 ], height=(int)[ 1, 32768 ], framerate=(fraction)[ 0/1, 100/1 ]; video/x-raw-rgb, bpp=(int)32, depth=(int)32, red_mask=(int)255, green_mask=(int)65280, blue_mask=(int)16711680, endianness=(int)4321, width=(int)[ 1, 32768 ], height=(int)[ 1, 32768 ], framerate=(fraction)[ 0/1, 100/1 ]; video/x-raw-rgb, bpp=(int)32, depth=(int)32, red_mask=(int)-16777216, green_mask=(int)16711680, blue_mask=(int)65280, endianness=(int)4321, width=(int)[ 1, 32768 ], height=(int)[ 1, 32768 ], framerate=(fraction)[ 0/1, 100/1 ]; video/x-raw-yuv, format=(fourcc)YVU9, width=(int)[ 1, 32768 ], height=(int)[ 1, 32768 ], framerate=(fraction)[ 0/1, 100/1 ]; video/x-raw-yuv, format=(fourcc)YV12, width=(int)[ 1, 32768 ], height=(int)[ 1, 32768 ], framerate=(fraction)[ 0/1, 100/1 ]; video/x-raw-yuv, format=(fourcc)YUY2, width=(int)[ 1, 32768 ], height=(int)[ 1, 32768 ], framerate=(fraction)[ 0/1, 100/1 ]; video/x-raw-yuv, format=(fourcc)UYVY, width=(int)[ 1, 32768 ], height=(int)[ 1, 32768 ], framerate=(fraction)[ 0/1, 100/1 ]; video/x-raw-yuv, format=(fourcc)Y42B, width=(int)[ 1, 32768 ], height=(int)[ 1, 32768 ], framerate=(fraction)[ 0/1, 100/1 ]; video/x-raw-yuv, format=(fourcc)Y41B, width=(int)[ 1, 32768 ], height=(int)[ 1, 32768 ], framerate=(fraction)[ 0/1, 100/1 ]; video/x-raw-yuv, format=(fourcc)Y41P, width=(int)[ 1, 32768 ], height=(int)[ 1, 32768 ], framerate=(fraction)[ 0/1, 100/1 ]; video/x-raw-yuv, format=(fourcc)YUV9, width=(int)[ 1, 32768 ], height=(int)[ 1, 32768 ], framerate=(fraction)[ 0/1, 100/1 ]; video/x-raw-yuv, format=(fourcc)I420, width=(int)[ 1, 32768 ], height=(int)[ 1, 32768 ], framerate=(fraction)[ 0/1, 100/1 ]; video/x-raw-bayer, width=(int)[ 1, 32768 ], height=(int)[ 1, 32768 ], framerate=(fraction)[ 0/1, 100/1 ]; image/jpeg, width=(int)[ 1, 32768 ], height=(int)[ 1, 32768 ], framerate=(fraction)[ 0/1, 100/1 ]; image/jpeg, width=(int)[ 1, 32768 ], height=(int)[ 1, 32768 ], framerate=(fraction)[ 0/1, 100/1 ]; video/x-dv, systemstream=(boolean)true, width=(int)[ 1, 32768 ], height=(int)[ 1, 32768 ], framerate=(fraction)[ 0/1, 100/1 ]</caps>
  </padtemplate>
  <interface>GstImplementsInterface</interface>
  <interface>GstColorBalance</interface>
  <interface>GstTuner</interface>
  <interface>GstVideoOrientation</interface>
  <interface>GstPropertyProbe</interface>
 </feature>
</plugin>
<plugin>
 <name>rtp</name>
 <description>Real-time protocol plugins</description>
 <filename>/usr/lib/gstreamer-0.10/libgstrtp.so</filename>
 <size>166304</size>
 <m32p>1210196830</m32p>
 <version>0.10.7</version>
 <license>LGPL</license>
 <source>gst-plugins-good</source>
 <package>GStreamer Good Plugins (Ubuntu)</package>
 <origin>https://launchpad.net/distros/ubuntu/+source/gst-plugins-good0.10</origin>
 <feature typename="GstElementFactory">
  <name>rtpvorbispay</name>
  <longname>RTP packet depayloader</longname>
  <class>Codec/Payloader/Network</class>
  <description>Payload-encode Vorbis audio into RTP packets (draft-01 RFC XXXX)</description>
  <author>Wim Taymans &lt;wim@fluendo.com&gt;</author>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>application/x-rtp, media=(string)audio, payload=(int)[ 96, 127 ], clock-rate=(int)[ 1, 2147483647 ], encoding-name=(string)VORBIS</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>audio/x-vorbis</caps>
  </padtemplate>
 </feature>
 <feature typename="GstElementFactory">
  <name>rtpvorbisdepay</name>
  <rank>64</rank>
  <longname>RTP packet depayloader</longname>
  <class>Codec/Depayloader/Network</class>
  <description>Extracts Vorbis Audio from RTP packets (draft-04 of RFC XXXX)</description>
  <author>Wim Taymans &lt;wim@fluendo.com&gt;</author>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>application/x-rtp, media=(string)audio, payload=(int)[ 96, 127 ], clock-rate=(int)[ 1, 2147483647 ], encoding-name=(string)VORBIS</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>audio/x-vorbis</caps>
  </padtemplate>
 </feature>
 <feature typename="GstElementFactory">
  <name>rtptheorapay</name>
  <longname>RTP packet depayloader</longname>
  <class>Codec/Payloader/Network</class>
  <description>Payload-encode Theora video into RTP packets (draft-01 RFC XXXX)</description>
  <author>Wim Taymans &lt;wim@fluendo.com&gt;</author>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>application/x-rtp, media=(string)video, payload=(int)[ 96, 127 ], clock-rate=(int)90000, encoding-name=(string)THEORA</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>video/x-theora</caps>
  </padtemplate>
 </feature>
 <feature typename="GstElementFactory">
  <name>rtptheoradepay</name>
  <rank>64</rank>
  <longname>RTP packet depayloader</longname>
  <class>Codec/Depayloader/Network</class>
  <description>Extracts Theora video from RTP packets (draft-01 of RFC XXXX)</description>
  <author>Wim Taymans &lt;wim@fluendo.com&gt;</author>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>application/x-rtp, media=(string)video, payload=(int)[ 96, 127 ], clock-rate=(int)90000, encoding-name=(string)THEORA</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>video/x-theora</caps>
  </padtemplate>
 </feature>
 <feature typename="GstElementFactory">
  <name>rtpsv3vdepay</name>
  <longname>RTP packet depayloader</longname>
  <class>Codec/Depayloader/Network</class>
  <description>Extracts SVQ3 video from RTP packets (no RFC)</description>
  <author>Wim Taymans &lt;wim@fluendo.com&gt;</author>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>video/x-svq, svqversion=(int)3</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>application/x-rtp, media=(string)video, payload=(int)[ 96, 127 ], clock-rate=(int)90000, encoding-name=(string){ X-SV3V-ES, X-SORENSON-VIDEO }</caps>
  </padtemplate>
 </feature>
 <feature typename="GstElementFactory">
  <name>rtpspeexdepay</name>
  <rank>64</rank>
  <longname>RTP packet depayloader</longname>
  <class>Codec/Depayloader/Network</class>
  <description>Extracts Speex audio from RTP packets</description>
  <author>Edgard Lima &lt;edgard.lima@indt.org.br&gt;</author>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>audio/x-speex</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>application/x-rtp, media=(string)audio, payload=(int)[ 96, 127 ], clock-rate=(int)[ 6000, 48000 ], encoding-name=(string)SPEEX, encoding-params=(string)1</caps>
  </padtemplate>
 </feature>
 <feature typename="GstElementFactory">
  <name>rtpspeexpay</name>
  <longname>RTP packet payloader</longname>
  <class>Codec/Payloader/Network</class>
  <description>Payload-encodes Speex audio into a RTP packet</description>
  <author>Edgard Lima &lt;edgard.lima@indt.org.br&gt;</author>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>audio/x-speex</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>application/x-rtp, media=(string)audio, payload=(int)[ 96, 127 ], clock-rate=(int)[ 6000, 48000 ], encoding-name=(string)SPEEX, encoding-params=(string)1</caps>
  </padtemplate>
 </feature>
 <feature typename="GstElementFactory">
  <name>rtpmp4gpay</name>
  <longname>RTP packet payloader</longname>
  <class>Codec/Payloader/Network</class>
  <description>Payload MPEG4 elementary streams as RTP packets (RFC 3640)</description>
  <author>Wim Taymans &lt;wim@fluendo.com&gt;</author>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>application/x-rtp, media=(string){ video, audio, application }, payload=(int)[ 96, 127 ], clock-rate=(int)[ 1, 2147483647 ], encoding-name=(string)MPEG4-GENERIC, streamtype=(string){ 4, 5 }, mode=(string){ generic, CELP-cbr, CELP-vbr, AAC-lbr, AAC-hbr }</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>video/mpeg, mpegversion=(int)4, systemstream=(boolean)false; audio/mpeg, mpegversion=(int)4</caps>
  </padtemplate>
 </feature>
 <feature typename="GstElementFactory">
  <name>rtpmp4gdepay</name>
  <rank>64</rank>
  <longname>RTP packet depayloader</longname>
  <class>Codec/Depayloader/Network</class>
  <description>Extracts MPEG4 elementary streams from RTP packets (RFC 3640)</description>
  <author>Wim Taymans &lt;wim@fluendo.com&gt;</author>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>video/mpeg, mpegversion=(int)4, systemstream=(boolean)false; audio/mpeg, mpegversion=(int)4</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>application/x-rtp, media=(string){ video, audio, application }, payload=(int)[ 96, 127 ], clock-rate=(int)[ 1, 2147483647 ], encoding-name=(string)MPEG4-GENERIC, streamtype=(string){ 4, 5 }, mode=(string){ generic, CELP-cbr, CELP-vbr, AAC-lbr, AAC-hbr }</caps>
  </padtemplate>
 </feature>
 <feature typename="GstElementFactory">
  <name>rtpmp4adepay</name>
  <rank>64</rank>
  <longname>RTP packet parser</longname>
  <class>Codec/Depayloader/Network</class>
  <description>Extracts MPEG4 audio from RTP packets (RFC 3016)</description>
  <author>Nokia Corporation (contact &lt;stefan.kost@nokia.com&gt;), Wim Taymans &lt;wim@fluendo.com&gt;</author>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>audio/mpeg, mpegversion=(int)4, framed=(boolean)false</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>application/x-rtp, media=(string)audio, payload=(int)[ 96, 127 ], clock-rate=(int)[ 1, 2147483647 ], encoding-name=(string)MP4A-LATM</caps>
  </padtemplate>
 </feature>
 <feature typename="GstElementFactory">
  <name>rtpmp4vdepay</name>
  <rank>64</rank>
  <longname>RTP packet depayloader</longname>
  <class>Codec/Depayloader/Network</class>
  <description>Extracts MPEG4 video from RTP packets (RFC 3016)</description>
  <author>Wim Taymans &lt;wim@fluendo.com&gt;</author>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>video/mpeg, mpegversion=(int)4, systemstream=(boolean)false</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>application/x-rtp, media=(string)video, payload=(int)[ 96, 127 ], clock-rate=(int)[ 1, 2147483647 ], encoding-name=(string)MP4V-ES</caps>
  </padtemplate>
 </feature>
 <feature typename="GstElementFactory">
  <name>rtpmp4vpay</name>
  <longname>RTP MPEG-4 Video packet payloader</longname>
  <class>Codec/Payloader/Network</class>
  <description>Payload MPEG-4 video as RTP packets (RFC 3016)</description>
  <author>Wim Taymans &lt;wim@fluendo.com&gt;</author>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>application/x-rtp, media=(string)video, payload=(int)[ 96, 127 ], clock-rate=(int)[ 1, 2147483647 ], encoding-name=(string)MP4V-ES</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>video/mpeg, mpegversion=(int)4, systemstream=(boolean)false</caps>
  </padtemplate>
 </feature>
 <feature typename="GstElementFactory">
  <name>rtpmp2tpay</name>
  <longname>RTP MP2T audio payloader</longname>
  <class>Codec/Payloader/Network</class>
  <description>Payload-encodes MPEG2 TS into RTP packets (RFC 2250)</description>
  <author>Wim Taymans &lt;wim@fluendo.com&gt;</author>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>video/mpegts, packetsize=(int)188, systemstream=(boolean)true</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>application/x-rtp, media=(string)video, payload=(int)[ 96, 127 ], clock-rate=(int)90000, encoding-name=(string)MP2T-ES</caps>
  </padtemplate>
 </feature>
 <feature typename="GstElementFactory">
  <name>rtpmp2tdepay</name>
  <rank>64</rank>
  <longname>RTP packet depayloader</longname>
  <class>Codec/Depayloader/Network</class>
  <description>Extracts MPEG2 TS from RTP packets (RFC 2250)</description>
  <author>Wim Taymans &lt;wim@fluendo.com&gt;
Thijs Vermeir &lt;thijs.vermeir@barco.com&gt;</author>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>video/mpegts, packetsize=(int)188, systemstream=(boolean)true</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>application/x-rtp, media=(string)video, payload=(int)[ 96, 127 ], clock-rate=(int)[ 1, 2147483647 ], encoding-name=(string)MP2T-ES; application/x-rtp, media=(string)video, payload=(int)33, clock-rate=(int)[ 1, 2147483647 ]</caps>
  </padtemplate>
 </feature>
 <feature typename="GstElementFactory">
  <name>asteriskh263</name>
  <rank>64</rank>
  <longname>RTP packet parser</longname>
  <class>Codec/Depayloader/Network</class>
  <description>Extracts H263 video from RTP and encodes in Asterisk H263 format</description>
  <author>Neil Stratford &lt;neils@vipadia.com&gt;</author>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>application/x-asteriskh263</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>application/x-rtp, media=(string)video, payload=(int)[ 96, 127 ], clock-rate=(int)90000, encoding-name=(string)H263-1998</caps>
  </padtemplate>
 </feature>
 <feature typename="GstElementFactory">
  <name>rtpL16depay</name>
  <rank>64</rank>
  <longname>RTP packet depayloader</longname>
  <class>Codec/Depayloader/Network</class>
  <description>Extracts raw audio from RTP packets</description>
  <author>Zeeshan Ali &lt;zak147@yahoo.com&gt;,Wim Taymans &lt;wim@fluendo.com&gt;</author>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>audio/x-raw-int, endianness=(int)4321, signed=(boolean)true, width=(int)16, depth=(int)16, rate=(int)[ 1, 2147483647 ], channels=(int)[ 1, 2147483647 ]</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>application/x-rtp, media=(string)audio, payload=(int)[ 96, 127 ], clock-rate=(int)[ 1, 2147483647 ], encoding-name=(string)L16; application/x-rtp, media=(string)audio, payload=(int){ 10, 11 }, clock-rate=(int)[ 1, 2147483647 ]</caps>
  </padtemplate>
 </feature>
 <feature typename="GstElementFactory">
  <name>rtpL16pay</name>
  <longname>RTP packet payloader</longname>
  <class>Codec/Payloader/Network</class>
  <description>Payload-encode Raw audio into RTP packets (RFC 3551)</description>
  <author>Wim Taymans &lt;wim@fluendo.com&gt;</author>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>application/x-rtp, media=(string)audio, payload=(int)[ 96, 127 ], clock-rate=(int)[ 1, 2147483647 ], encoding-name=(string)L16, channels=(int)[ 1, 2147483647 ], rate=(int)[ 1, 2147483647 ]; application/x-rtp, media=(string)audio, payload=(int){ 10, 11 }, clock-rate=(int)44100</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>audio/x-raw-int, endianness=(int)4321, signed=(boolean)true, width=(int)16, depth=(int)16, rate=(int)[ 1, 2147483647 ], channels=(int)[ 1, 2147483647 ]</caps>
  </padtemplate>
 </feature>
 <feature typename="GstElementFactory">
  <name>rtph264pay</name>
  <longname>RTP packet payloader</longname>
  <class>Codec/Payloader/Network</class>
  <description>Payload-encode H264 video into RTP packets (RFC 3984)</description>
  <author>Laurent Glayal &lt;spglegle@yahoo.fr&gt;</author>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>application/x-rtp, media=(string)video, payload=(int)[ 96, 127 ], clock-rate=(int)90000, encoding-name=(string)H264</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>video/x-h264</caps>
  </padtemplate>
 </feature>
 <feature typename="GstElementFactory">
  <name>rtph264depay</name>
  <rank>64</rank>
  <longname>RTP packet depayloader</longname>
  <class>Codec/Depayloader/Network</class>
  <description>Extracts H264 video from RTP packets (RFC 3984)</description>
  <author>Wim Taymans &lt;wim@fluendo.com&gt;</author>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>video/x-h264</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>application/x-rtp, media=(string)video, payload=(int)[ 96, 127 ], clock-rate=(int)90000, encoding-name=(string)H264</caps>
  </padtemplate>
 </feature>
 <feature typename="GstElementFactory">
  <name>rtph263pay</name>
  <longname>RTP packet payloader</longname>
  <class>Codec/Payloader/Network</class>
  <description>Payload-encodes H263 video in RTP packets (RFC 2190)</description>
  <author>Neil Stratford &lt;neils@vipadia.com&gt;</author>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>application/x-rtp, media=(string)video, payload=(int)34, clock-rate=(int)90000, encoding-name=(string)H263; application/x-rtp, media=(string)video, payload=(int)[ 96, 127 ], clock-rate=(int)90000, encoding-name=(string)H263</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>video/x-h263, variant=(string)itu, h263version=(string)h263</caps>
  </padtemplate>
 </feature>
 <feature typename="GstElementFactory">
  <name>rtph263depay</name>
  <rank>64</rank>
  <longname>RTP H263 packet depayloader</longname>
  <class>Codec/Depayloader/Network</class>
  <description>Extracts H263 video from RTP packets (RFC 2190)</description>
  <author>Philippe Kalaf &lt;philippe.kalaf@collabora.co.uk&gt;, Edward Hervey &lt;bilboed@bilboed.com&gt;</author>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>video/x-h263, variant=(string)itu, h263version=(string)h263</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>application/x-rtp, media=(string)video, payload=(int)34, clock-rate=(int)90000, encoding-name=(string)H263; application/x-rtp, media=(string)video, payload=(int)[ 96, 127 ], clock-rate=(int)90000, encoding-name=(string)H263</caps>
  </padtemplate>
 </feature>
 <feature typename="GstElementFactory">
  <name>rtph263pdepay</name>
  <rank>64</rank>
  <longname>RTP packet depayloader</longname>
  <class>Codec/Depayloader/Network</class>
  <description>Extracts H263/+/++ video from RTP packets (RFC 4629)</description>
  <author>Wim Taymans &lt;wim@fluendo.com&gt;</author>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>video/x-h263, variant=(string)itu</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>application/x-rtp, media=(string)video, payload=(int)[ 96, 127 ], clock-rate=(int)90000, encoding-name=(string)H263-1998; application/x-rtp, media=(string)video, payload=(int)[ 96, 127 ], clock-rate=(int)90000, encoding-name=(string)H263-2000</caps>
  </padtemplate>
 </feature>
 <feature typename="GstElementFactory">
  <name>rtph263ppay</name>
  <longname>RTP packet payloader</longname>
  <class>Codec/Payloader/Network</class>
  <description>Payload-encodes H263/+/++ video in RTP packets (RFC 4629)</description>
  <author>Wim Taymans &lt;wim@fluendo.com&gt;</author>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>application/x-rtp, media=(string)video, payload=(int)[ 96, 127 ], clock-rate=(int)90000, encoding-name=(string)H263-1998; application/x-rtp, media=(string)video, payload=(int)[ 96, 127 ], clock-rate=(int)90000, encoding-name=(string)H263-2000</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>video/x-h263, variant=(string)itu</caps>
  </padtemplate>
 </feature>
 <feature typename="GstElementFactory">
  <name>rtpmpvpay</name>
  <longname>RTP MPEG2 ES video payloader</longname>
  <class>Codec/Payloader/Network</class>
  <description>Payload-encodes MPEG2 ES into RTP packets (RFC 2250)</description>
  <author>Thijs Vermeir &lt;thijsvermeir@gmail.com&gt;</author>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>video/mpeg, mpegversion=(int)2, systemstream=(boolean)false</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>application/x-rtp, media=(string)video, payload=(int)32, clock-rate=(int)90000, encoding-name=(string)MPV</caps>
  </padtemplate>
 </feature>
 <feature typename="GstElementFactory">
  <name>rtpmpvdepay</name>
  <rank>64</rank>
  <longname>RTP packet depayloader</longname>
  <class>Codec/Depayloader/Network</class>
  <description>Extracts MPEG video from RTP packets (RFC 2250)</description>
  <author>Wim Taymans &lt;wim@fluendo.com&gt;</author>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>video/mpeg, mpegversion=(int)2, systemstream=(boolean)false</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>application/x-rtp, media=(string)video, payload=(int)[ 96, 127 ], clock-rate=(int)90000, encoding-name=(string)MPV; application/x-rtp, media=(string)video, payload=(int)32, clock-rate=(int)90000</caps>
  </padtemplate>
 </feature>
 <feature typename="GstElementFactory">
  <name>rtpmpapay</name>
  <longname>RTP packet payloader</longname>
  <class>Codec/Payloader/Network</class>
  <description>Payload MPEG audio as RTP packets (RFC 2038)</description>
  <author>Wim Taymans &lt;wim@fluendo.com&gt;</author>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>application/x-rtp, media=(string)audio, payload=(int)14, clock-rate=(int)90000; application/x-rtp, media=(string)audio, payload=(int)[ 96, 127 ], clock-rate=(int)90000, encoding-name=(string)MPA</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>audio/mpeg</caps>
  </padtemplate>
 </feature>
 <feature typename="GstElementFactory">
  <name>rtpmpadepay</name>
  <rank>64</rank>
  <longname>RTP packet depayloader</longname>
  <class>Codec/Depayloader/Network</class>
  <description>Extracts MPEG audio from RTP packets (RFC 2038)</description>
  <author>Wim Taymans &lt;wim@fluendo.com&gt;</author>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>audio/mpeg</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>application/x-rtp, media=(string)audio, payload=(int)[ 96, 127 ], clock-rate=(int)90000, encoding-name=(string)MPA; application/x-rtp, media=(string)audio, payload=(int)14, clock-rate=(int)90000</caps>
  </padtemplate>
 </feature>
 <feature typename="GstElementFactory">
  <name>rtppcmapay</name>
  <longname>RTP packet payloader</longname>
  <class>Codec/Payloader/Network</class>
  <description>Payload-encodes PCMA audio into a RTP packet</description>
  <author>Edgard Lima &lt;edgard.lima@indt.org.br&gt;</author>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>audio/x-alaw, channels=(int)1, rate=(int)8000</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>application/x-rtp, media=(string)audio, payload=(int)8, clock-rate=(int)8000, encoding-name=(string)PCMA; application/x-rtp, media=(string)audio, payload=(int)[ 96, 127 ], clock-rate=(int)8000, encoding-name=(string)PCMA</caps>
  </padtemplate>
 </feature>
 <feature typename="GstElementFactory">
  <name>rtppcmupay</name>
  <longname>RTP packet payloader</longname>
  <class>Codec/Payloader/Network</class>
  <description>Payload-encodes PCMU audio into a RTP packet</description>
  <author>Edgard Lima &lt;edgard.lima@indt.org.br&gt;</author>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>audio/x-mulaw, channels=(int)1, rate=(int)8000</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>application/x-rtp, media=(string)audio, payload=(int)0, clock-rate=(int)8000, encoding-name=(string)PCMU; application/x-rtp, media=(string)audio, payload=(int)[ 96, 127 ], clock-rate=(int)8000, encoding-name=(string)PCMU</caps>
  </padtemplate>
 </feature>
 <feature typename="GstElementFactory">
  <name>rtppcmudepay</name>
  <rank>64</rank>
  <longname>RTP packet depayloader</longname>
  <class>Codec/Depayloader/Network</class>
  <description>Extracts PCMU audio from RTP packets</description>
  <author>Edgard Lima &lt;edgard.lima@indt.org.br&gt;, Zeeshan Ali &lt;zeenix@gmail.com&gt;</author>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>audio/x-mulaw, channels=(int)1, rate=(int)8000</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>application/x-rtp, media=(string)audio, payload=(int)[ 96, 127 ], clock-rate=(int)8000, encoding-name=(string)PCMU; application/x-rtp, media=(string)audio, payload=(int)0, clock-rate=(int)8000</caps>
  </padtemplate>
 </feature>
 <feature typename="GstElementFactory">
  <name>rtppcmadepay</name>
  <rank>64</rank>
  <longname>RTP packet depayloader</longname>
  <class>Codec/Depayloader/Network</class>
  <description>Extracts PCMA audio from RTP packets</description>
  <author>Edgard Lima &lt;edgard.lima@indt.org.br&gt;, Zeeshan Ali &lt;zeenix@gmail.com&gt;</author>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>audio/x-alaw, channels=(int)1, rate=(int)8000</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>application/x-rtp, media=(string)audio, payload=(int)[ 96, 127 ], clock-rate=(int)8000, encoding-name=(string)PCMA; application/x-rtp, media=(string)audio, payload=(int)8, clock-rate=(int)8000</caps>
  </padtemplate>
 </feature>
 <feature typename="GstElementFactory">
  <name>rtpamrpay</name>
  <longname>RTP packet payloader</longname>
  <class>Codec/Payloader/Network</class>
  <description>Payload-encode AMR or AMR-WB audio into RTP packets (RFC 3267)</description>
  <author>Wim Taymans &lt;wim@fluendo.com&gt;</author>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>application/x-rtp, media=(string)audio, payload=(int)[ 96, 127 ], clock-rate=(int)8000, encoding-name=(string)AMR, encoding-params=(string)1, octet-align=(string)1, crc=(string)0, robust-sorting=(string)0, interleaving=(string)0, mode-set=(int)[ 0, 7 ], mode-change-period=(int)[ 1, 2147483647 ], mode-change-neighbor=(string){ 0, 1 }, maxptime=(int)[ 20, 2147483647 ], ptime=(int)[ 20, 2147483647 ]; application/x-rtp, media=(string)audio, payload=(int)[ 96, 127 ], clock-rate=(int)16000, encoding-name=(string)AMR-WB, encoding-params=(string)1, octet-align=(string)1, crc=(string)0, robust-sorting=(string)0, interleaving=(string)0, mode-set=(int)[ 0, 7 ], mode-change-period=(int)[ 1, 2147483647 ], mode-change-neighbor=(string){ 0, 1 }, maxptime=(int)[ 20, 2147483647 ], ptime=(int)[ 20, 2147483647 ]</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>audio/AMR, channels=(int)1, rate=(int)8000; audio/AMR-WB, channels=(int)1, rate=(int)16000</caps>
  </padtemplate>
 </feature>
 <feature typename="GstElementFactory">
  <name>rtpamrdepay</name>
  <rank>64</rank>
  <longname>RTP packet depayloader</longname>
  <class>Codec/Depayloader/Network</class>
  <description>Extracts AMR or AMR-WB audio from RTP packets (RFC 3267)</description>
  <author>Wim Taymans &lt;wim@fluendo.com&gt;</author>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>audio/AMR, channels=(int)1, rate=(int)8000; audio/AMR-WB, channels=(int)1, rate=(int)16000</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>application/x-rtp, media=(string)audio, payload=(int)[ 96, 127 ], clock-rate=(int)8000, encoding-name=(string)AMR, encoding-params=(string)1, octet-align=(string)1, crc=(string){ 0, 1 }, robust-sorting=(string)0, interleaving=(string)0; application/x-rtp, media=(string)audio, payload=(int)[ 96, 127 ], clock-rate=(int)16000, encoding-name=(string)AMR-WB, encoding-params=(string)1, octet-align=(string)1, crc=(string){ 0, 1 }, robust-sorting=(string)0, interleaving=(string)0</caps>
  </padtemplate>
 </feature>
 <feature typename="GstElementFactory">
  <name>rtpgsmpay</name>
  <longname>RTP GSM audio payloader</longname>
  <class>Codec/Payloader/Network</class>
  <description>Payload-encodes GSM audio into a RTP packet</description>
  <author>Zeeshan Ali &lt;zeenix@gmail.com&gt;</author>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>audio/x-gsm, rate=(int)8000, channels=(int)1</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>application/x-rtp, media=(string)audio, payload=(int)3, clock-rate=(int)8000, encoding-name=(string)GSM; application/x-rtp, media=(string)audio, payload=(int)[ 96, 127 ], clock-rate=(int)8000, encoding-name=(string)GSM</caps>
  </padtemplate>
 </feature>
 <feature typename="GstElementFactory">
  <name>rtpgsmdepay</name>
  <rank>64</rank>
  <longname>RTP packet depayloader</longname>
  <class>Codec/Depayloader/Network</class>
  <description>Extracts GSM audio from RTP packets</description>
  <author>Zeeshan Ali &lt;zeenix@gmail.com&gt;</author>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>audio/x-gsm, rate=(int)8000, channels=(int)1</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>application/x-rtp, media=(string)audio, payload=(int)[ 96, 127 ], clock-rate=(int)8000, encoding-name=(string)GSM; application/x-rtp, media=(string)audio, payload=(int)3, clock-rate=(int)8000</caps>
  </padtemplate>
 </feature>
 <feature typename="GstElementFactory">
  <name>rtpilbcdepay</name>
  <rank>64</rank>
  <longname>RTP iLBC packet depayloader</longname>
  <class>Codec/Depayloader/Network</class>
  <description>Extracts iLBC audio from RTP packets</description>
  <author>Philippe Kalaf &lt;philippe.kalaf@collabora.co.uk&gt;</author>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>audio/x-iLBC, mode=(int){ 20, 30 }</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>application/x-rtp, media=(string)audio, payload=(int)[ 96, 127 ], clock-rate=(int)8000, encoding-name=(string)ILBC, mode=(string){ 20, 30 }</caps>
  </padtemplate>
 </feature>
 <feature typename="GstElementFactory">
  <name>rtpilbcpay</name>
  <longname>RTP Payloader for iLBC Audio</longname>
  <class>Codec/Payloader/Network</class>
  <description>Packetize iLBC audio streams into RTP packets</description>
  <author>Philippe Kalaf &lt;philippe.kalaf@collabora.co.uk&gt;</author>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>audio/x-iLBC, mode=(int){ 20, 30 }</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>application/x-rtp, media=(string)audio, payload=(int)[ 96, 127 ], clock-rate=(int)8000, encoding-name=(string)ILBC, mode=(string){ 20, 30 }</caps>
  </padtemplate>
 </feature>
 <feature typename="GstElementFactory">
  <name>rtpac3depay</name>
  <rank>64</rank>
  <longname>RTP packet depayloader</longname>
  <class>Codec/Depayloader/Network</class>
  <description>Extracts AC3 audio from RTP packets (RFC 4184)</description>
  <author>Wim Taymans &lt;wim@fluendo.com&gt;</author>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>audio/ac3</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>application/x-rtp, media=(string)audio, payload=(int)[ 96, 127 ], clock-rate=(int){ 32000, 44100, 48000 }, encoding-name=(string)AC3</caps>
  </padtemplate>
 </feature>
 <feature typename="GstElementFactory">
  <name>rtpdepay</name>
  <longname>RTP depayloader</longname>
  <class>Codec/Depayloader/Network</class>
  <description>Accepts raw RTP and RTCP packets and sends them forward</description>
  <author>Wim Taymans &lt;wim@fluendo.com&gt;</author>
  <padtemplate>
   <nametemplate>srcrtp</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>application/x-rtp</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>srcrtcp</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>application/x-rtcp</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>sinkrtp</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>application/x-rtp</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>sinkrtcp</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>application/x-rtcp</caps>
  </padtemplate>
 </feature>
</plugin>
<plugin>
 <name>gamma</name>
 <description>Changes gamma on video images</description>
 <filename>/usr/lib/gstreamer-0.10/libgstgamma.so</filename>
 <size>11776</size>
 <m32p>1210196830</m32p>
 <version>0.10.7</version>
 <license>LGPL</license>
 <source>gst-plugins-good</source>
 <package>GStreamer Good Plugins (Ubuntu)</package>
 <origin>https://launchpad.net/distros/ubuntu/+source/gst-plugins-good0.10</origin>
 <feature typename="GstElementFactory">
  <name>gamma</name>
  <longname>Video gamma correction</longname>
  <class>Filter/Effect/Video</class>
  <description>Adjusts gamma on a video stream</description>
  <author>Arwed v. Merkatz &lt;v.merkatz@gmx.net</author>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>video/x-raw-yuv, format=(fourcc){ IYUV, I420, YV12 }, width=(int)[ 1, 2147483647 ], height=(int)[ 1, 2147483647 ], framerate=(fraction)[ 0/1, 2147483647/1 ]</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>video/x-raw-yuv, format=(fourcc){ IYUV, I420, YV12 }, width=(int)[ 1, 2147483647 ], height=(int)[ 1, 2147483647 ], framerate=(fraction)[ 0/1, 2147483647/1 ]</caps>
  </padtemplate>
 </feature>
</plugin>
<plugin>
 <name>1394</name>
 <description>Source for DV data via IEEE1394 interface</description>
 <filename>/usr/lib/gstreamer-0.10/libgst1394.so</filename>
 <size>32672</size>
 <m32p>1210196830</m32p>
 <version>0.10.7</version>
 <license>LGPL</license>
 <source>gst-plugins-good</source>
 <package>GStreamer Good Plugins (Ubuntu)</package>
 <origin>https://launchpad.net/distros/ubuntu/+source/gst-plugins-good0.10</origin>
 <feature typename="GstElementFactory">
  <name>dv1394src</name>
  <longname>Firewire (1394) DV video source</longname>
  <class>Source/Video</class>
  <description>Source for DV video data from firewire port</description>
  <author>Erik Walthinsen &lt;omega@temple-baptist.com&gt;
Daniel Fischer &lt;dan@f3c.com&gt;
Wim Taymans &lt;wim@fluendo.com&gt;
Zaheer Abbas Merali &lt;zaheerabbas at merali dot org&gt;</author>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>video/x-dv, format=(string){ NTSC, PAL }, systemstream=(boolean)true</caps>
  </padtemplate>
  <interface>GstURIHandler</interface>
  <interface>GstPropertyProbe</interface>
  <uri_type>source</uri_type>
  <uri_protocol>dv</uri_protocol>
 </feature>
</plugin>
<plugin>
 <name>videocrop</name>
 <description>Crops video into a user-defined region</description>
 <filename>/usr/lib/gstreamer-0.10/libgstvideocrop.so</filename>
 <size>23968</size>
 <m32p>1210196831</m32p>
 <version>0.10.7</version>
 <license>LGPL</license>
 <source>gst-plugins-good</source>
 <package>GStreamer Good Plugins (Ubuntu)</package>
 <origin>https://launchpad.net/distros/ubuntu/+source/gst-plugins-good0.10</origin>
 <feature typename="GstElementFactory">
  <name>videocrop</name>
  <longname>Crop</longname>
  <class>Filter/Effect/Video</class>
  <description>Crops video into a user-defined region</description>
  <author>Tim-Philipp Müller &lt;tim centricular net&gt;</author>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>video/x-raw-rgb, bpp=(int)32, depth=(int)24, endianness=(int)4321, red_mask=(int)-16777216, green_mask=(int)16711680, blue_mask=(int)65280, width=(int)[ 1, 2147483647 ], height=(int)[ 1, 2147483647 ], framerate=(fraction)[ 0/1, 2147483647/1 ]; video/x-raw-rgb, bpp=(int)32, depth=(int)24, endianness=(int)4321, red_mask=(int)16711680, green_mask=(int)65280, blue_mask=(int)255, width=(int)[ 1, 2147483647 ], height=(int)[ 1, 2147483647 ], framerate=(fraction)[ 0/1, 2147483647/1 ]; video/x-raw-rgb, bpp=(int)32, depth=(int)24, endianness=(int)4321, red_mask=(int)65280, green_mask=(int)16711680, blue_mask=(int)-16777216, width=(int)[ 1, 2147483647 ], height=(int)[ 1, 2147483647 ], framerate=(fraction)[ 0/1, 2147483647/1 ]; video/x-raw-rgb, bpp=(int)32, depth=(int)24, endianness=(int)4321, red_mask=(int)255, green_mask=(int)65280, blue_mask=(int)16711680, width=(int)[ 1, 2147483647 ], height=(int)[ 1, 2147483647 ], framerate=(fraction)[ 0/1, 2147483647/1 ]; video/x-raw-rgb, bpp=(int)32, depth=(int)32, endianness=(int)4321, red_mask=(int)-16777216, green_mask=(int)16711680, blue_mask=(int)65280, alpha_mask=(int)255, width=(int)[ 1, 2147483647 ], height=(int)[ 1, 2147483647 ], framerate=(fraction)[ 0/1, 2147483647/1 ]; video/x-raw-rgb, bpp=(int)32, depth=(int)32, endianness=(int)4321, red_mask=(int)16711680, green_mask=(int)65280, blue_mask=(int)255, alpha_mask=(int)-16777216, width=(int)[ 1, 2147483647 ], height=(int)[ 1, 2147483647 ], framerate=(fraction)[ 0/1, 2147483647/1 ]; video/x-raw-rgb, bpp=(int)32, depth=(int)32, endianness=(int)4321, red_mask=(int)65280, green_mask=(int)16711680, blue_mask=(int)-16777216, alpha_mask=(int)255, width=(int)[ 1, 2147483647 ], height=(int)[ 1, 2147483647 ], framerate=(fraction)[ 0/1, 2147483647/1 ]; video/x-raw-rgb, bpp=(int)32, depth=(int)32, endianness=(int)4321, red_mask=(int)255, green_mask=(int)65280, blue_mask=(int)16711680, alpha_mask=(int)-16777216, width=(int)[ 1, 2147483647 ], height=(int)[ 1, 2147483647 ], framerate=(fraction)[ 0/1, 2147483647/1 ]; video/x-raw-rgb, bpp=(int)24, depth=(int)24, endianness=(int)4321, red_mask=(int)16711680, green_mask=(int)65280, blue_mask=(int)255, width=(int)[ 1, 2147483647 ], height=(int)[ 1, 2147483647 ], framerate=(fraction)[ 0/1, 2147483647/1 ]; video/x-raw-rgb, bpp=(int)24, depth=(int)24, endianness=(int)4321, red_mask=(int)255, green_mask=(int)65280, blue_mask=(int)16711680, width=(int)[ 1, 2147483647 ], height=(int)[ 1, 2147483647 ], framerate=(fraction)[ 0/1, 2147483647/1 ]; video/x-raw-yuv, format=(fourcc)AYUV, width=(int)[ 1, 2147483647 ], height=(int)[ 1, 2147483647 ], framerate=(fraction)[ 0/1, 2147483647/1 ]; video/x-raw-yuv, format=(fourcc)YUY2, width=(int)[ 1, 2147483647 ], height=(int)[ 1, 2147483647 ], framerate=(fraction)[ 0/1, 2147483647/1 ]; video/x-raw-yuv, format=(fourcc)YVYU, width=(int)[ 1, 2147483647 ], height=(int)[ 1, 2147483647 ], framerate=(fraction)[ 0/1, 2147483647/1 ]; video/x-raw-yuv, format=(fourcc)UYVY, width=(int)[ 1, 2147483647 ], height=(int)[ 1, 2147483647 ], framerate=(fraction)[ 0/1, 2147483647/1 ]; video/x-raw-yuv, format=(fourcc)Y800, width=(int)[ 1, 2147483647 ], height=(int)[ 1, 2147483647 ], framerate=(fraction)[ 0/1, 2147483647/1 ]; video/x-raw-yuv, format=(fourcc)I420, width=(int)[ 1, 2147483647 ], height=(int)[ 1, 2147483647 ], framerate=(fraction)[ 0/1, 2147483647/1 ]; video/x-raw-yuv, format=(fourcc)YV12, width=(int)[ 1, 2147483647 ], height=(int)[ 1, 2147483647 ], framerate=(fraction)[ 0/1, 2147483647/1 ]; video/x-raw-rgb, bpp=(int)16, depth=(int)16, endianness=(int)1234, red_mask=(int)63488, green_mask=(int)2016, blue_mask=(int)31, width=(int)[ 1, 2147483647 ], height=(int)[ 1, 2147483647 ], framerate=(fraction)[ 0/1, 2147483647/1 ]; video/x-raw-rgb, bpp=(int)16, depth=(int)15, endianness=(int)1234, red_mask=(int)31744, green_mask=(int)992, blue_mask=(int)31, width=(int)[ 1, 2147483647 ], height=(int)[ 1, 2147483647 ], framerate=(fraction)[ 0/1, 2147483647/1 ]</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>video/x-raw-rgb, bpp=(int)32, depth=(int)24, endianness=(int)4321, red_mask=(int)-16777216, green_mask=(int)16711680, blue_mask=(int)65280, width=(int)[ 1, 2147483647 ], height=(int)[ 1, 2147483647 ], framerate=(fraction)[ 0/1, 2147483647/1 ]; video/x-raw-rgb, bpp=(int)32, depth=(int)24, endianness=(int)4321, red_mask=(int)16711680, green_mask=(int)65280, blue_mask=(int)255, width=(int)[ 1, 2147483647 ], height=(int)[ 1, 2147483647 ], framerate=(fraction)[ 0/1, 2147483647/1 ]; video/x-raw-rgb, bpp=(int)32, depth=(int)24, endianness=(int)4321, red_mask=(int)65280, green_mask=(int)16711680, blue_mask=(int)-16777216, width=(int)[ 1, 2147483647 ], height=(int)[ 1, 2147483647 ], framerate=(fraction)[ 0/1, 2147483647/1 ]; video/x-raw-rgb, bpp=(int)32, depth=(int)24, endianness=(int)4321, red_mask=(int)255, green_mask=(int)65280, blue_mask=(int)16711680, width=(int)[ 1, 2147483647 ], height=(int)[ 1, 2147483647 ], framerate=(fraction)[ 0/1, 2147483647/1 ]; video/x-raw-rgb, bpp=(int)32, depth=(int)32, endianness=(int)4321, red_mask=(int)-16777216, green_mask=(int)16711680, blue_mask=(int)65280, alpha_mask=(int)255, width=(int)[ 1, 2147483647 ], height=(int)[ 1, 2147483647 ], framerate=(fraction)[ 0/1, 2147483647/1 ]; video/x-raw-rgb, bpp=(int)32, depth=(int)32, endianness=(int)4321, red_mask=(int)16711680, green_mask=(int)65280, blue_mask=(int)255, alpha_mask=(int)-16777216, width=(int)[ 1, 2147483647 ], height=(int)[ 1, 2147483647 ], framerate=(fraction)[ 0/1, 2147483647/1 ]; video/x-raw-rgb, bpp=(int)32, depth=(int)32, endianness=(int)4321, red_mask=(int)65280, green_mask=(int)16711680, blue_mask=(int)-16777216, alpha_mask=(int)255, width=(int)[ 1, 2147483647 ], height=(int)[ 1, 2147483647 ], framerate=(fraction)[ 0/1, 2147483647/1 ]; video/x-raw-rgb, bpp=(int)32, depth=(int)32, endianness=(int)4321, red_mask=(int)255, green_mask=(int)65280, blue_mask=(int)16711680, alpha_mask=(int)-16777216, width=(int)[ 1, 2147483647 ], height=(int)[ 1, 2147483647 ], framerate=(fraction)[ 0/1, 2147483647/1 ]; video/x-raw-rgb, bpp=(int)24, depth=(int)24, endianness=(int)4321, red_mask=(int)16711680, green_mask=(int)65280, blue_mask=(int)255, width=(int)[ 1, 2147483647 ], height=(int)[ 1, 2147483647 ], framerate=(fraction)[ 0/1, 2147483647/1 ]; video/x-raw-rgb, bpp=(int)24, depth=(int)24, endianness=(int)4321, red_mask=(int)255, green_mask=(int)65280, blue_mask=(int)16711680, width=(int)[ 1, 2147483647 ], height=(int)[ 1, 2147483647 ], framerate=(fraction)[ 0/1, 2147483647/1 ]; video/x-raw-yuv, format=(fourcc)AYUV, width=(int)[ 1, 2147483647 ], height=(int)[ 1, 2147483647 ], framerate=(fraction)[ 0/1, 2147483647/1 ]; video/x-raw-yuv, format=(fourcc)YUY2, width=(int)[ 1, 2147483647 ], height=(int)[ 1, 2147483647 ], framerate=(fraction)[ 0/1, 2147483647/1 ]; video/x-raw-yuv, format=(fourcc)YVYU, width=(int)[ 1, 2147483647 ], height=(int)[ 1, 2147483647 ], framerate=(fraction)[ 0/1, 2147483647/1 ]; video/x-raw-yuv, format=(fourcc)UYVY, width=(int)[ 1, 2147483647 ], height=(int)[ 1, 2147483647 ], framerate=(fraction)[ 0/1, 2147483647/1 ]; video/x-raw-yuv, format=(fourcc)Y800, width=(int)[ 1, 2147483647 ], height=(int)[ 1, 2147483647 ], framerate=(fraction)[ 0/1, 2147483647/1 ]; video/x-raw-yuv, format=(fourcc)I420, width=(int)[ 1, 2147483647 ], height=(int)[ 1, 2147483647 ], framerate=(fraction)[ 0/1, 2147483647/1 ]; video/x-raw-yuv, format=(fourcc)YV12, width=(int)[ 1, 2147483647 ], height=(int)[ 1, 2147483647 ], framerate=(fraction)[ 0/1, 2147483647/1 ]; video/x-raw-rgb, bpp=(int)16, depth=(int)16, endianness=(int)1234, red_mask=(int)63488, green_mask=(int)2016, blue_mask=(int)31, width=(int)[ 1, 2147483647 ], height=(int)[ 1, 2147483647 ], framerate=(fraction)[ 0/1, 2147483647/1 ]; video/x-raw-rgb, bpp=(int)16, depth=(int)15, endianness=(int)1234, red_mask=(int)31744, green_mask=(int)992, blue_mask=(int)31, width=(int)[ 1, 2147483647 ], height=(int)[ 1, 2147483647 ], framerate=(fraction)[ 0/1, 2147483647/1 ]</caps>
  </padtemplate>
 </feature>
</plugin>
<plugin>
 <name>avi</name>
 <description>AVI stream handling</description>
 <filename>/usr/lib/gstreamer-0.10/libgstavi.so</filename>
 <size>107936</size>
 <m32p>1210196830</m32p>
 <version>0.10.7</version>
 <license>LGPL</license>
 <source>gst-plugins-good</source>
 <package>GStreamer Good Plugins (Ubuntu)</package>
 <origin>https://launchpad.net/distros/ubuntu/+source/gst-plugins-good0.10</origin>
 <feature typename="GstElementFactory">
  <name>avisubtitle</name>
  <rank>256</rank>
  <longname>Avi subtitle parser</longname>
  <class>Codec/Parser/Subtitle</class>
  <description>Parse avi subtitle stream</description>
  <author>Thijs Vermeir &lt;thijsvermeir@gmail.com&gt;</author>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>application/x-subtitle-avi</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>application/x-subtitle</caps>
  </padtemplate>
 </feature>
 <feature typename="GstElementFactory">
  <name>avimux</name>
  <longname>Avi muxer</longname>
  <class>Codec/Muxer</class>
  <description>Muxes audio and video into an avi stream</description>
  <author>Ronald Bultje &lt;rbultje@ronald.bitfreak.net&gt;</author>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>video/x-msvideo</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>audio_%d</nametemplate>
   <direction>sink</direction>
   <presence>request</presence>
   <caps>audio/x-raw-int, endianness=(int)1234, signed=(boolean){ true, false }, width=(int){ 8, 16 }, depth=(int){ 8, 16 }, rate=(int)[ 1000, 96000 ], channels=(int)[ 1, 2 ]; audio/mpeg, mpegversion=(int)1, layer=(int)[ 1, 3 ], rate=(int)[ 1000, 96000 ], channels=(int)[ 1, 2 ]; audio/mpeg, mpegversion=(int)4, rate=(int)[ 1000, 96000 ], channels=(int)[ 1, 2 ]; audio/x-ac3, rate=(int)[ 1000, 96000 ], channels=(int)[ 1, 2 ]</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>video_%d</nametemplate>
   <direction>sink</direction>
   <presence>request</presence>
   <caps>video/x-raw-yuv, format=(fourcc){ YUY2, I420 }, width=(int)[ 16, 4096 ], height=(int)[ 16, 4096 ], framerate=(fraction)[ 0/1, 2147483647/1 ]; image/jpeg, width=(int)[ 16, 4096 ], height=(int)[ 16, 4096 ], framerate=(fraction)[ 0/1, 2147483647/1 ]; video/x-divx, width=(int)[ 16, 4096 ], height=(int)[ 16, 4096 ], framerate=(fraction)[ 0/1, 2147483647/1 ], divxversion=(int)[ 3, 5 ]; video/x-xvid, width=(int)[ 16, 4096 ], height=(int)[ 16, 4096 ], framerate=(fraction)[ 0/1, 2147483647/1 ]; video/x-3ivx, width=(int)[ 16, 4096 ], height=(int)[ 16, 4096 ], framerate=(fraction)[ 0/1, 2147483647/1 ]; video/x-msmpeg, width=(int)[ 16, 4096 ], height=(int)[ 16, 4096 ], framerate=(fraction)[ 0/1, 2147483647/1 ], msmpegversion=(int)[ 41, 43 ]; video/mpeg, width=(int)[ 16, 4096 ], height=(int)[ 16, 4096 ], framerate=(fraction)[ 0/1, 2147483647/1 ], mpegversion=(int){ 1, 2, 4 }, systemstream=(boolean)false; video/x-h263, width=(int)[ 16, 4096 ], height=(int)[ 16, 4096 ], framerate=(fraction)[ 0/1, 2147483647/1 ]; video/x-h264, width=(int)[ 16, 4096 ], height=(int)[ 16, 4096 ], framerate=(fraction)[ 0/1, 2147483647/1 ]; video/x-dv, width=(int)720, height=(int){ 576, 480 }, framerate=(fraction)[ 0/1, 2147483647/1 ], systemstream=(boolean)false; video/x-huffyuv, width=(int)[ 16, 4096 ], height=(int)[ 16, 4096 ], framerate=(fraction)[ 0/1, 2147483647/1 ]</caps>
  </padtemplate>
  <interface>GstTagSetter</interface>
 </feature>
 <feature typename="GstElementFactory">
  <name>avidemux</name>
  <rank>256</rank>
  <longname>Avi demuxer</longname>
  <class>Codec/Demuxer</class>
  <description>Demultiplex an avi file into audio and video</description>
  <author>Erik Walthinsen &lt;omega@cse.ogi.edu&gt;
Wim Taymans &lt;wim.taymans@chello.be&gt;
Ronald Bultje &lt;rbultje@ronald.bitfreak.net&gt;</author>
  <padtemplate>
   <nametemplate>audio_%02d</nametemplate>
   <direction>src</direction>
   <presence>sometimes</presence>
   <caps>audio/ms-gsm, rate=(int)[ 1000, 96000 ], channels=(int)[ 1, 2 ]; audio/mpeg, mpegversion=(int)1, layer=(int)3, rate=(int)[ 8000, 48000 ], channels=(int)[ 1, 2 ]; audio/mpeg, mpegversion=(int)1, layer=(int)2, rate=(int)[ 16000, 48000 ], channels=(int)[ 1, 2 ]; audio/x-raw-int, endianness=(int)1234, signed=(boolean){ true, false }, width=(int){ 8, 16, 24, 32 }, depth=(int)[ 1, 32 ], rate=(int)[ 1000, 96000 ], channels=(int)[ 1, 8 ]; audio/x-vorbis, rate=(int)[ 1000, 96000 ], channels=(int)[ 1, 2 ]; audio/x-ac3, rate=(int)[ 1000, 96000 ], channels=(int)[ 1, 6 ]; audio/x-dts; audio/mpeg, mpegversion=(int)4, rate=(int)[ 1000, 96000 ], channels=(int)[ 1, 8 ]; audio/x-alaw, rate=(int)[ 1000, 48000 ], channels=(int)[ 1, 2 ]; audio/x-mulaw, rate=(int)[ 1000, 48000 ], channels=(int)[ 1, 2 ]; audio/x-wms, bitrate=(int)[ 0, 2147483647 ], rate=(int)[ 1000, 96000 ], channels=(int)[ 1, 2 ], block_align=(int)[ 1, 2147483647 ]; audio/x-adpcm, layout=(string)microsoft, rate=(int)[ 1000, 96000 ], channels=(int)[ 1, 2 ], block_align=(int)[ 1, 2147483647 ]; audio/x-adpcm, layout=(string)dvi, rate=(int)[ 1000, 48000 ], channels=(int)[ 1, 2 ], block_align=(int)[ 1, 2147483647 ]; audio/x-wma, wmaversion=(int)1, bitrate=(int)[ 0, 2147483647 ], rate=(int)[ 1000, 96000 ], channels=(int)[ 1, 6 ], block_align=(int)[ 1, 2147483647 ]; audio/x-wma, wmaversion=(int)2, bitrate=(int)[ 0, 2147483647 ], rate=(int)[ 1000, 96000 ], channels=(int)[ 1, 6 ], block_align=(int)[ 1, 2147483647 ]; audio/x-wma, wmaversion=(int)3, bitrate=(int)[ 0, 2147483647 ], rate=(int)[ 1000, 96000 ], channels=(int)[ 1, 6 ], block_align=(int)[ 1, 2147483647 ]; audio/x-vnd.sony.atrac3, rate=(int)[ 1000, 96000 ], channels=(int)[ 1, 2 ]; audio/x-raw-float, endianness=(int)1234, width=(int){ 32, 64 }, rate=(int)[ 1000, 96000 ], channels=(int)[ 1, 8 ]; audio/x-voxware, voxwaretype=(int)98, rate=(int)[ 1000, 96000 ], channels=(int)[ 1, 2 ]; application/x-ogg-avi; audio/x-avi-unknown</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>video_%02d</nametemplate>
   <direction>src</direction>
   <presence>sometimes</presence>
   <caps>video/x-3ivx, framerate=(fraction)[ 0/1, 2147483647/1 ], width=(int)[ 16, 4096 ], height=(int)[ 16, 4096 ]; video/x-asus, asusversion=(int)1, framerate=(fraction)[ 0/1, 2147483647/1 ], width=(int)[ 16, 4096 ], height=(int)[ 16, 4096 ]; video/x-asus, asusversion=(int)2, framerate=(fraction)[ 0/1, 2147483647/1 ], width=(int)[ 16, 4096 ], height=(int)[ 16, 4096 ]; video/x-cirrus-logic-accupak, framerate=(fraction)[ 0/1, 2147483647/1 ], width=(int)[ 16, 4096 ], height=(int)[ 16, 4096 ]; video/x-compressed-yuv, framerate=(fraction)[ 0/1, 2147483647/1 ], width=(int)[ 16, 4096 ], height=(int)[ 16, 4096 ]; video/x-raw-rgb, bpp=(int){ 8, 24 }, depth=(int){ 8, 24 }, framerate=(fraction)[ 0/1, 2147483647/1 ], width=(int)[ 16, 4096 ], height=(int)[ 16, 4096 ]; video/x-divx, divxversion=(int)3, framerate=(fraction)[ 0/1, 2147483647/1 ], width=(int)[ 16, 4096 ], height=(int)[ 16, 4096 ]; video/x-divx, divxversion=(int)4, framerate=(fraction)[ 0/1, 2147483647/1 ], width=(int)[ 16, 4096 ], height=(int)[ 16, 4096 ]; video/x-truemotion, trueversion=(int)1, framerate=(fraction)[ 0/1, 2147483647/1 ], width=(int)[ 16, 4096 ], height=(int)[ 16, 4096 ]; video/x-dv, systemstream=(boolean)false, framerate=(fraction)[ 0/1, 2147483647/1 ], width=(int)[ 16, 4096 ], height=(int)[ 16, 4096 ]; video/x-divx, divxversion=(int)5, framerate=(fraction)[ 0/1, 2147483647/1 ], width=(int)[ 16, 4096 ], height=(int)[ 16, 4096 ]; video/x-flash-video, flvversion=(int)1, framerate=(fraction)[ 0/1, 2147483647/1 ], width=(int)[ 16, 4096 ], height=(int)[ 16, 4096 ]; video/x-h263, variant=(string)itu, framerate=(fraction)[ 0/1, 2147483647/1 ], width=(int)[ 16, 4096 ], height=(int)[ 16, 4096 ]; video/x-h264, variant=(string)itu, framerate=(fraction)[ 0/1, 2147483647/1 ], width=(int)[ 16, 4096 ], height=(int)[ 16, 4096 ]; video/x-huffyuv, framerate=(fraction)[ 0/1, 2147483647/1 ], width=(int)[ 16, 4096 ], height=(int)[ 16, 4096 ]; video/x-intel-h263, variant=(string)intel, framerate=(fraction)[ 0/1, 2147483647/1 ], width=(int)[ 16, 4096 ], height=(int)[ 16, 4096 ]; video/x-raw-yuv, format=(fourcc)I420, framerate=(fraction)[ 0/1, 2147483647/1 ], width=(int)[ 16, 4096 ], height=(int)[ 16, 4096 ]; video/x-indeo, indeoversion=(int)3, framerate=(fraction)[ 0/1, 2147483647/1 ], width=(int)[ 16, 4096 ], height=(int)[ 16, 4096 ]; video/x-indeo, indeoversion=(int)4, framerate=(fraction)[ 0/1, 2147483647/1 ], width=(int)[ 16, 4096 ], height=(int)[ 16, 4096 ]; video/x-indeo, indeoversion=(int)5, framerate=(fraction)[ 0/1, 2147483647/1 ], width=(int)[ 16, 4096 ], height=(int)[ 16, 4096 ]; video/x-h263, variant=(string)lead, framerate=(fraction)[ 0/1, 2147483647/1 ], width=(int)[ 16, 4096 ], height=(int)[ 16, 4096 ]; video/x-h263, variant=(string)microsoft, framerate=(fraction)[ 0/1, 2147483647/1 ], width=(int)[ 16, 4096 ], height=(int)[ 16, 4096 ]; video/mpeg, mpegversion=(int)4, framerate=(fraction)[ 0/1, 2147483647/1 ], width=(int)[ 16, 4096 ], height=(int)[ 16, 4096 ]; image/jpeg, framerate=(fraction)[ 0/1, 2147483647/1 ], width=(int)[ 16, 4096 ], height=(int)[ 16, 4096 ]; video/x-msmpeg, msmpegversion=(int)42, framerate=(fraction)[ 0/1, 2147483647/1 ], width=(int)[ 16, 4096 ], height=(int)[ 16, 4096 ]; video/x-msmpeg, msmpegversion=(int)43, framerate=(fraction)[ 0/1, 2147483647/1 ], width=(int)[ 16, 4096 ], height=(int)[ 16, 4096 ]; video/mpeg, systemstream=(boolean)false, mpegversion=(int)1, framerate=(fraction)[ 0/1, 2147483647/1 ], width=(int)[ 16, 4096 ], height=(int)[ 16, 4096 ]; video/mpeg, systemstream=(boolean)false, mpegversion=(int)2, framerate=(fraction)[ 0/1, 2147483647/1 ], width=(int)[ 16, 4096 ], height=(int)[ 16, 4096 ]; video/x-msmpeg, msmpegversion=(int)41, framerate=(fraction)[ 0/1, 2147483647/1 ], width=(int)[ 16, 4096 ], height=(int)[ 16, 4096 ]; video/x-mszh, framerate=(fraction)[ 0/1, 2147483647/1 ], width=(int)[ 16, 4096 ], height=(int)[ 16, 4096 ]; image/png, framerate=(fraction)[ 0/1, 2147483647/1 ], width=(int)[ 16, 4096 ], height=(int)[ 16, 4096 ]; video/x-rle, layout=(string)microsoft, depth=(int)[ 1, 64 ], framerate=(fraction)[ 0/1, 2147483647/1 ], width=(int)[ 16, 4096 ], height=(int)[ 16, 4096 ]; video/x-indeo, indeoversion=(int)2, framerate=(fraction)[ 0/1, 2147483647/1 ], width=(int)[ 16, 4096 ], height=(int)[ 16, 4096 ]; video/sp5x, framerate=(fraction)[ 0/1, 2147483647/1 ], width=(int)[ 16, 4096 ], height=(int)[ 16, 4096 ]; video/x-truemotion, trueversion=(int)2, framerate=(fraction)[ 0/1, 2147483647/1 ], width=(int)[ 16, 4096 ], height=(int)[ 16, 4096 ]; video/x-camtasia, framerate=(fraction)[ 0/1, 2147483647/1 ], width=(int)[ 16, 4096 ], height=(int)[ 16, 4096 ]; video/x-ultimotion, framerate=(fraction)[ 0/1, 2147483647/1 ], width=(int)[ 16, 4096 ], height=(int)[ 16, 4096 ]; video/x-ati-vcr, vcrversion=(int)1, framerate=(fraction)[ 0/1, 2147483647/1 ], width=(int)[ 16, 4096 ], height=(int)[ 16, 4096 ]; video/x-ati-vcr, vcrversion=(int)2, framerate=(fraction)[ 0/1, 2147483647/1 ], width=(int)[ 16, 4096 ], height=(int)[ 16, 4096 ]; video/x-h263, variant=(string)vdolive, framerate=(fraction)[ 0/1, 2147483647/1 ], width=(int)[ 16, 4096 ], height=(int)[ 16, 4096 ]; video/x-h263, variant=(string)vivo, framerate=(fraction)[ 0/1, 2147483647/1 ], width=(int)[ 16, 4096 ], height=(int)[ 16, 4096 ]; video/x-vmnc, version=(int)1, framerate=(fraction)[ 0/1, 2147483647/1 ], width=(int)[ 16, 4096 ], height=(int)[ 16, 4096 ]; video/x-vp3, framerate=(fraction)[ 0/1, 2147483647/1 ], width=(int)[ 16, 4096 ], height=(int)[ 16, 4096 ]; video/x-h264, variant=(string)videosoft, framerate=(fraction)[ 0/1, 2147483647/1 ], width=(int)[ 16, 4096 ], height=(int)[ 16, 4096 ]; video/x-wmv, wmvversion=(int)1, framerate=(fraction)[ 0/1, 2147483647/1 ], width=(int)[ 16, 4096 ], height=(int)[ 16, 4096 ]; video/x-wmv, wmvversion=(int)2, framerate=(fraction)[ 0/1, 2147483647/1 ], width=(int)[ 16, 4096 ], height=(int)[ 16, 4096 ]; video/x-wmv, wmvversion=(int)3, framerate=(fraction)[ 0/1, 2147483647/1 ], width=(int)[ 16, 4096 ], height=(int)[ 16, 4096 ]; video/x-xvid, framerate=(fraction)[ 0/1, 2147483647/1 ], width=(int)[ 16, 4096 ], height=(int)[ 16, 4096 ]; video/x-xan, wcversion=(int)4, framerate=(fraction)[ 0/1, 2147483647/1 ], width=(int)[ 16, 4096 ], height=(int)[ 16, 4096 ]; video/x-raw-yuv, format=(fourcc)YUY2, framerate=(fraction)[ 0/1, 2147483647/1 ], width=(int)[ 16, 4096 ], height=(int)[ 16, 4096 ]; video/x-raw-yuv, format=(fourcc)YVU9, framerate=(fraction)[ 0/1, 2147483647/1 ], width=(int)[ 16, 4096 ], height=(int)[ 16, 4096 ]; video/x-zlib, framerate=(fraction)[ 0/1, 2147483647/1 ], width=(int)[ 16, 4096 ], height=(int)[ 16, 4096 ]; video/x-cinepak, framerate=(fraction)[ 0/1, 2147483647/1 ], width=(int)[ 16, 4096 ], height=(int)[ 16, 4096 ]; video/x-h264, variant=(string)itu, framerate=(fraction)[ 0/1, 2147483647/1 ], width=(int)[ 16, 4096 ], height=(int)[ 16, 4096 ]; video/x-msvideocodec, msvideoversion=(int)1, framerate=(fraction)[ 0/1, 2147483647/1 ], width=(int)[ 16, 4096 ], height=(int)[ 16, 4096 ]; video/x-h263, variant=(string)xirlink, framerate=(fraction)[ 0/1, 2147483647/1 ], width=(int)[ 16, 4096 ], height=(int)[ 16, 4096 ]; video/x-dirac, framerate=(fraction)[ 0/1, 2147483647/1 ], width=(int)[ 16, 4096 ], height=(int)[ 16, 4096 ]; video/x-dv, systemstream=(boolean)true; video/x-avi-unknown</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>subtitle_%02d</nametemplate>
   <direction>src</direction>
   <presence>sometimes</presence>
   <caps>application/x-subtitle-avi</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>video/x-msvideo</caps>
  </padtemplate>
 </feature>
</plugin>
<plugin>
 <name>cacasink</name>
 <description>Colored ASCII Art video sink</description>
 <filename>/usr/lib/gstreamer-0.10/libgstcacasink.so</filename>
 <size>15840</size>
 <m32p>1210196830</m32p>
 <version>0.10.7</version>
 <license>LGPL</license>
 <source>gst-plugins-good</source>
 <package>GStreamer Good Plugins (Ubuntu)</package>
 <origin>https://launchpad.net/distros/ubuntu/+source/gst-plugins-good0.10</origin>
 <feature typename="GstElementFactory">
  <name>cacasink</name>
  <longname>A colored ASCII art video sink</longname>
  <class>Sink/Video</class>
  <description>A colored ASCII art videosink</description>
  <author>Zeeshan Ali &lt;zak147@yahoo.com&gt;</author>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>video/x-raw-rgb, bpp=(int)24, depth=(int)24, endianness=(int)4321, red_mask=(int)16711680, green_mask=(int)65280, blue_mask=(int)255, width=(int)[ 1, 2147483647 ], height=(int)[ 1, 2147483647 ], framerate=(fraction)[ 0/1, 2147483647/1 ]; video/x-raw-rgb, bpp=(int)32, depth=(int)24, endianness=(int)4321, red_mask=(int)-16777216, green_mask=(int)16711680, blue_mask=(int)65280, width=(int)[ 1, 2147483647 ], height=(int)[ 1, 2147483647 ], framerate=(fraction)[ 0/1, 2147483647/1 ]; video/x-raw-rgb, bpp=(int)16, depth=(int)16, endianness=(int)1234, red_mask=(int)63488, green_mask=(int)2016, blue_mask=(int)31, width=(int)[ 1, 2147483647 ], height=(int)[ 1, 2147483647 ], framerate=(fraction)[ 0/1, 2147483647/1 ]; video/x-raw-rgb, bpp=(int)16, depth=(int)15, endianness=(int)1234, red_mask=(int)31744, green_mask=(int)992, blue_mask=(int)31, width=(int)[ 1, 2147483647 ], height=(int)[ 1, 2147483647 ], framerate=(fraction)[ 0/1, 2147483647/1 ]</caps>
  </padtemplate>
 </feature>
</plugin>
<plugin>
 <name>aasink</name>
 <description>ASCII Art video sink</description>
 <filename>/usr/lib/gstreamer-0.10/libgstaasink.so</filename>
 <size>16960</size>
 <m32p>1210196830</m32p>
 <version>0.10.7</version>
 <license>LGPL</license>
 <source>gst-plugins-good</source>
 <package>GStreamer Good Plugins (Ubuntu)</package>
 <origin>https://launchpad.net/distros/ubuntu/+source/gst-plugins-good0.10</origin>
 <feature typename="GstElementFactory">
  <name>aasink</name>
  <longname>ASCII art video sink</longname>
  <class>Sink/Video</class>
  <description>An ASCII art videosink</description>
  <author>Wim Taymans &lt;wim.taymans@chello.be&gt;</author>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>video/x-raw-yuv, format=(fourcc)I420, width=(int)[ 1, 2147483647 ], height=(int)[ 1, 2147483647 ], framerate=(fraction)[ 0/1, 2147483647/1 ]</caps>
  </padtemplate>
 </feature>
</plugin>
<plugin>
 <name>id3demux</name>
 <description>Demux ID3v1 and ID3v2 tags from a file</description>
 <filename>/usr/lib/gstreamer-0.10/libgstid3demux.so</filename>
 <size>41664</size>
 <m32p>1210196830</m32p>
 <version>0.10.7</version>
 <license>LGPL</license>
 <source>gst-plugins-good</source>
 <package>GStreamer Good Plugins (Ubuntu)</package>
 <origin>https://launchpad.net/distros/ubuntu/+source/gst-plugins-good0.10</origin>
 <feature typename="GstElementFactory">
  <name>id3demux</name>
  <rank>256</rank>
  <longname>ID3 tag demuxer</longname>
  <class>Codec/Demuxer/Metadata</class>
  <description>Read and output ID3v1 and ID3v2 tags while demuxing the contents</description>
  <author>Jan Schmidt &lt;thaytan@mad.scientist.com&gt;</author>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>sometimes</presence>
   <caps>ANY</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>application/x-id3</caps>
  </padtemplate>
 </feature>
</plugin>
<plugin>
 <name>equalizer</name>
 <description>GStreamer audio equalizers</description>
 <filename>/usr/lib/gstreamer-0.10/libgstequalizer.so</filename>
 <size>26456</size>
 <m32p>1210196830</m32p>
 <version>0.10.7</version>
 <license>LGPL</license>
 <source>gst-plugins-good</source>
 <package>GStreamer Good Plugins (Ubuntu)</package>
 <origin>https://launchpad.net/distros/ubuntu/+source/gst-plugins-good0.10</origin>
 <feature typename="GstElementFactory">
  <name>equalizer-10bands</name>
  <longname>10 Band Equalizer</longname>
  <class>Filter/Effect/Audio</class>
  <description>Direct Form 10 band IIR equalizer</description>
  <author>Stefan Kost &lt;ensonic@users.sf.net&gt;</author>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>audio/x-raw-int, depth=(int)16, width=(int)16, endianness=(int)1234, signed=(boolean)true, rate=(int)[ 1000, 2147483647 ], channels=(int)[ 1, 2147483647 ]; audio/x-raw-float, width=(int){ 32, 64 }, endianness=(int)1234, rate=(int)[ 1000, 2147483647 ], channels=(int)[ 1, 2147483647 ]</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>audio/x-raw-int, depth=(int)16, width=(int)16, endianness=(int)1234, signed=(boolean)true, rate=(int)[ 1000, 2147483647 ], channels=(int)[ 1, 2147483647 ]; audio/x-raw-float, width=(int){ 32, 64 }, endianness=(int)1234, rate=(int)[ 1000, 2147483647 ], channels=(int)[ 1, 2147483647 ]</caps>
  </padtemplate>
  <interface>GstChildProxy</interface>
 </feature>
 <feature typename="GstElementFactory">
  <name>equalizer-3bands</name>
  <longname>3 Band Equalizer</longname>
  <class>Filter/Effect/Audio</class>
  <description>Direct Form 3 band IIR equalizer</description>
  <author>Stefan Kost &lt;ensonic@users.sf.net&gt;</author>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>audio/x-raw-int, depth=(int)16, width=(int)16, endianness=(int)1234, signed=(boolean)true, rate=(int)[ 1000, 2147483647 ], channels=(int)[ 1, 2147483647 ]; audio/x-raw-float, width=(int){ 32, 64 }, endianness=(int)1234, rate=(int)[ 1000, 2147483647 ], channels=(int)[ 1, 2147483647 ]</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>audio/x-raw-int, depth=(int)16, width=(int)16, endianness=(int)1234, signed=(boolean)true, rate=(int)[ 1000, 2147483647 ], channels=(int)[ 1, 2147483647 ]; audio/x-raw-float, width=(int){ 32, 64 }, endianness=(int)1234, rate=(int)[ 1000, 2147483647 ], channels=(int)[ 1, 2147483647 ]</caps>
  </padtemplate>
  <interface>GstChildProxy</interface>
 </feature>
 <feature typename="GstElementFactory">
  <name>equalizer-nbands</name>
  <longname>N Band Equalizer</longname>
  <class>Filter/Effect/Audio</class>
  <description>Direct Form IIR equalizer</description>
  <author>Benjamin Otte &lt;otte@gnome.org&gt;, Stefan Kost &lt;ensonic@users.sf.net&gt;</author>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>audio/x-raw-int, depth=(int)16, width=(int)16, endianness=(int)1234, signed=(boolean)true, rate=(int)[ 1000, 2147483647 ], channels=(int)[ 1, 2147483647 ]; audio/x-raw-float, width=(int){ 32, 64 }, endianness=(int)1234, rate=(int)[ 1000, 2147483647 ], channels=(int)[ 1, 2147483647 ]</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>audio/x-raw-int, depth=(int)16, width=(int)16, endianness=(int)1234, signed=(boolean)true, rate=(int)[ 1000, 2147483647 ], channels=(int)[ 1, 2147483647 ]; audio/x-raw-float, width=(int){ 32, 64 }, endianness=(int)1234, rate=(int)[ 1000, 2147483647 ], channels=(int)[ 1, 2147483647 ]</caps>
  </padtemplate>
  <interface>GstChildProxy</interface>
 </feature>
</plugin>
<plugin>
 <name>spectrum</name>
 <description>Run an FFT on the audio signal, output spectrum data</description>
 <filename>/usr/lib/gstreamer-0.10/libgstspectrum.so</filename>
 <size>22104</size>
 <m32p>1210196831</m32p>
 <version>0.10.7</version>
 <license>LGPL</license>
 <source>gst-plugins-good</source>
 <package>GStreamer Good Plugins (Ubuntu)</package>
 <origin>https://launchpad.net/distros/ubuntu/+source/gst-plugins-good0.10</origin>
 <feature typename="GstElementFactory">
  <name>spectrum</name>
  <longname>Spectrum analyzer</longname>
  <class>Filter/Analyzer/Audio</class>
  <description>Run an FFT on the audio signal, output spectrum data</description>
  <author>Erik Walthinsen &lt;omega@cse.ogi.edu&gt;, Stefan Kost &lt;ensonic@users.sf.net&gt;, Sebastian Dröge &lt;slomo@circular-chaos.org&gt;</author>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>audio/x-raw-int, width=(int)16, depth=(int)16, signed=(boolean)true, endianness=(int)1234, rate=(int)[ 1, 2147483647 ], channels=(int)[ 1, 2147483647 ]; audio/x-raw-int, width=(int)32, depth=(int)32, signed=(boolean)true, endianness=(int)1234, rate=(int)[ 1, 2147483647 ], channels=(int)[ 1, 2147483647 ]; audio/x-raw-float, width=(int){ 32, 64 }, endianness=(int)1234, rate=(int)[ 1, 2147483647 ], channels=(int)[ 1, 2147483647 ]</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>audio/x-raw-int, width=(int)16, depth=(int)16, signed=(boolean)true, endianness=(int)1234, rate=(int)[ 1, 2147483647 ], channels=(int)[ 1, 2147483647 ]; audio/x-raw-int, width=(int)32, depth=(int)32, signed=(boolean)true, endianness=(int)1234, rate=(int)[ 1, 2147483647 ], channels=(int)[ 1, 2147483647 ]; audio/x-raw-float, width=(int){ 32, 64 }, endianness=(int)1234, rate=(int)[ 1, 2147483647 ], channels=(int)[ 1, 2147483647 ]</caps>
  </padtemplate>
 </feature>
</plugin>
<plugin>
 <name>mulaw</name>
 <description>MuLaw audio conversion routines</description>
 <filename>/usr/lib/gstreamer-0.10/libgstmulaw.so</filename>
 <size>15640</size>
 <m32p>1210196830</m32p>
 <version>0.10.7</version>
 <license>LGPL</license>
 <source>gst-plugins-good</source>
 <package>GStreamer Good Plugins (Ubuntu)</package>
 <origin>https://launchpad.net/distros/ubuntu/+source/gst-plugins-good0.10</origin>
 <feature typename="GstElementFactory">
  <name>mulawdec</name>
  <rank>256</rank>
  <longname>Mu Law audio decoder</longname>
  <class>Codec/Decoder/Audio</class>
  <description>Convert 8bit mu law to 16bit PCM</description>
  <author>Zaheer Abbas Merali &lt;zaheerabbas at merali dot org&gt;</author>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>audio/x-raw-int, width=(int)16, depth=(int)16, endianness=(int)1234, signed=(boolean)true, rate=(int)[ 8000, 192000 ], channels=(int)[ 1, 2 ]</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>audio/x-mulaw, rate=(int)[ 8000, 192000 ], channels=(int)[ 1, 2 ]</caps>
  </padtemplate>
 </feature>
 <feature typename="GstElementFactory">
  <name>mulawenc</name>
  <longname>Mu Law audio encoder</longname>
  <class>Codec/Encoder/Audio</class>
  <description>Convert 16bit PCM to 8bit mu law</description>
  <author>Zaheer Abbas Merali &lt;zaheerabbas at merali dot org&gt;</author>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>audio/x-mulaw, rate=(int)[ 8000, 192000 ], channels=(int)[ 1, 2 ]</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>audio/x-raw-int, width=(int)16, depth=(int)16, endianness=(int)1234, signed=(boolean)true, rate=(int)[ 8000, 192000 ], channels=(int)[ 1, 2 ]</caps>
  </padtemplate>
 </feature>
</plugin>
<plugin>
 <name>icydemux</name>
 <description>Demux ICY tags from a stream</description>
 <filename>/usr/lib/gstreamer-0.10/libgsticydemux.so</filename>
 <size>18048</size>
 <m32p>1210196830</m32p>
 <version>0.10.7</version>
 <license>LGPL</license>
 <source>gst-plugins-good</source>
 <package>GStreamer Good Plugins (Ubuntu)</package>
 <origin>https://launchpad.net/distros/ubuntu/+source/gst-plugins-good0.10</origin>
 <feature typename="GstElementFactory">
  <name>icydemux</name>
  <rank>256</rank>
  <longname>ICY tag demuxer</longname>
  <class>Codec/Demuxer/Metadata</class>
  <description>Read and output ICY tags while demuxing the contents</description>
  <author>Jan Schmidt &lt;thaytan@mad.scientist.com&gt;
Michael Smith &lt;msmith@fluendo.com&gt;</author>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>sometimes</presence>
   <caps>ANY</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>application/x-icy, metadata-interval=(int)[ 0, 2147483647 ]</caps>
  </padtemplate>
 </feature>
</plugin>
<plugin>
 <name>taglib</name>
 <description>Tag writing plug-in based on taglib</description>
 <filename>/usr/lib/gstreamer-0.10/libgsttaglib.so</filename>
 <size>50128</size>
 <m32p>1210196831</m32p>
 <version>0.10.7</version>
 <license>LGPL</license>
 <source>gst-plugins-good</source>
 <package>GStreamer Good Plugins (Ubuntu)</package>
 <origin>https://launchpad.net/distros/ubuntu/+source/gst-plugins-good0.10</origin>
 <feature typename="GstElementFactory">
  <name>apev2mux</name>
  <longname>TagLib-based APEv2 Muxer</longname>
  <class>Formatter/Metadata</class>
  <description>Adds an APEv2 header to the beginning of files using taglib</description>
  <author>Sebastian Dröge &lt;slomo@circular-chaos.org&gt;</author>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>ANY</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>application/x-apetag</caps>
  </padtemplate>
  <interface>GstTagSetter</interface>
 </feature>
 <feature typename="GstElementFactory">
  <name>id3v2mux</name>
  <longname>TagLib-based ID3v2 Muxer</longname>
  <class>Formatter/Metadata</class>
  <description>Adds an ID3v2 header to the beginning of MP3 files using taglib</description>
  <author>Christophe Fergeau &lt;teuf@gnome.org&gt;</author>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>ANY</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>application/x-id3</caps>
  </padtemplate>
  <interface>GstTagSetter</interface>
 </feature>
</plugin>
<plugin>
 <name>navigationtest</name>
 <description>Template for a video filter</description>
 <filename>/usr/lib/gstreamer-0.10/libgstnavigationtest.so</filename>
 <size>13320</size>
 <m32p>1210196830</m32p>
 <version>0.10.7</version>
 <license>LGPL</license>
 <source>gst-plugins-good</source>
 <package>GStreamer Good Plugins (Ubuntu)</package>
 <origin>https://launchpad.net/distros/ubuntu/+source/gst-plugins-good0.10</origin>
 <feature typename="GstElementFactory">
  <name>navigationtest</name>
  <longname>Video navigation test</longname>
  <class>Filter/Effect/Video</class>
  <description>Handle navigation events showing a black square following mouse pointer</description>
  <author>David Schleef &lt;ds@schleef.org&gt;</author>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>video/x-raw-yuv, format=(fourcc)I420, width=(int)[ 1, 2147483647 ], height=(int)[ 1, 2147483647 ], framerate=(fraction)[ 0/1, 2147483647/1 ]</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>video/x-raw-yuv, format=(fourcc)I420, width=(int)[ 1, 2147483647 ], height=(int)[ 1, 2147483647 ], framerate=(fraction)[ 0/1, 2147483647/1 ]</caps>
  </padtemplate>
 </feature>
</plugin>
<plugin>
 <name>monoscope</name>
 <description>Monoscope visualization</description>
 <filename>/usr/lib/gstreamer-0.10/libgstmonoscope.so</filename>
 <size>19904</size>
 <m32p>1210196830</m32p>
 <version>0.10.7</version>
 <license>LGPL</license>
 <source>gst-plugins-good</source>
 <package>GStreamer Good Plugins (Ubuntu)</package>
 <origin>https://launchpad.net/distros/ubuntu/+source/gst-plugins-good0.10</origin>
 <feature typename="GstElementFactory">
  <name>monoscope</name>
  <longname>Monoscope</longname>
  <class>Visualization</class>
  <description>Displays a highly stabilised waveform of audio input</description>
  <author>Richard Boulton &lt;richard@tartarus.org&gt;</author>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>video/x-raw-rgb, bpp=(int)32, depth=(int)24, endianness=(int)4321, red_mask=(int)65280, green_mask=(int)16711680, blue_mask=(int)-16777216, width=(int)256, height=(int)128, framerate=(fraction)[ 0/1, 2147483647/1 ]</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>audio/x-raw-int, rate=(int)[ 1, 2147483647 ], channels=(int)2, endianness=(int)1234, width=(int)16, depth=(int)16, signed=(boolean)true</caps>
  </padtemplate>
 </feature>
</plugin>
<plugin>
 <name>goom</name>
 <description>GOOM visualization filter</description>
 <filename>/usr/lib/gstreamer-0.10/libgstgoom.so</filename>
 <size>28352</size>
 <m32p>1210196830</m32p>
 <version>0.10.7</version>
 <license>LGPL</license>
 <source>gst-plugins-good</source>
 <package>GStreamer Good Plugins (Ubuntu)</package>
 <origin>https://launchpad.net/distros/ubuntu/+source/gst-plugins-good0.10</origin>
 <feature typename="GstElementFactory">
  <name>goom</name>
  <longname>GOOM: what a GOOM!</longname>
  <class>Visualization</class>
  <description>Takes frames of data and outputs video frames using the GOOM filter</description>
  <author>Wim Taymans &lt;wim@fluendo.com&gt;</author>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>audio/x-raw-int, endianness=(int)1234, signed=(boolean)true, width=(int)16, depth=(int)16, rate=(int)[ 8000, 96000 ], channels=(int){ 1, 2 }</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>video/x-raw-rgb, bpp=(int)32, depth=(int)24, endianness=(int)4321, red_mask=(int)65280, green_mask=(int)16711680, blue_mask=(int)-16777216, width=(int)[ 1, 2147483647 ], height=(int)[ 1, 2147483647 ], framerate=(fraction)[ 0/1, 2147483647/1 ]</caps>
  </padtemplate>
 </feature>
</plugin>
<plugin>
 <name>wavenc</name>
 <description>Encode raw audio into WAV</description>
 <filename>/usr/lib/gstreamer-0.10/libgstwavenc.so</filename>
 <size>13856</size>
 <m32p>1210196831</m32p>
 <version>0.10.7</version>
 <license>LGPL</license>
 <source>gst-plugins-good</source>
 <package>GStreamer Good Plugins (Ubuntu)</package>
 <origin>https://launchpad.net/distros/ubuntu/+source/gst-plugins-good0.10</origin>
 <feature typename="GstElementFactory">
  <name>wavenc</name>
  <longname>WAV audio muxer</longname>
  <class>Codec/Muxer/Audio</class>
  <description>Encode raw audio into WAV</description>
  <author>Iain Holmes &lt;iain@prettypeople.org&gt;</author>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>audio/x-wav</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>audio/x-raw-int, rate=(int)[ 1, 2147483647 ], channels=(int)[ 1, 2 ], endianness=(int)1234, width=(int)32, depth=(int)[ 25, 32 ], signed=(boolean)true; audio/x-raw-int, rate=(int)[ 1, 2147483647 ], channels=(int)[ 1, 2 ], endianness=(int)1234, width=(int)24, depth=(int)[ 17, 24 ], signed=(boolean)true; audio/x-raw-int, rate=(int)[ 1, 2147483647 ], channels=(int)[ 1, 2 ], endianness=(int)1234, width=(int)16, depth=(int)[ 9, 16 ], signed=(boolean)true; audio/x-raw-int, rate=(int)[ 1, 2147483647 ], channels=(int)[ 1, 2 ], width=(int)8, depth=(int)[ 1, 8 ], signed=(boolean)false</caps>
  </padtemplate>
 </feature>
</plugin>
<plugin>
 <name>rtsp</name>
 <description>transfer data via RTSP</description>
 <filename>/usr/lib/gstreamer-0.10/libgstrtsp.so</filename>
 <size>101376</size>
 <m32p>1210196830</m32p>
 <version>0.10.7</version>
 <license>LGPL</license>
 <source>gst-plugins-good</source>
 <package>GStreamer Good Plugins (Ubuntu)</package>
 <origin>https://launchpad.net/distros/ubuntu/+source/gst-plugins-good0.10</origin>
 <feature typename="GstElementFactory">
  <name>rtpdec</name>
  <longname>RTP Decoder</longname>
  <class>Codec/Parser/Network</class>
  <description>Accepts raw RTP and RTCP packets and sends them forward</description>
  <author>Wim Taymans &lt;wim@fluendo.com&gt;</author>
  <padtemplate>
   <nametemplate>recv_rtp_sink_%d</nametemplate>
   <direction>sink</direction>
   <presence>request</presence>
   <caps>application/x-rtp</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>recv_rtcp_sink_%d</nametemplate>
   <direction>sink</direction>
   <presence>request</presence>
   <caps>application/x-rtcp</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>recv_rtp_src_%d_%d_%d</nametemplate>
   <direction>src</direction>
   <presence>sometimes</presence>
   <caps>application/x-rtp</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>rtcp_src_%d</nametemplate>
   <direction>src</direction>
   <presence>request</presence>
   <caps>application/x-rtcp</caps>
  </padtemplate>
 </feature>
 <feature typename="GstElementFactory">
  <name>rtspsrc</name>
  <longname>RTSP packet receiver</longname>
  <class>Source/Network</class>
  <description>Receive data over the network via RTSP (RFC 2326)</description>
  <author>Wim Taymans &lt;wim@fluendo.com&gt;
Thijs Vermeir &lt;thijs.vermeir@barco.com&gt;
Lutz Mueller &lt;lutz@topfrose.de&gt;</author>
  <padtemplate>
   <nametemplate>stream%d</nametemplate>
   <direction>src</direction>
   <presence>sometimes</presence>
   <caps>application/x-rtp; application/x-rdt</caps>
  </padtemplate>
  <interface>GstChildProxy</interface>
  <interface>GstURIHandler</interface>
  <uri_type>source</uri_type>
  <uri_protocol>rtsp</uri_protocol>
  <uri_protocol>rtspu</uri_protocol>
  <uri_protocol>rtspt</uri_protocol>
 </feature>
</plugin>
<plugin>
 <name>multipart</name>
 <description>multipart stream manipulation</description>
 <filename>/usr/lib/gstreamer-0.10/libgstmultipart.so</filename>
 <size>28800</size>
 <m32p>1210196830</m32p>
 <version>0.10.7</version>
 <license>LGPL</license>
 <source>gst-plugins-good</source>
 <package>GStreamer Good Plugins (Ubuntu)</package>
 <origin>https://launchpad.net/distros/ubuntu/+source/gst-plugins-good0.10</origin>
 <feature typename="GstElementFactory">
  <name>multipartmux</name>
  <longname>Multipart muxer</longname>
  <class>Codec/Muxer</class>
  <description>mux multipart streams</description>
  <author>Wim Taymans &lt;wim@fluendo.com&gt;</author>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>multipart/x-mixed-replace</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>sink_%d</nametemplate>
   <direction>sink</direction>
   <presence>request</presence>
   <caps>ANY</caps>
  </padtemplate>
 </feature>
 <feature typename="GstElementFactory">
  <name>multipartdemux</name>
  <rank>256</rank>
  <longname>Multipart demuxer</longname>
  <class>Codec/Demuxer</class>
  <description>demux multipart streams</description>
  <author>Wim Taymans &lt;wim@fluendo.com&gt;, Sjoerd Simons &lt;sjoerd@luon.net&gt;</author>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>multipart/x-mixed-replace</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>sometimes</presence>
   <caps>ANY</caps>
  </padtemplate>
 </feature>
</plugin>
<plugin>
 <name>jpeg</name>
 <description>JPeg plugin library</description>
 <filename>/usr/lib/gstreamer-0.10/libgstjpeg.so</filename>
 <size>62752</size>
 <m32p>1210196830</m32p>
 <version>0.10.7</version>
 <license>LGPL</license>
 <source>gst-plugins-good</source>
 <package>GStreamer Good Plugins (Ubuntu)</package>
 <origin>https://launchpad.net/distros/ubuntu/+source/gst-plugins-good0.10</origin>
 <feature typename="GstElementFactory">
  <name>smokedec</name>
  <rank>256</rank>
  <longname>Smoke video decoder</longname>
  <class>Codec/Decoder/Video</class>
  <description>Decode video from Smoke format</description>
  <author>Wim Taymans &lt;wim@fluendo.com&gt;</author>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>video/x-raw-yuv, format=(fourcc)I420, width=(int)[ 1, 2147483647 ], height=(int)[ 1, 2147483647 ], framerate=(fraction)[ 0/1, 2147483647/1 ]</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>video/x-smoke, width=(int)[ 16, 4096 ], height=(int)[ 16, 4096 ], framerate=(fraction)[ 0/1, 2147483647/1 ]</caps>
  </padtemplate>
 </feature>
 <feature typename="GstElementFactory">
  <name>smokeenc</name>
  <rank>256</rank>
  <longname>Smoke video encoder</longname>
  <class>Codec/Encoder/Video</class>
  <description>Encode images into the Smoke format</description>
  <author>Wim Taymans &lt;wim@fluendo.com&gt;</author>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>video/x-raw-yuv, format=(fourcc)I420, width=(int)[ 1, 2147483647 ], height=(int)[ 1, 2147483647 ], framerate=(fraction)[ 0/1, 2147483647/1 ]</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>video/x-smoke, width=(int)[ 16, 4096 ], height=(int)[ 16, 4096 ], framerate=(fraction)[ 0/1, 2147483647/1 ]</caps>
  </padtemplate>
 </feature>
 <feature typename="GstElementFactory">
  <name>jpegdec</name>
  <rank>256</rank>
  <longname>JPEG image decoder</longname>
  <class>Codec/Decoder/Image</class>
  <description>Decode images from JPEG format</description>
  <author>Wim Taymans &lt;wim@fluendo.com&gt;</author>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>video/x-raw-yuv, format=(fourcc)I420, width=(int)[ 1, 2147483647 ], height=(int)[ 1, 2147483647 ], framerate=(fraction)[ 0/1, 2147483647/1 ]</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>image/jpeg, width=(int)[ 16, 4096 ], height=(int)[ 8, 4096 ], framerate=(fraction)[ 0/1, 2147483647/1 ]</caps>
  </padtemplate>
 </feature>
 <feature typename="GstElementFactory">
  <name>jpegenc</name>
  <longname>JPEG image encoder</longname>
  <class>Codec/Encoder/Image</class>
  <description>Encode images in JPEG format</description>
  <author>Wim Taymans &lt;wim.taymans@tvd.be&gt;</author>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>video/x-raw-yuv, format=(fourcc)I420, width=(int)[ 1, 2147483647 ], height=(int)[ 1, 2147483647 ], framerate=(fraction)[ 0/1, 2147483647/1 ]</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>image/jpeg, width=(int)[ 16, 4096 ], height=(int)[ 16, 4096 ], framerate=(fraction)[ 0/1, 2147483647/1 ]</caps>
  </padtemplate>
 </feature>
</plugin>
<plugin>
 <name>flac</name>
 <description>The FLAC Lossless compressor Codec</description>
 <filename>/usr/lib/gstreamer-0.10/libgstflac.so</filename>
 <size>70720</size>
 <m32p>1210196830</m32p>
 <version>0.10.7</version>
 <license>LGPL</license>
 <source>gst-plugins-good</source>
 <package>GStreamer Good Plugins (Ubuntu)</package>
 <origin>https://launchpad.net/distros/ubuntu/+source/gst-plugins-good0.10</origin>
 <feature typename="GstElementFactory">
  <name>flacdec</name>
  <rank>256</rank>
  <longname>FLAC audio decoder</longname>
  <class>Codec/Decoder/Audio</class>
  <description>Decodes FLAC lossless audio streams</description>
  <author>Wim Taymans &lt;wim@fluendo.com&gt;</author>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>audio/x-flac</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>audio/x-raw-int, endianness=(int)1234, signed=(boolean)true, width=(int){ 8, 16, 32 }, depth=(int){ 8, 12, 16, 20, 24, 32 }, rate=(int)[ 8000, 96000 ], channels=(int)[ 1, 8 ]</caps>
  </padtemplate>
 </feature>
 <feature typename="GstElementFactory">
  <name>flacenc</name>
  <longname>FLAC audio encoder</longname>
  <class>Codec/Encoder/Audio</class>
  <description>Encodes audio with the FLAC lossless audio encoder</description>
  <author>Wim Taymans &lt;wim.taymans@chello.be&gt;</author>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>audio/x-flac</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>audio/x-raw-int, endianness=(int)1234, signed=(boolean)true, width=(int)16, depth=(int)16, rate=(int)[ 8000, 96000 ], channels=(int)[ 1, 2 ]</caps>
  </padtemplate>
  <interface>GstTagSetter</interface>
 </feature>
</plugin>
<plugin>
 <name>gconfelements</name>
 <description>elements wrapping the GStreamer/GConf audio/video output settings</description>
 <filename>/usr/lib/gstreamer-0.10/libgstgconfelements.so</filename>
 <size>33928</size>
 <m32p>1210196830</m32p>
 <version>0.10.7</version>
 <license>LGPL</license>
 <source>gst-plugins-good</source>
 <package>GStreamer Good Plugins (Ubuntu)</package>
 <origin>https://launchpad.net/distros/ubuntu/+source/gst-plugins-good0.10</origin>
 <feature typename="GstElementFactory">
  <name>gconfaudiosrc</name>
  <longname>GConf audio source</longname>
  <class>Source/Audio</class>
  <description>Audio source embedding the GConf-settings for audio input</description>
  <author>Ronald Bultje &lt;rbultje@ronald.bitfreak.net&gt;</author>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>ANY</caps>
  </padtemplate>
  <interface>GstChildProxy</interface>
 </feature>
 <feature typename="GstElementFactory">
  <name>gconfaudiosink</name>
  <longname>GConf audio sink</longname>
  <class>Sink/Audio</class>
  <description>Audio sink embedding the GConf-settings for audio output</description>
  <author>Ronald Bultje &lt;rbultje@ronald.bitfreak.net&gt;
Jan Schmidt &lt;thaytan@mad.scientist.com&gt;</author>
  <interface>GstChildProxy</interface>
 </feature>
 <feature typename="GstElementFactory">
  <name>gconfvideosrc</name>
  <longname>GConf video source</longname>
  <class>Source/Video</class>
  <description>Video source embedding the GConf-settings for video input</description>
  <author>Ronald Bultje &lt;rbultje@ronald.bitfreak.net&gt;</author>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>ANY</caps>
  </padtemplate>
  <interface>GstChildProxy</interface>
 </feature>
 <feature typename="GstElementFactory">
  <name>gconfvideosink</name>
  <longname>GConf video sink</longname>
  <class>Sink/Video</class>
  <description>Video sink embedding the GConf-settings for video output</description>
  <author>Ronald Bultje &lt;rbultje@ronald.bitfreak.net&gt;</author>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>ANY</caps>
  </padtemplate>
  <interface>GstChildProxy</interface>
 </feature>
</plugin>
<plugin>
 <name>alpha</name>
 <description>adds an alpha channel to video - constant or via chroma-keying</description>
 <filename>/usr/lib/gstreamer-0.10/libgstalpha.so</filename>
 <size>20000</size>
 <m32p>1210196830</m32p>
 <version>0.10.7</version>
 <license>LGPL</license>
 <source>gst-plugins-good</source>
 <package>GStreamer Good Plugins (Ubuntu)</package>
 <origin>https://launchpad.net/distros/ubuntu/+source/gst-plugins-good0.10</origin>
 <feature typename="GstElementFactory">
  <name>alpha</name>
  <longname>Alpha filter</longname>
  <class>Filter/Effect/Video</class>
  <description>Adds an alpha channel to video - uniform or via chroma-keying</description>
  <author>Wim Taymans &lt;wim@fluendo.com&gt;
Edward Hervey &lt;edward.hervey@collabora.co.uk&gt;
Jan Schmidt &lt;thaytan@noraisin.net&gt;</author>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>video/x-raw-yuv, format=(fourcc)AYUV, width=(int)[ 1, 2147483647 ], height=(int)[ 1, 2147483647 ], framerate=(fraction)[ 0/1, 2147483647/1 ]; video/x-raw-yuv, format=(fourcc)I420, width=(int)[ 1, 2147483647 ], height=(int)[ 1, 2147483647 ], framerate=(fraction)[ 0/1, 2147483647/1 ]</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>video/x-raw-yuv, format=(fourcc)AYUV, width=(int)[ 1, 2147483647 ], height=(int)[ 1, 2147483647 ], framerate=(fraction)[ 0/1, 2147483647/1 ]</caps>
  </padtemplate>
 </feature>
</plugin>
<plugin>
 <name>annodex</name>
 <description>annodex stream manipulation (info about annodex: http://www.annodex.net)</description>
 <filename>/usr/lib/gstreamer-0.10/libgstannodex.so</filename>
 <size>57856</size>
 <m32p>1210196830</m32p>
 <version>0.10.7</version>
 <license>LGPL</license>
 <source>gst-plugins-good</source>
 <package>GStreamer Good Plugins (Ubuntu)</package>
 <origin>https://launchpad.net/distros/ubuntu/+source/gst-plugins-good0.10</origin>
 <feature typename="GstElementFactory">
  <name>cmmldec</name>
  <rank>256</rank>
  <longname>CMML stream decoder</longname>
  <class>Codec/Decoder</class>
  <description>Decodes CMML streams</description>
  <author>Alessandro Decina &lt;alessandro@nnva.org&gt;</author>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>text/x-cmml, encoded=(boolean)true</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>text/x-cmml, encoded=(boolean)false</caps>
  </padtemplate>
 </feature>
 <feature typename="GstElementFactory">
  <name>cmmlenc</name>
  <longname>CMML streams encoder</longname>
  <class>Codec/Encoder</class>
  <description>Encodes CMML streams</description>
  <author>Alessandro Decina &lt;alessandro@nnva.org&gt;</author>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>text/x-cmml, encoded=(boolean)false</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>text/x-cmml, encoded=(boolean)true</caps>
  </padtemplate>
 </feature>
</plugin>
<plugin>
 <name>auparse</name>
 <description>parses au streams</description>
 <filename>/usr/lib/gstreamer-0.10/libgstauparse.so</filename>
 <size>20768</size>
 <m32p>1210196830</m32p>
 <version>0.10.7</version>
 <license>LGPL</license>
 <source>gst-plugins-good</source>
 <package>GStreamer Good Plugins (Ubuntu)</package>
 <origin>https://launchpad.net/distros/ubuntu/+source/gst-plugins-good0.10</origin>
 <feature typename="GstElementFactory">
  <name>auparse</name>
  <rank>128</rank>
  <longname>AU audio demuxer</longname>
  <class>Codec/Demuxer/Audio</class>
  <description>Parse an .au file into raw audio</description>
  <author>Erik Walthinsen &lt;omega@cse.ogi.edu&gt;</author>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>audio/x-au</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>sometimes</presence>
   <caps>audio/x-raw-int, rate=(int)[ 1, 2147483647 ], channels=(int)[ 1, 2147483647 ], endianness=(int){ 1234, 4321 }, width=(int){ 8, 16, 24, 32 }, depth=(int)[ 1, 32 ], signed=(boolean){ true, false }; audio/x-raw-float, rate=(int)[ 1, 2147483647 ], channels=(int)[ 1, 2147483647 ], endianness=(int){ 1234, 4321 }, width=(int){ 32, 64 }; audio/x-alaw, rate=(int)[ 8000, 192000 ], channels=(int)[ 1, 2 ]; audio/x-mulaw, rate=(int)[ 8000, 192000 ], channels=(int)[ 1, 2 ]; audio/x-adpcm, layout=(string){ g721, g722, g723_3, g723_5 }</caps>
  </padtemplate>
 </feature>
</plugin>
<plugin>
 <name>quicktime</name>
 <description>Quicktime support</description>
 <filename>/usr/lib/gstreamer-0.10/libgstqtdemux.so</filename>
 <size>123200</size>
 <m32p>1210196830</m32p>
 <version>0.10.7</version>
 <license>LGPL</license>
 <source>gst-plugins-good</source>
 <package>GStreamer Good Plugins (Ubuntu)</package>
 <origin>https://launchpad.net/distros/ubuntu/+source/gst-plugins-good0.10</origin>
 <feature typename="GstElementFactory">
  <name>rtpxqtdepay</name>
  <rank>64</rank>
  <longname>RTP packet depayloader</longname>
  <class>Codec/Depayloader/Network</class>
  <description>Extracts Quicktime audio/video from RTP packets</description>
  <author>Wim Taymans &lt;wim@fluendo.com&gt;</author>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>ANY</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>application/x-rtp, payload=(int)[ 96, 127 ], media=(string){ audio, video }, clock-rate=(int)[ 1, 2147483647 ], encoding-name=(string){ X-QT, X-QUICKTIME }</caps>
  </padtemplate>
 </feature>
 <feature typename="GstElementFactory">
  <name>qtdemux</name>
  <rank>256</rank>
  <longname>QuickTime demuxer</longname>
  <class>Codec/Demuxer</class>
  <description>Demultiplex a QuickTime file into audio and video streams</description>
  <author>David Schleef &lt;ds@schleef.org&gt;, Wim Taymans &lt;wim@fluendo.com&gt;</author>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>video/quicktime; audio/x-m4a; application/x-3gp</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>audio_%02d</nametemplate>
   <direction>src</direction>
   <presence>sometimes</presence>
   <caps>ANY</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>video_%02d</nametemplate>
   <direction>src</direction>
   <presence>sometimes</presence>
   <caps>ANY</caps>
  </padtemplate>
 </feature>
</plugin>
<plugin>
 <name>matroska</name>
 <description>Matroska stream handling</description>
 <filename>/usr/lib/gstreamer-0.10/libgstmatroska.so</filename>
 <size>116352</size>
 <m32p>1210196830</m32p>
 <version>0.10.7</version>
 <license>LGPL</license>
 <source>gst-plugins-good</source>
 <package>GStreamer Good Plugins (Ubuntu)</package>
 <origin>https://launchpad.net/distros/ubuntu/+source/gst-plugins-good0.10</origin>
 <feature typename="GstElementFactory">
  <name>matroskamux</name>
  <longname>Matroska muxer</longname>
  <class>Codec/Muxer</class>
  <description>Muxes video/audio/subtitle streams into a matroska stream</description>
  <author>Ronald Bultje &lt;rbultje@ronald.bitfreak.net&gt;</author>
  <padtemplate>
   <nametemplate>video_%d</nametemplate>
   <direction>sink</direction>
   <presence>request</presence>
   <caps>video/mpeg, mpegversion=(int){ 1, 2, 4 }, systemstream=(boolean)false, width=(int)[ 16, 4096 ], height=(int)[ 16, 4096 ], framerate=(fraction)[ 0/1, 2147483647/1 ]; video/x-h264, width=(int)[ 16, 4096 ], height=(int)[ 16, 4096 ], framerate=(fraction)[ 0/1, 2147483647/1 ]; video/x-divx, width=(int)[ 16, 4096 ], height=(int)[ 16, 4096 ], framerate=(fraction)[ 0/1, 2147483647/1 ]; video/x-xvid, width=(int)[ 16, 4096 ], height=(int)[ 16, 4096 ], framerate=(fraction)[ 0/1, 2147483647/1 ]; video/x-huffyuv, width=(int)[ 16, 4096 ], height=(int)[ 16, 4096 ], framerate=(fraction)[ 0/1, 2147483647/1 ]; video/x-dv, width=(int)[ 16, 4096 ], height=(int)[ 16, 4096 ], framerate=(fraction)[ 0/1, 2147483647/1 ]; video/x-h263, width=(int)[ 16, 4096 ], height=(int)[ 16, 4096 ], framerate=(fraction)[ 0/1, 2147483647/1 ]; video/x-msmpeg, width=(int)[ 16, 4096 ], height=(int)[ 16, 4096 ], framerate=(fraction)[ 0/1, 2147483647/1 ]; image/jpeg, width=(int)[ 16, 4096 ], height=(int)[ 16, 4096 ]; video/x-theora; video/x-dirac, width=(int)[ 16, 4096 ], height=(int)[ 16, 4096 ], framerate=(fraction)[ 0/1, 2147483647/1 ]; video/x-raw-yuv, format=(fourcc){ YUY2, I420 }, width=(int)[ 16, 4096 ], height=(int)[ 16, 4096 ], framerate=(fraction)[ 0/1, 2147483647/1 ]</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>audio_%d</nametemplate>
   <direction>sink</direction>
   <presence>request</presence>
   <caps>audio/mpeg, mpegversion=(int)1, layer=(int)[ 1, 3 ], channels=(int)[ 1, 8 ], rate=(int)[ 8000, 96000 ]; audio/mpeg, mpegversion=(int){ 2, 4 }, channels=(int)[ 1, 8 ], rate=(int)[ 8000, 96000 ]; audio/x-ac3, channels=(int)[ 1, 8 ], rate=(int)[ 8000, 96000 ]; audio/x-vorbis, channels=(int)[ 1, 8 ], rate=(int)[ 8000, 96000 ]; audio/x-raw-int, width=(int)8, depth=(int)8, signed=(boolean)false, channels=(int)[ 1, 8 ], rate=(int)[ 8000, 96000 ]; audio/x-raw-int, width=(int)16, depth=(int)16, endianness=(int){ 4321, 1234 }, signed=(boolean)true, channels=(int)[ 1, 8 ], rate=(int)[ 8000, 96000 ]; audio/x-tta, width=(int){ 8, 16, 24 }, channels=(int){ 1, 2 }, rate=(int)[ 8000, 96000 ]</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>subtitle_%d</nametemplate>
   <direction>sink</direction>
   <presence>request</presence>
   <caps>ANY</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>video/x-matroska</caps>
  </padtemplate>
  <interface>GstTagSetter</interface>
 </feature>
 <feature typename="GstElementFactory">
  <name>matroskademux</name>
  <rank>256</rank>
  <longname>Matroska demuxer</longname>
  <class>Codec/Demuxer</class>
  <description>Demuxes a Matroska Stream into video/audio/subtitles</description>
  <author>Ronald Bultje &lt;rbultje@ronald.bitfreak.net&gt;</author>
  <padtemplate>
   <nametemplate>video_%02d</nametemplate>
   <direction>src</direction>
   <presence>sometimes</presence>
   <caps>ANY</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>audio_%02d</nametemplate>
   <direction>src</direction>
   <presence>sometimes</presence>
   <caps>ANY</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>subtitle_%02d</nametemplate>
   <direction>src</direction>
   <presence>sometimes</presence>
   <caps>text/plain; application/x-ssa; application/x-ass; application/x-usf; video/x-dvd-subpicture; application/x-subtitle-unknown</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>video/x-matroska</caps>
  </padtemplate>
 </feature>
</plugin>
<plugin>
 <name>cdio</name>
 <description>Read audio from audio CDs</description>
 <filename>/usr/lib/gstreamer-0.10/libgstcdio.so</filename>
 <size>16440</size>
 <m32p>1210196830</m32p>
 <version>0.10.7</version>
 <license>GPL</license>
 <source>gst-plugins-good</source>
 <package>GStreamer Good Plugins (Ubuntu)</package>
 <origin>https://launchpad.net/distros/ubuntu/+source/gst-plugins-good0.10</origin>
 <feature typename="GstElementFactory">
  <name>cdiocddasrc</name>
  <rank>127</rank>
  <longname>CD audio source (CDDA)</longname>
  <class>Source/File</class>
  <description>Read audio from CD using libcdio</description>
  <author>Tim-Philipp Müller &lt;tim centricular net&gt;</author>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>audio/x-raw-int, endianness=(int)1234, signed=(boolean)true, width=(int)16, depth=(int)16, rate=(int)44100, channels=(int)2</caps>
  </padtemplate>
  <interface>GstURIHandler</interface>
  <uri_type>source</uri_type>
  <uri_protocol>cdda</uri_protocol>
 </feature>
</plugin>
<plugin>
 <name>png</name>
 <description>PNG plugin library</description>
 <filename>/usr/lib/gstreamer-0.10/libgstpng.so</filename>
 <size>37120</size>
 <m32p>1210196830</m32p>
 <version>0.10.7</version>
 <license>LGPL</license>
 <source>gst-plugins-good</source>
 <package>GStreamer Good Plugins (Ubuntu)</package>
 <origin>https://launchpad.net/distros/ubuntu/+source/gst-plugins-good0.10</origin>
 <feature typename="GstElementFactory">
  <name>pngenc</name>
  <longname>PNG image encoder</longname>
  <class>Codec/Encoder/Image</class>
  <description>Encode a video frame to a .png image</description>
  <author>Jeremy SIMON &lt;jsimon13@yahoo.fr&gt;</author>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>video/x-raw-rgb, bpp=(int)32, depth=(int)32, endianness=(int)4321, red_mask=(int)-16777216, green_mask=(int)16711680, blue_mask=(int)65280, alpha_mask=(int)255, width=(int)[ 1, 2147483647 ], height=(int)[ 1, 2147483647 ], framerate=(fraction)[ 0/1, 2147483647/1 ]; video/x-raw-rgb, bpp=(int)24, depth=(int)24, endianness=(int)4321, red_mask=(int)16711680, green_mask=(int)65280, blue_mask=(int)255, width=(int)[ 1, 2147483647 ], height=(int)[ 1, 2147483647 ], framerate=(fraction)[ 0/1, 2147483647/1 ]</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>image/png, width=(int)[ 16, 4096 ], height=(int)[ 16, 4096 ], framerate=(fraction)[ 0/1, 2147483647/1 ]</caps>
  </padtemplate>
 </feature>
 <feature typename="GstElementFactory">
  <name>pngdec</name>
  <rank>256</rank>
  <longname>PNG image decoder</longname>
  <class>Codec/Decoder/Image</class>
  <description>Decode a png video frame to a raw image</description>
  <author>Wim Taymans &lt;wim@fluendo.com&gt;</author>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>video/x-raw-rgb, bpp=(int)32, depth=(int)32, endianness=(int)4321, red_mask=(int)-16777216, green_mask=(int)16711680, blue_mask=(int)65280, alpha_mask=(int)255, width=(int)[ 1, 2147483647 ], height=(int)[ 1, 2147483647 ], framerate=(fraction)[ 0/1, 2147483647/1 ]; video/x-raw-rgb, bpp=(int)24, depth=(int)24, endianness=(int)4321, red_mask=(int)16711680, green_mask=(int)65280, blue_mask=(int)255, width=(int)[ 1, 2147483647 ], height=(int)[ 1, 2147483647 ], framerate=(fraction)[ 0/1, 2147483647/1 ]</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>image/png</caps>
  </padtemplate>
 </feature>
</plugin>
<plugin>
 <name>apetag</name>
 <description>APEv1/2 tag reader</description>
 <filename>/usr/lib/gstreamer-0.10/libgstapetag.so</filename>
 <size>15872</size>
 <m32p>1210196830</m32p>
 <version>0.10.7</version>
 <license>LGPL</license>
 <source>gst-plugins-good</source>
 <package>GStreamer Good Plugins (Ubuntu)</package>
 <origin>https://launchpad.net/distros/ubuntu/+source/gst-plugins-good0.10</origin>
 <feature typename="GstElementFactory">
  <name>apedemux</name>
  <rank>256</rank>
  <longname>APE tag demuxer</longname>
  <class>Codec/Demuxer/Metadata</class>
  <description>Read and output APE tags while demuxing the contents</description>
  <author>Ronald Bultje &lt;rbultje@ronald.bitfreak.net&gt;, Tim-Philipp Müller &lt;tim centricular net&gt;</author>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>sometimes</presence>
   <caps>ANY</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>application/x-apetag</caps>
  </padtemplate>
 </feature>
</plugin>
<plugin>
 <name>effectv</name>
 <description>effect plugins from the effectv project</description>
 <filename>/usr/lib/gstreamer-0.10/libgsteffectv.so</filename>
 <size>39872</size>
 <m32p>1210196830</m32p>
 <version>0.10.7</version>
 <license>LGPL</license>
 <source>gst-plugins-good</source>
 <package>GStreamer Good Plugins (Ubuntu)</package>
 <origin>https://launchpad.net/distros/ubuntu/+source/gst-plugins-good0.10</origin>
 <feature typename="GstElementFactory">
  <name>quarktv</name>
  <longname>QuarkTV effect</longname>
  <class>Filter/Effect/Video</class>
  <description>Motion dissolver</description>
  <author>FUKUCHI, Kentarou &lt;fukuchi@users.sourceforge.net&gt;</author>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>video/x-raw-rgb, bpp=(int)32, depth=(int)24, endianness=(int)4321, red_mask=(int)65280, green_mask=(int)16711680, blue_mask=(int)-16777216, width=(int)[ 1, 2147483647 ], height=(int)[ 1, 2147483647 ], framerate=(fraction)[ 0/1, 2147483647/1 ]; video/x-raw-rgb, bpp=(int)32, depth=(int)24, endianness=(int)4321, red_mask=(int)-16777216, green_mask=(int)16711680, blue_mask=(int)65280, width=(int)[ 1, 2147483647 ], height=(int)[ 1, 2147483647 ], framerate=(fraction)[ 0/1, 2147483647/1 ]</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>video/x-raw-rgb, bpp=(int)32, depth=(int)24, endianness=(int)4321, red_mask=(int)65280, green_mask=(int)16711680, blue_mask=(int)-16777216, width=(int)[ 1, 2147483647 ], height=(int)[ 1, 2147483647 ], framerate=(fraction)[ 0/1, 2147483647/1 ]; video/x-raw-rgb, bpp=(int)32, depth=(int)24, endianness=(int)4321, red_mask=(int)-16777216, green_mask=(int)16711680, blue_mask=(int)65280, width=(int)[ 1, 2147483647 ], height=(int)[ 1, 2147483647 ], framerate=(fraction)[ 0/1, 2147483647/1 ]</caps>
  </padtemplate>
 </feature>
 <feature typename="GstElementFactory">
  <name>revtv</name>
  <longname>RevTV effect</longname>
  <class>Filter/Effect/Video</class>
  <description>A video waveform monitor for each line of video processed</description>
  <author>Wim Taymans &lt;wim.taymans@chello.be&gt;</author>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>video/x-raw-rgb, bpp=(int)32, depth=(int)24, endianness=(int)4321, red_mask=(int)65280, green_mask=(int)16711680, blue_mask=(int)-16777216, width=(int)[ 1, 2147483647 ], height=(int)[ 1, 2147483647 ], framerate=(fraction)[ 0/1, 2147483647/1 ]</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>video/x-raw-rgb, bpp=(int)32, depth=(int)24, endianness=(int)4321, red_mask=(int)65280, green_mask=(int)16711680, blue_mask=(int)-16777216, width=(int)[ 1, 2147483647 ], height=(int)[ 1, 2147483647 ], framerate=(fraction)[ 0/1, 2147483647/1 ]</caps>
  </padtemplate>
 </feature>
 <feature typename="GstElementFactory">
  <name>vertigotv</name>
  <longname>VertigoTV effect</longname>
  <class>Filter/Effect/Video</class>
  <description>A loopback alpha blending effector with rotating and scaling</description>
  <author>Wim Taymans &lt;wim.taymans@chello.be&gt;</author>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>video/x-raw-rgb, bpp=(int)32, depth=(int)24, endianness=(int)4321, red_mask=(int)65280, green_mask=(int)16711680, blue_mask=(int)-16777216, width=(int)[ 1, 2147483647 ], height=(int)[ 1, 2147483647 ], framerate=(fraction)[ 0/1, 2147483647/1 ]</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>video/x-raw-rgb, bpp=(int)32, depth=(int)24, endianness=(int)4321, red_mask=(int)65280, green_mask=(int)16711680, blue_mask=(int)-16777216, width=(int)[ 1, 2147483647 ], height=(int)[ 1, 2147483647 ], framerate=(fraction)[ 0/1, 2147483647/1 ]</caps>
  </padtemplate>
 </feature>
 <feature typename="GstElementFactory">
  <name>shagadelictv</name>
  <longname>ShagadelicTV</longname>
  <class>Filter/Effect/Video</class>
  <description>Oh behave, ShagedelicTV makes images shagadelic!</description>
  <author>Wim Taymans &lt;wim.taymans@chello.be&gt;</author>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>video/x-raw-rgb, bpp=(int)32, depth=(int)24, endianness=(int)4321, red_mask=(int)65280, green_mask=(int)16711680, blue_mask=(int)-16777216, width=(int)[ 1, 2147483647 ], height=(int)[ 1, 2147483647 ], framerate=(fraction)[ 0/1, 2147483647/1 ]</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>video/x-raw-rgb, bpp=(int)32, depth=(int)24, endianness=(int)4321, red_mask=(int)65280, green_mask=(int)16711680, blue_mask=(int)-16777216, width=(int)[ 1, 2147483647 ], height=(int)[ 1, 2147483647 ], framerate=(fraction)[ 0/1, 2147483647/1 ]</caps>
  </padtemplate>
 </feature>
 <feature typename="GstElementFactory">
  <name>warptv</name>
  <longname>WarpTV effect</longname>
  <class>Filter/Effect/Video</class>
  <description>WarpTV does realtime goo&apos;ing of the video input</description>
  <author>Sam Lantinga &lt;slouken@devolution.com&gt;</author>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>video/x-raw-rgb, bpp=(int)32, depth=(int)24, endianness=(int)4321, red_mask=(int)-16777216, green_mask=(int)16711680, blue_mask=(int)65280, width=(int)[ 1, 2147483647 ], height=(int)[ 1, 2147483647 ], framerate=(fraction)[ 0/1, 2147483647/1 ]; video/x-raw-rgb, bpp=(int)32, depth=(int)24, endianness=(int)4321, red_mask=(int)16711680, green_mask=(int)65280, blue_mask=(int)255, width=(int)[ 1, 2147483647 ], height=(int)[ 1, 2147483647 ], framerate=(fraction)[ 0/1, 2147483647/1 ]; video/x-raw-rgb, bpp=(int)32, depth=(int)24, endianness=(int)4321, red_mask=(int)65280, green_mask=(int)16711680, blue_mask=(int)-16777216, width=(int)[ 1, 2147483647 ], height=(int)[ 1, 2147483647 ], framerate=(fraction)[ 0/1, 2147483647/1 ]; video/x-raw-rgb, bpp=(int)32, depth=(int)24, endianness=(int)4321, red_mask=(int)255, green_mask=(int)65280, blue_mask=(int)16711680, width=(int)[ 1, 2147483647 ], height=(int)[ 1, 2147483647 ], framerate=(fraction)[ 0/1, 2147483647/1 ]</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>video/x-raw-rgb, bpp=(int)32, depth=(int)24, endianness=(int)4321, red_mask=(int)-16777216, green_mask=(int)16711680, blue_mask=(int)65280, width=(int)[ 1, 2147483647 ], height=(int)[ 1, 2147483647 ], framerate=(fraction)[ 0/1, 2147483647/1 ]; video/x-raw-rgb, bpp=(int)32, depth=(int)24, endianness=(int)4321, red_mask=(int)16711680, green_mask=(int)65280, blue_mask=(int)255, width=(int)[ 1, 2147483647 ], height=(int)[ 1, 2147483647 ], framerate=(fraction)[ 0/1, 2147483647/1 ]; video/x-raw-rgb, bpp=(int)32, depth=(int)24, endianness=(int)4321, red_mask=(int)65280, green_mask=(int)16711680, blue_mask=(int)-16777216, width=(int)[ 1, 2147483647 ], height=(int)[ 1, 2147483647 ], framerate=(fraction)[ 0/1, 2147483647/1 ]; video/x-raw-rgb, bpp=(int)32, depth=(int)24, endianness=(int)4321, red_mask=(int)255, green_mask=(int)65280, blue_mask=(int)16711680, width=(int)[ 1, 2147483647 ], height=(int)[ 1, 2147483647 ], framerate=(fraction)[ 0/1, 2147483647/1 ]</caps>
  </padtemplate>
 </feature>
 <feature typename="GstElementFactory">
  <name>dicetv</name>
  <longname>DiceTV effect</longname>
  <class>Filter/Effect/Video</class>
  <description>&apos;Dices&apos; the screen up into many small squares</description>
  <author>Wim Taymans &lt;wim.taymans@chello.be&gt;</author>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>video/x-raw-rgb, bpp=(int)32, depth=(int)24, endianness=(int)4321, red_mask=(int)-16777216, green_mask=(int)16711680, blue_mask=(int)65280, width=(int)[ 1, 2147483647 ], height=(int)[ 1, 2147483647 ], framerate=(fraction)[ 0/1, 2147483647/1 ]; video/x-raw-rgb, bpp=(int)32, depth=(int)24, endianness=(int)4321, red_mask=(int)16711680, green_mask=(int)65280, blue_mask=(int)255, width=(int)[ 1, 2147483647 ], height=(int)[ 1, 2147483647 ], framerate=(fraction)[ 0/1, 2147483647/1 ]; video/x-raw-rgb, bpp=(int)32, depth=(int)24, endianness=(int)4321, red_mask=(int)65280, green_mask=(int)16711680, blue_mask=(int)-16777216, width=(int)[ 1, 2147483647 ], height=(int)[ 1, 2147483647 ], framerate=(fraction)[ 0/1, 2147483647/1 ]; video/x-raw-rgb, bpp=(int)32, depth=(int)24, endianness=(int)4321, red_mask=(int)255, green_mask=(int)65280, blue_mask=(int)16711680, width=(int)[ 1, 2147483647 ], height=(int)[ 1, 2147483647 ], framerate=(fraction)[ 0/1, 2147483647/1 ]</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>video/x-raw-rgb, bpp=(int)32, depth=(int)24, endianness=(int)4321, red_mask=(int)-16777216, green_mask=(int)16711680, blue_mask=(int)65280, width=(int)[ 1, 2147483647 ], height=(int)[ 1, 2147483647 ], framerate=(fraction)[ 0/1, 2147483647/1 ]; video/x-raw-rgb, bpp=(int)32, depth=(int)24, endianness=(int)4321, red_mask=(int)16711680, green_mask=(int)65280, blue_mask=(int)255, width=(int)[ 1, 2147483647 ], height=(int)[ 1, 2147483647 ], framerate=(fraction)[ 0/1, 2147483647/1 ]; video/x-raw-rgb, bpp=(int)32, depth=(int)24, endianness=(int)4321, red_mask=(int)65280, green_mask=(int)16711680, blue_mask=(int)-16777216, width=(int)[ 1, 2147483647 ], height=(int)[ 1, 2147483647 ], framerate=(fraction)[ 0/1, 2147483647/1 ]; video/x-raw-rgb, bpp=(int)32, depth=(int)24, endianness=(int)4321, red_mask=(int)255, green_mask=(int)65280, blue_mask=(int)16711680, width=(int)[ 1, 2147483647 ], height=(int)[ 1, 2147483647 ], framerate=(fraction)[ 0/1, 2147483647/1 ]</caps>
  </padtemplate>
 </feature>
 <feature typename="GstElementFactory">
  <name>agingtv</name>
  <longname>AgingTV effect</longname>
  <class>Filter/Effect/Video</class>
  <description>AgingTV adds age to video input using scratches and dust</description>
  <author>Sam Lantinga &lt;slouken@devolution.com&gt;</author>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>video/x-raw-rgb, bpp=(int)32, depth=(int)24, endianness=(int)4321, red_mask=(int)65280, green_mask=(int)16711680, blue_mask=(int)-16777216, width=(int)[ 1, 2147483647 ], height=(int)[ 1, 2147483647 ], framerate=(fraction)[ 0/1, 2147483647/1 ]</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>video/x-raw-rgb, bpp=(int)32, depth=(int)24, endianness=(int)4321, red_mask=(int)65280, green_mask=(int)16711680, blue_mask=(int)-16777216, width=(int)[ 1, 2147483647 ], height=(int)[ 1, 2147483647 ], framerate=(fraction)[ 0/1, 2147483647/1 ]</caps>
  </padtemplate>
 </feature>
 <feature typename="GstElementFactory">
  <name>edgetv</name>
  <longname>EdgeTV effect</longname>
  <class>Filter/Effect/Video</class>
  <description>Apply edge detect on video</description>
  <author>Wim Taymans &lt;wim.taymans@chello.be&gt;</author>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>video/x-raw-rgb, bpp=(int)32, depth=(int)24, endianness=(int)4321, red_mask=(int)65280, green_mask=(int)16711680, blue_mask=(int)-16777216, width=(int)[ 1, 2147483647 ], height=(int)[ 1, 2147483647 ], framerate=(fraction)[ 0/1, 2147483647/1 ]</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>video/x-raw-rgb, bpp=(int)32, depth=(int)24, endianness=(int)4321, red_mask=(int)65280, green_mask=(int)16711680, blue_mask=(int)-16777216, width=(int)[ 1, 2147483647 ], height=(int)[ 1, 2147483647 ], framerate=(fraction)[ 0/1, 2147483647/1 ]</caps>
  </padtemplate>
 </feature>
</plugin>
<plugin>
 <name>wavpack</name>
 <description>Wavpack lossless/lossy audio format handling</description>
 <filename>/usr/lib/gstreamer-0.10/libgstwavpack.so</filename>
 <size>71104</size>
 <m32p>1210196831</m32p>
 <version>0.10.7</version>
 <license>LGPL</license>
 <source>gst-plugins-good</source>
 <package>GStreamer Good Plugins (Ubuntu)</package>
 <origin>https://launchpad.net/distros/ubuntu/+source/gst-plugins-good0.10</origin>
 <feature typename="GstElementFactory">
  <name>wavpackenc</name>
  <longname>Wavpack audio encoder</longname>
  <class>Codec/Encoder/Audio</class>
  <description>Encodes audio with the Wavpack lossless/lossy audio codec</description>
  <author>Sebastian Dröge &lt;slomo@circular-chaos.org&gt;</author>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>audio/x-raw-int, width=(int)32, depth=(int)[ 1, 32 ], endianness=(int)1234, channels=(int)[ 1, 8 ], rate=(int)[ 6000, 192000 ], signed=(boolean)true</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>audio/x-wavpack, width=(int)[ 1, 32 ], channels=(int)[ 1, 2 ], rate=(int)[ 6000, 192000 ], framed=(boolean)true</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>wvcsrc</nametemplate>
   <direction>src</direction>
   <presence>sometimes</presence>
   <caps>audio/x-wavpack-correction, framed=(boolean)true</caps>
  </padtemplate>
 </feature>
 <feature typename="GstElementFactory">
  <name>wavpackdec</name>
  <rank>256</rank>
  <longname>Wavpack audio decoder</longname>
  <class>Codec/Decoder/Audio</class>
  <description>Decodes Wavpack audio data</description>
  <author>Arwed v. Merkatz &lt;v.merkatz@gmx.net&gt;, Sebastian Dröge &lt;slomo@circular-chaos.org&gt;</author>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>audio/x-raw-int, width=(int)32, depth=(int)[ 1, 32 ], channels=(int)[ 1, 8 ], rate=(int)[ 6000, 192000 ], endianness=(int)1234, signed=(boolean)true</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>audio/x-wavpack, width=(int)[ 1, 32 ], channels=(int)[ 1, 8 ], rate=(int)[ 6000, 192000 ], framed=(boolean)true</caps>
  </padtemplate>
 </feature>
 <feature typename="GstElementFactory">
  <name>wavpackparse</name>
  <rank>256</rank>
  <longname>Wavpack parser</longname>
  <class>Codec/Demuxer/Audio</class>
  <description>Parses Wavpack files</description>
  <author>Arwed v. Merkatz &lt;v.merkatz@gmx.net&gt;, Sebastian Dröge &lt;slomo@circular-chaos.org&gt;</author>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>sometimes</presence>
   <caps>audio/x-wavpack, width=(int)[ 1, 32 ], channels=(int)[ 1, 8 ], rate=(int)[ 6000, 192000 ], framed=(boolean)true</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>wvcsrc</nametemplate>
   <direction>src</direction>
   <presence>sometimes</presence>
   <caps>audio/x-wavpack-correction, framed=(boolean)true</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>audio/x-wavpack, framed=(boolean)false; audio/x-wavpack-correction, framed=(boolean)false</caps>
  </padtemplate>
 </feature>
</plugin>
<plugin>
 <name>cutter</name>
 <description>Audio Cutter to split audio into non-silent bits</description>
 <filename>/usr/lib/gstreamer-0.10/libgstcutter.so</filename>
 <size>17376</size>
 <m32p>1210196830</m32p>
 <version>0.10.7</version>
 <license>LGPL</license>
 <source>gst-plugins-good</source>
 <package>GStreamer Good Plugins (Ubuntu)</package>
 <origin>https://launchpad.net/distros/ubuntu/+source/gst-plugins-good0.10</origin>
 <feature typename="GstElementFactory">
  <name>cutter</name>
  <longname>Audio cutter</longname>
  <class>Filter/Editor/Audio</class>
  <description>Audio Cutter to split audio into non-silent bits</description>
  <author>Thomas &lt;thomas@apestaart.org&gt;</author>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>audio/x-raw-int, rate=(int)[ 1, 2147483647 ], channels=(int)[ 1, 2147483647 ], endianness=(int)1234, width=(int){ 8, 16 }, depth=(int){ 8, 16 }, signed=(boolean)true</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>audio/x-raw-int, rate=(int)[ 1, 2147483647 ], channels=(int)[ 1, 2147483647 ], endianness=(int)1234, width=(int){ 8, 16 }, depth=(int){ 8, 16 }, signed=(boolean)true</caps>
  </padtemplate>
 </feature>
</plugin>
<plugin>
 <name>alphacolor</name>
 <description>RGBA to AYUV colorspace conversion preserving the alpha channel</description>
 <filename>/usr/lib/gstreamer-0.10/libgstalphacolor.so</filename>
 <size>11680</size>
 <m32p>1210196830</m32p>
 <version>0.10.7</version>
 <license>LGPL</license>
 <source>gst-plugins-good</source>
 <package>GStreamer Good Plugins (Ubuntu)</package>
 <origin>https://launchpad.net/distros/ubuntu/+source/gst-plugins-good0.10</origin>
 <feature typename="GstElementFactory">
  <name>alphacolor</name>
  <longname>Alpha color filter</longname>
  <class>Filter/Effect/Video</class>
  <description>RGBA to AYUV colorspace conversion preserving the alpha channel</description>
  <author>Wim Taymans &lt;wim@fluendo.com&gt;</author>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>video/x-raw-rgb, bpp=(int)32, depth=(int)32, endianness=(int)4321, red_mask=(int)-16777216, green_mask=(int)16711680, blue_mask=(int)65280, alpha_mask=(int)255, width=(int)[ 1, 2147483647 ], height=(int)[ 1, 2147483647 ], framerate=(fraction)[ 0/1, 2147483647/1 ]; video/x-raw-rgb, bpp=(int)32, depth=(int)32, endianness=(int)4321, red_mask=(int)65280, green_mask=(int)16711680, blue_mask=(int)-16777216, alpha_mask=(int)255, width=(int)[ 1, 2147483647 ], height=(int)[ 1, 2147483647 ], framerate=(fraction)[ 0/1, 2147483647/1 ]</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>video/x-raw-yuv, format=(fourcc)AYUV, width=(int)[ 1, 2147483647 ], height=(int)[ 1, 2147483647 ], framerate=(fraction)[ 0/1, 2147483647/1 ]</caps>
  </padtemplate>
 </feature>
</plugin>
<plugin>
 <name>smpte</name>
 <description>Apply the standard SMPTE transitions on video images</description>
 <filename>/usr/lib/gstreamer-0.10/libgstsmpte.so</filename>
 <size>58112</size>
 <m32p>1210196830</m32p>
 <version>0.10.7</version>
 <license>LGPL</license>
 <source>gst-plugins-good</source>
 <package>GStreamer Good Plugins (Ubuntu)</package>
 <origin>https://launchpad.net/distros/ubuntu/+source/gst-plugins-good0.10</origin>
 <feature typename="GstElementFactory">
  <name>smpte</name>
  <longname>SMPTE transitions</longname>
  <class>Filter/Editor/Video</class>
  <description>Apply the standard SMPTE transitions on video images</description>
  <author>Wim Taymans &lt;wim.taymans@chello.be&gt;</author>
  <padtemplate>
   <nametemplate>sink1</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>video/x-raw-yuv, format=(fourcc)I420, width=(int)[ 1, 2147483647 ], height=(int)[ 1, 2147483647 ], framerate=(fraction)[ 0/1, 2147483647/1 ]</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>sink2</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>video/x-raw-yuv, format=(fourcc)I420, width=(int)[ 1, 2147483647 ], height=(int)[ 1, 2147483647 ], framerate=(fraction)[ 0/1, 2147483647/1 ]</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>video/x-raw-yuv, format=(fourcc)I420, width=(int)[ 1, 2147483647 ], height=(int)[ 1, 2147483647 ], framerate=(fraction)[ 0/1, 2147483647/1 ]</caps>
  </padtemplate>
 </feature>
</plugin>
<plugin>
 <name>videomixer</name>
 <description>Video mixer</description>
 <filename>/usr/lib/gstreamer-0.10/libgstvideomixer.so</filename>
 <size>28544</size>
 <m32p>1210196831</m32p>
 <version>0.10.7</version>
 <license>LGPL</license>
 <source>gst-plugins-good</source>
 <package>GStreamer Good Plugins (Ubuntu)</package>
 <origin>https://launchpad.net/distros/ubuntu/+source/gst-plugins-good0.10</origin>
 <feature typename="GstElementFactory">
  <name>videomixer</name>
  <rank>256</rank>
  <longname>Video mixer</longname>
  <class>Filter/Editor/Video</class>
  <description>Mix multiple video streams</description>
  <author>Wim Taymans &lt;wim@fluendo.com&gt;</author>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>video/x-raw-yuv, format=(fourcc)AYUV, width=(int)[ 1, 2147483647 ], height=(int)[ 1, 2147483647 ], framerate=(fraction)[ 0/1, 2147483647/1 ]</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>sink_%d</nametemplate>
   <direction>sink</direction>
   <presence>request</presence>
   <caps>video/x-raw-yuv, format=(fourcc)AYUV, width=(int)[ 1, 2147483647 ], height=(int)[ 1, 2147483647 ], framerate=(fraction)[ 0/1, 2147483647/1 ]</caps>
  </padtemplate>
  <interface>GstChildProxy</interface>
 </feature>
</plugin>
<plugin>
 <name>udp</name>
 <description>transfer data via UDP</description>
 <filename>/usr/lib/gstreamer-0.10/libgstudp.so</filename>
 <size>49952</size>
 <m32p>1210196831</m32p>
 <version>0.10.7</version>
 <license>LGPL</license>
 <source>gst-plugins-good</source>
 <package>GStreamer Good Plugins (Ubuntu)</package>
 <origin>https://launchpad.net/distros/ubuntu/+source/gst-plugins-good0.10</origin>
 <feature typename="GstElementFactory">
  <name>udpsrc</name>
  <longname>UDP packet receiver</longname>
  <class>Source/Network</class>
  <description>Receive data over the network via UDP</description>
  <author>Wim Taymans &lt;wim@fluendo.com&gt;
Thijs Vermeir &lt;thijs.vermeir@barco.com&gt;</author>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>ANY</caps>
  </padtemplate>
  <interface>GstURIHandler</interface>
  <uri_type>source</uri_type>
  <uri_protocol>udp</uri_protocol>
 </feature>
 <feature typename="GstElementFactory">
  <name>dynudpsink</name>
  <longname>UDP packet sender</longname>
  <class>Sink/Network</class>
  <description>Send data over the network via UDP</description>
  <author>Philippe Khalaf &lt;burger@speedy.org&gt;</author>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>ANY</caps>
  </padtemplate>
 </feature>
 <feature typename="GstElementFactory">
  <name>multiudpsink</name>
  <longname>UDP packet sender</longname>
  <class>Sink/Network</class>
  <description>Send data over the network via UDP</description>
  <author>Wim Taymans &lt;wim.taymans@gmail.com&gt;</author>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>ANY</caps>
  </padtemplate>
 </feature>
 <feature typename="GstElementFactory">
  <name>udpsink</name>
  <longname>UDP packet sender</longname>
  <class>Sink/Network</class>
  <description>Send data over the network via UDP</description>
  <author>Wim Taymans &lt;wim@fluendo.com&gt;</author>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>ANY</caps>
  </padtemplate>
  <interface>GstURIHandler</interface>
  <uri_type>sink</uri_type>
  <uri_protocol>udp</uri_protocol>
 </feature>
</plugin>
<plugin>
 <name>halelements</name>
 <description>elements wrapping the GStreamer/HAL audio input/output devices</description>
 <filename>/usr/lib/gstreamer-0.10/libgsthalelements.so</filename>
 <size>24064</size>
 <m32p>1210196830</m32p>
 <version>0.10.7</version>
 <license>LGPL</license>
 <source>gst-plugins-good</source>
 <package>GStreamer Good Plugins (Ubuntu)</package>
 <origin>https://launchpad.net/distros/ubuntu/+source/gst-plugins-good0.10</origin>
 <feature typename="GstElementFactory">
  <name>halaudiosrc</name>
  <longname>HAL audio source</longname>
  <class>Source/Audio</class>
  <description>Audio source for sound device access via HAL</description>
  <author>Jürg Billeter &lt;j@bitron.ch&gt;</author>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>ANY</caps>
  </padtemplate>
  <interface>GstChildProxy</interface>
 </feature>
 <feature typename="GstElementFactory">
  <name>halaudiosink</name>
  <longname>HAL audio sink</longname>
  <class>Sink/Audio</class>
  <description>Audio sink for sound device access via HAL</description>
  <author>Jürg Billeter &lt;j@bitron.ch&gt;</author>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>ANY</caps>
  </padtemplate>
  <interface>GstChildProxy</interface>
 </feature>
</plugin>
<plugin>
 <name>videobox</name>
 <description>resizes a video by adding borders or cropping</description>
 <filename>/usr/lib/gstreamer-0.10/libgstvideobox.so</filename>
 <size>26368</size>
 <m32p>1210196831</m32p>
 <version>0.10.7</version>
 <license>LGPL</license>
 <source>gst-plugins-good</source>
 <package>GStreamer Good Plugins (Ubuntu)</package>
 <origin>https://launchpad.net/distros/ubuntu/+source/gst-plugins-good0.10</origin>
 <feature typename="GstElementFactory">
  <name>videobox</name>
  <longname>Video box filter</longname>
  <class>Filter/Effect/Video</class>
  <description>Resizes a video by adding borders or cropping</description>
  <author>Wim Taymans &lt;wim@fluendo.com&gt;</author>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>video/x-raw-yuv, format=(fourcc)AYUV, width=(int)[ 1, 2147483647 ], height=(int)[ 1, 2147483647 ], framerate=(fraction)[ 0/1, 2147483647/1 ]; video/x-raw-yuv, format=(fourcc)I420, width=(int)[ 1, 2147483647 ], height=(int)[ 1, 2147483647 ], framerate=(fraction)[ 0/1, 2147483647/1 ]</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>video/x-raw-yuv, format=(fourcc)AYUV, width=(int)[ 1, 2147483647 ], height=(int)[ 1, 2147483647 ], framerate=(fraction)[ 0/1, 2147483647/1 ]; video/x-raw-yuv, format=(fourcc)I420, width=(int)[ 1, 2147483647 ], height=(int)[ 1, 2147483647 ], framerate=(fraction)[ 0/1, 2147483647/1 ]</caps>
  </padtemplate>
 </feature>
</plugin>
<plugin>
 <name>icesink/src</name>
 <description>Ice support through libjingleP2P</description>
 <filename>/usr/lib/gstreamer-0.10/libgstice.so</filename>
 <size>29032</size>
 <m32p>1203101584</m32p>
 <version>0.12.5</version>
 <license>LGPL</license>
 <source>gst-plugins-farsight</source>
 <package>Farsight</package>
 <origin>http://farsight.sf.net/</origin>
 <feature typename="GstElementFactory">
  <name>icesrc</name>
  <longname>ICE packet source</longname>
  <class>Source/Network</class>
  <description>Receive data over the network via libjingle</description>
  <author>Philippe Kalaf &lt;philippe.kalaf@collabora.co.uk&gt;</author>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>ANY</caps>
  </padtemplate>
 </feature>
 <feature typename="GstElementFactory">
  <name>icesink</name>
  <longname>ICE packet sink</longname>
  <class>Sink/Network</class>
  <description>Send data over the network via libjingle</description>
  <author>Philippe Kalaf &lt;philippe.kalaf@collabora.co.uk&gt;</author>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>ANY</caps>
  </padtemplate>
 </feature>
</plugin>
<plugin>
 <name>rtppayloads</name>
 <description>Real-time protocol (RTP) payloaders/depayloader</description>
 <filename>/usr/lib/gstreamer-0.10/libgstrtppayloads.so</filename>
 <size>30432</size>
 <m32p>1203101584</m32p>
 <version>0.12.5</version>
 <license>GPL</license>
 <source>gst-plugins-farsight</source>
 <package>Farsight</package>
 <origin>http://farsight.sf.net</origin>
 <feature typename="GstElementFactory">
  <name>msgsmpayloader</name>
  <longname>RTP MSGSM Audio Payloader</longname>
  <class>Codec/Payloader/Network</class>
  <description>Payloads MSGSM audio into RTP packets</description>
  <author>Philippe Khalaf &lt;burger@speedy.org&gt;</author>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>audio/x-msgsm, rate=(int)8000</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>application/x-rtp, media=(string)audio, payload=(int)102, clock-rate=(int)8000, encoding-name=(string)MSGSM</caps>
  </padtemplate>
 </feature>
 <feature typename="GstElementFactory">
  <name>msgsmdepayloader</name>
  <longname>MSGSM RTP Depayloader</longname>
  <class>Codec/Depayr/Network</class>
  <description>Depayloader for MsGSM RTP streams using GstBaseRTPDepayload</description>
  <author>Philippe Khalaf &lt;burger@speedy.org&gt;</author>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>audio/x-msgsm</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>application/x-rtp, media=(string)audio, payload=(int)[ 0, 255 ], clock-rate=(int)8000, encoding-name=(string)MSGSM</caps>
  </padtemplate>
 </feature>
 <feature typename="GstElementFactory">
  <name>r263depayloader</name>
  <longname>h.263 video RTP Depayloader</longname>
  <class>Codec/Depayr/Network</class>
  <description>Depayloader for H263 RTP streams using GstBaseRTPDepayload</description>
  <author>Philippe Khalaf &lt;burger@speedy.org&gt;</author>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>video/x-h263, framerate=(double)30</caps>
  </padtemplate>
 </feature>
 <feature typename="GstElementFactory">
  <name>rtpdvpay</name>
  <longname>RTP DV Payloader</longname>
  <class>Codec/Payloader/Network</class>
  <description>Payloads DV into RTP packets</description>
  <author>Marcel Moreaux &lt;marcelm@spacelabs.nl&gt;</author>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>video/x-dv, format=(string)PAL</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>application/x-rtp, media=(string)video, clock-rate=(int)9000</caps>
  </padtemplate>
 </feature>
 <feature typename="GstElementFactory">
  <name>rtpdvdepay</name>
  <longname>RTP DV Depayloader</longname>
  <class>Codec/Depayloader/Network</class>
  <description>Depayloads DV from RTP packets</description>
  <author>Marcel Moreaux &lt;marcelm@spacelabs.nl&gt;</author>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>video/x-dv</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>application/x-rtp, media=(string)video, clock-rate=(int)9000</caps>
  </padtemplate>
 </feature>
 <feature typename="GstElementFactory">
  <name>rtpcnpay</name>
  <longname>RTP Confort Noise Payloader</longname>
  <class>Codec/Payloader/Network</class>
  <description>Payloads CN into RTP packets</description>
  <author>Olivier Crete &lt;olivier.crete@collabora.co.uk&gt;</author>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>audio/CN, rate=(int)[ 1, 2147483647 ]</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>application/x-rtp, media=(string)audio, payload=(int)13, clock-rate=(int)8000, encoding-name=(string)CN; application/x-rtp, media=(string)audio, payload=(int)[ 96, 127 ], clock-rate=(int)[ 1, 2147483647 ], encoding-name=(string)CN</caps>
  </padtemplate>
 </feature>
 <feature typename="GstElementFactory">
  <name>rtpcndepay</name>
  <longname>RTP Confort Noise Depayloader</longname>
  <class>Codec/Depayloader/Network</class>
  <description>Extracts CN from RTP packets</description>
  <author>Olivier Crete &lt;olivier.crete@collabora.co.uk&gt;</author>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>application/x-rtp, media=(string)audio, payload=(int)13, clock-rate=(int)8000, encoding-name=(string)CN; application/x-rtp, media=(string)audio, payload=(int)[ 96, 127 ], clock-rate=(int)[ 1, 2147483647 ], encoding-name=(string)CN</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>audio/CN, rate=(int)[ 1, 2147483647 ]</caps>
  </padtemplate>
 </feature>
</plugin>
<plugin>
 <name>netsim</name>
 <description>Network Simulator</description>
 <filename>/usr/lib/gstreamer-0.10/libgstnetsim.so</filename>
 <size>15840</size>
 <m32p>1203101584</m32p>
 <version>0.12.5</version>
 <license>LGPL</license>
 <source>gst-plugins-farsight</source>
 <package>Farsight</package>
 <origin>http://farsight.sf.net</origin>
 <feature typename="GstElementFactory">
  <name>netsim</name>
  <rank>64</rank>
  <longname>Network Simulator</longname>
  <class>Filter/Network</class>
  <description>An element that simulates network jitter, packet loss and packet duplication</description>
  <author>Philippe Kalaf &lt;philippe.kalaf@collabora.co.uk&gt;</author>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>ANY</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>ANY</caps>
  </padtemplate>
 </feature>
</plugin>
<plugin>
 <name>dtmf</name>
 <description>DTMF plugins</description>
 <filename>/usr/lib/gstreamer-0.10/libgstdtmf.so</filename>
 <size>37016</size>
 <m32p>1203101584</m32p>
 <version>0.1</version>
 <license>LGPL</license>
 <source>gst-plugins-farsight</source>
 <package>DTMF</package>
 <origin></origin>
 <feature typename="GstElementFactory">
  <name>dtmfsrc</name>
  <longname>DTMF tone generator</longname>
  <class>Source/Audio</class>
  <description>Generates DTMF tones</description>
  <author>Youness Alaoui &lt;youness.alaoui@collabora.co.uk&gt;</author>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>audio/x-raw-int, width=(int)16, depth=(int)16, endianness=(int)1234, signed=(boolean)true, rate=(int)8000, channels=(int)1</caps>
  </padtemplate>
 </feature>
 <feature typename="GstElementFactory">
  <name>rtpdtmfsrc</name>
  <longname>RTP DTMF packet generator</longname>
  <class>Source/Network</class>
  <description>Generates RTP DTMF packets</description>
  <author>Zeeshan Ali &lt;zeeshan.ali@nokia.com&gt;</author>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>application/x-rtp, media=(string)audio, payload=(int)[ 96, 127 ], clock-rate=(int)[ 0, 2147483647 ], ssrc=(int)[ 0, 2147483647 ], encoding-name=(string)telephone-event</caps>
  </padtemplate>
 </feature>
</plugin>
<plugin>
 <name>jrtp</name>
 <description>Jrtplib plugin</description>
 <filename>/usr/lib/gstreamer-0.10/libgstjrtp.so</filename>
 <size>40624</size>
 <m32p>1203101584</m32p>
 <version>0.12.5</version>
 <license>LGPL</license>
 <source>gst-plugins-farsight</source>
 <package>Farsight</package>
 <origin>http://farsight.sf.net/</origin>
 <feature typename="GstElementFactory">
  <name>rtpsend</name>
  <longname>JRTP Session</longname>
  <class>Manage/RTP</class>
  <description>RTP Send Element, all packets get processed through jrtplib</description>
  <author>Philippe Khalaf &lt;burger@speedy.org&gt;</author>
  <padtemplate>
   <nametemplate>rtpsrc</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>application/x-rtp</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>rtcpsrc</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>application/x-rtcp</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>datasink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>application/x-rtp, clock-rate=(int)[ 1, 2147483647 ]</caps>
  </padtemplate>
 </feature>
 <feature typename="GstElementFactory">
  <name>rtprecv</name>
  <longname>JRTP Session</longname>
  <class>Manage/RTP</class>
  <description>RTP Send Element, all packets get processed through jrtplib</description>
  <author>Philippe Khalaf &lt;burger@speedy.org&gt;</author>
  <padtemplate>
   <nametemplate>rtpsink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>application/x-rtp</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>rtcpsink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>application/x-rtcp</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>datasrc</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>ANY</caps>
  </padtemplate>
 </feature>
 <feature typename="GstElementFactory">
  <name>rtpbin</name>
  <longname>RTP Bin</longname>
  <class>Generic/Bin/RTP</class>
  <description>Encapsulates RTP session management and sending/receiving</description>
  <author>Philippe Khalaf &lt;burger@speedy.org&gt;</author>
  <padtemplate>
   <nametemplate>sink%d</nametemplate>
   <direction>sink</direction>
   <presence>request</presence>
   <caps>application/x-rtp, clock-rate=(int)[ 1, 2147483647 ]</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>src%d</nametemplate>
   <direction>src</direction>
   <presence>request</presence>
   <caps>application/x-rtp</caps>
  </padtemplate>
  <interface>GstChildProxy</interface>
 </feature>
</plugin>
<plugin>
 <name>rtpssrcdemux</name>
 <description>RTP codec SSRC demuxer</description>
 <filename>/usr/lib/gstreamer-0.10/libgstrtpssrcdemux.so</filename>
 <size>13992</size>
 <m32p>1203101584</m32p>
 <version>0.12.5</version>
 <license>LGPL</license>
 <source>gst-plugins-farsight</source>
 <package>Farsight</package>
 <origin>http://farsight.sf.net</origin>
 <feature typename="GstElementFactory">
  <name>rtpssrcdemux</name>
  <longname>RTP SSRC Demux</longname>
  <class>Codec/SsrcDemux/Network</class>
  <description>Demuxes RTP Streams (each with it&apos;s own SSRC) received as a part of the same Multicast group</description>
  <author>Behan Webster &lt;behanw@websterwood.com&gt;</author>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>application/x-rtp, clock-rate=(int)[ 0, 2147483647 ]</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>src%d</nametemplate>
   <direction>src</direction>
   <presence>sometimes</presence>
   <caps>ANY</caps>
  </padtemplate>
 </feature>
</plugin>
<plugin>
 <name>rtpdemux</name>
 <description>RTP codec demuxer</description>
 <filename>/usr/lib/gstreamer-0.10/libgstrtpdemux.so</filename>
 <size>15784</size>
 <m32p>1203101584</m32p>
 <version>0.12.5</version>
 <license>LGPL</license>
 <source>gst-plugins-farsight</source>
 <package>Farsight</package>
 <origin>http://farsight.sf.net</origin>
 <feature typename="GstElementFactory">
  <name>rtpdemux</name>
  <longname>RTP Demux</longname>
  <class>Codec/Demux/Network</class>
  <description>Parses codec streams transmitted in the same RTP session</description>
  <author>Kai Vehmanen &lt;kai.vehmanen@nokia.com&gt;</author>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>application/x-rtp, payload=(int)[ 0, 255 ], clock-rate=(int)[ 0, 2147483647 ]</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>src%d</nametemplate>
   <direction>src</direction>
   <presence>sometimes</presence>
   <caps>ANY</caps>
  </padtemplate>
 </feature>
</plugin>
<plugin>
 <name>rtpjitterbuffer</name>
 <description>RTP Jitter Buffer</description>
 <filename>/usr/lib/gstreamer-0.10/libgstrtpjitterbuffer.so</filename>
 <size>36872</size>
 <m32p>1203101584</m32p>
 <version>0.12.5</version>
 <license>LGPL</license>
 <source>gst-plugins-farsight</source>
 <package>Farsight</package>
 <origin>http://farsight.sf.net</origin>
 <feature typename="GstElementFactory">
  <name>rtpjitterbuffer</name>
  <rank>64</rank>
  <longname>RTP packet jitter-buffer</longname>
  <class>Filter/Network/RTP</class>
  <description>A buffer that deals with network jitter and other transmission faults</description>
  <author>Philippe Kalaf &lt;philippe.kalaf@collabora.co.uk&gt;, Wim Taymans &lt;wim@fluendo.com&gt;</author>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>application/x-rtp</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>application/x-rtp, clock-rate=(int)[ 1, 2147483647 ]</caps>
  </padtemplate>
 </feature>
</plugin>
<plugin>
 <name>rtpmuxer</name>
 <description>RTP Muxer plugins</description>
 <filename>/usr/lib/gstreamer-0.10/libgstrtpmuxer.so</filename>
 <size>20288</size>
 <m32p>1203101584</m32p>
 <version>0.1</version>
 <license>LGPL</license>
 <source>gst-plugins-farsight</source>
 <package>Farsight</package>
 <origin>http://farsight.sf.net</origin>
 <feature typename="GstElementFactory">
  <name>rtpmux</name>
  <longname>RTP muxer</longname>
  <class>Codec/Muxer</class>
  <description>multiplex N rtp streams into one</description>
  <author>Zeeshan Ali &lt;first.last@nokia.com&gt;</author>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>application/x-rtp</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>sink_%d</nametemplate>
   <direction>sink</direction>
   <presence>request</presence>
   <caps>application/x-rtp</caps>
  </padtemplate>
 </feature>
 <feature typename="GstElementFactory">
  <name>rtpdtmfmux</name>
  <longname>RTP muxer</longname>
  <class>Codec/Muxer</class>
  <description>mixes RTP DTMF streams into other RTP streams</description>
  <author>Zeeshan Ali &lt;first.last@nokia.com&gt;</author>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>application/x-rtp</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>sink_%d</nametemplate>
   <direction>sink</direction>
   <presence>request</presence>
   <caps>application/x-rtp</caps>
  </padtemplate>
 </feature>
</plugin>
<plugin>
 <name>msgsm</name>
 <description>msGSM encoder/decoder</description>
 <filename>/usr/lib/gstreamer-0.10/libgstmsgsm.so</filename>
 <size>13504</size>
 <m32p>1203101584</m32p>
 <version>0.12.5</version>
 <license>LGPL</license>
 <source>gst-plugins-farsight</source>
 <package>Farsight</package>
 <origin>http://farsight.sf.net</origin>
 <feature typename="GstElementFactory">
  <name>msgsmenc</name>
  <longname>MS GSM audio encoder</longname>
  <class>Codec/Encoder/Audio</class>
  <description>Encodes MS GSM audio</description>
  <author>Philippe Khalaf &lt;burger@speedy.org&gt;</author>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>audio/x-raw-int, endianness=(int)1234, signed=(boolean)true, width=(int)16, depth=(int)16, rate=(int)8000, channels=(int)1</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>audio/x-msgsm, rate=(int)8000, channels=(int)1</caps>
  </padtemplate>
 </feature>
 <feature typename="GstElementFactory">
  <name>msgsmdec</name>
  <longname>MS GSM audio decoder</longname>
  <class>Codec/Decoder/Audio</class>
  <description>Decodes MS GSM encoded audio</description>
  <author>Philippe Khalaf &lt;burger@speedy.org&gt;</author>
  <padtemplate>
   <nametemplate>sink</nametemplate>
   <direction>sink</direction>
   <presence>always</presence>
   <caps>audio/x-msgsm, rate=(int)8000, channels=(int)1</caps>
  </padtemplate>
  <padtemplate>
   <nametemplate>src</nametemplate>
   <direction>src</direction>
   <presence>always</presence>
   <caps>audio/x-raw-int, endianness=(int)1234, signed=(boolean)true, width=(int)16, depth=(int)16, rate=(int)8000, channels=(int)1</caps>
  </padtemplate>
 </feature>
</plugin>
</GST-PluginRegistry>
