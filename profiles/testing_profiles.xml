<?xml version="1.0" encoding="UTF-8"?>
<media-profiles>
	<audio-profile id="lame-mp3">
		<name>MP3</name>
		<name xml:lang="pt_BR">MP3</name>
		<description>A proprietary and older, but also popular, lossy audio format that produces larger files at lower bitrates.</description>
		<description xml:lang="pt_BR">Um formato de áudio proprietário e mais antigo, mas também popular e com poucas perdas que produz arquivos maiores com taxas de bits mais baixas.</description>
		
		<output-file-extension>mp3</output-file-extension>
		
		
		<mimetype>audio/mp3</mimetype>
		<mimetype>audio/mpeg3</mimetype>

		<pipeline>
			<element id="wav2mpeg" type="encoder">

				<!-- mimetype of src pad, as input mimetype doesn't matter -->
				<mimetype>audio/mpeg</mimetype>

				<!-- gstms will try to find an element with all the given properties below.
				If it doesn't find, just ignore the property, but if more then one gst-element
				can be this element, the winner will be which has more properties existent.	-->
				<property id="quality" type="combobox">
					<choices default-value="5">
						<choice value="0">Best Quality</choice>
						<choice value="5">Default Quality</choice>
						<choice value="9">Worst Quality</choice>
					</choice>
				</property>
			</element>

			<element id="vbrmuxer" type="optional">
				<mimetype>audio/mpeg</mimetype>
			</element>

			<element id="id3mux" type="optional">
				<mimetype>application/x-id3</mimetype>
			</element>

		</pipeline>
	</audio-profile>
    
	<video-profile>
		<name>XviD (MPEG-4 ISO format)</name>
		<description>A video profile</description>
		
		<output-file-extension>avi</output-file-extension>
		<plugin-needed>xvid</plugin-needed>
		
		<mimetype>video/mpeg4</mimetype>
		
		<pipeline>
			<process>
			</process>
		</pipeline>
	
	</video-profile>
</media-profiles>
